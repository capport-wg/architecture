{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2020-09-22T12:51:16.396414+00:00",
  "repo": "capport-wg/architecture",
  "labels": [
    {
      "name": "duplicate",
      "description": null,
      "color": "cccccc"
    },
    {
      "name": "invalid",
      "description": null,
      "color": "e6e6e6"
    },
    {
      "name": "design",
      "description": null,
      "color": "0052cc"
    },
    {
      "name": "has-consensus",
      "description": null,
      "color": "0e8a16"
    },
    {
      "name": "editorial",
      "description": null,
      "color": "bfd4f2"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "MDU6SXNzdWUyNzIzNTEyNjE=",
      "title": "Deprecate or update RFC7710?",
      "url": "https://github.com/capport-wg/architecture/issues/2",
      "state": "CLOSED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "RFC7710 is unclear on what kind of API is to be found at the URI conveyed in the DHCP option.\r\nThis could be clarified, OR deprecated if replaced by PvD.",
      "createdAt": "2017-11-08T21:12:46Z",
      "updatedAt": "2018-06-27T23:48:37Z",
      "closedAt": "2018-06-27T23:48:37Z",
      "comments": [
        {
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think the room temperature in Singapore was that 7710 URIs would still be available for us to use as the API endpoint.  We just need to update 7710 when publish.",
          "createdAt": "2018-01-15T04:08:27Z",
          "updatedAt": "2018-01-15T04:08:27Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@wkumari seemed to be OK with us doing an update/revision if we needed to.",
          "createdAt": "2018-01-15T04:09:03Z",
          "updatedAt": "2018-01-15T04:09:03Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The most recent discussions regarding the API also seem to be trending towards using RFC7710 to discover at least one URI. So, I think we definitely need to keep it. The question is now: do we need to update it? I think that answer will be resolved in the API discussions we're having now.",
          "createdAt": "2018-02-22T01:24:05Z",
          "updatedAt": "2018-02-22T01:24:05Z"
        },
        {
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, the outcome from London was to rev the document.  Warrren and I are working up a 7710bis.",
          "createdAt": "2018-05-02T06:43:02Z",
          "updatedAt": "2018-05-02T06:43:02Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Answer provided: we are updating it. Thanks, @ekline.",
          "createdAt": "2018-06-27T23:48:37Z",
          "updatedAt": "2018-06-27T23:48:37Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "MDU6SXNzdWUyNzIzNTI0OTU=",
      "title": "Clarify Provisioning Domains capport representation",
      "url": "https://github.com/capport-wg/architecture/issues/3",
      "state": "CLOSED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Does PvD mechanism deliver the capport state, or a pointer to the capport API, from which capport state is retrieved?",
      "createdAt": "2017-11-08T21:17:07Z",
      "updatedAt": "2019-01-02T13:34:09Z",
      "closedAt": "2019-01-02T13:34:09Z",
      "comments": [
        {
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In IETF101 capport meeting, I think I heard that PvD is not designed for conveying per-UE state. Hence, PvD may provide a URI to the capport API, but not convey the state itself.",
          "createdAt": "2018-03-20T14:52:08Z",
          "updatedAt": "2018-03-20T14:52:08Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@klarose, is this addressed in #20 in the sense that the referenced doc covers it?",
          "createdAt": "2018-12-31T03:00:53Z",
          "updatedAt": "2018-12-31T03:00:53Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes. I think it is.",
          "createdAt": "2019-01-02T13:34:09Z",
          "updatedAt": "2019-01-02T13:34:09Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "MDU6SXNzdWUyNzIzNTMwMDU=",
      "title": "Mechanism to indicate \"no captive portal\"",
      "url": "https://github.com/capport-wg/architecture/issues/4",
      "state": "CLOSED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The current (RFC7710) DHCP option doesn\u2019t have a way to say \u201cthere\u2019s no captive portal to talk to\u201d, so whenever we don\u2019t see it, we\u2019ll need to send a probe.\r\nGiving a network a means of indicating there is no capport would improve connecting time.\r\nSame for Provisioning Domains info.",
      "createdAt": "2017-11-08T21:18:58Z",
      "updatedAt": "2018-07-19T20:07:44Z",
      "closedAt": "2018-07-19T20:07:44Z",
      "comments": [
        {
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Could we have something like \"urn:capport:unrestricted\" as a positive signal (as opposed to no option or empty strings either of which might be configuration errors)?",
          "createdAt": "2018-01-15T04:12:03Z",
          "updatedAt": "2018-01-15T04:12:03Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ekline That's an interesting idea. It's fairly simple, though it wouldn't work with any legacy implementations of RFC7710 (if there even are any...)\r\n\r\nWould this necessitate an update to the draft? It says that the URI is something the user should connect to. If we give them something that won't accept a connection, is that bad?",
          "createdAt": "2018-02-22T01:30:37Z",
          "updatedAt": "2018-02-22T01:30:37Z"
        },
        {
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think (a) there are likely no significant existing implementations of RFC 7710, neither on the server side nor the client side, and (b) this is a perfectly good bullet point question to ask the group in London if you don't add it to the document or confirm with the group if you do.",
          "createdAt": "2018-02-27T02:08:47Z",
          "updatedAt": "2018-02-27T02:08:47Z"
        },
        {
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@klarose Trying to connect to something that won't accept a connection is, in my opinion, undesirable.\r\nIt's creating an error that might be hard to distinguish from actual network problems. Also, it might take some time to resolve (e.g., how many TCP SYN retransmissions before giving up?)",
          "createdAt": "2018-02-27T17:35:34Z",
          "updatedAt": "2018-02-27T17:35:34Z"
        },
        {
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "body": "No HTTP library should ever try to do any DNS or connection initiations for a urn: URI.  It should fail fast inside the host's code (i.e. no packets emitted).",
          "createdAt": "2018-02-28T08:44:24Z",
          "updatedAt": "2018-02-28T08:44:24Z"
        },
        {
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Does it still look like an error to the application? Would code look like this?\r\n```\r\nif (do_request(uri) == FAIL) {\r\n    if(uri == \"urn:capport:unrestricted\") {  // not an error\r\n        return OK;\r\n    }\r\n    return FAIL;\r\n}\r\n```\r\nIf there is going to be code to check the string, it's better to not do the request.",
          "createdAt": "2018-02-28T13:29:54Z",
          "updatedAt": "2018-02-28T13:29:54Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "What about using PvD to indicate that there's no captive portal?  Or do we think that that's a little too much overhead, given that most networks won't have one?",
          "createdAt": "2018-03-17T10:20:35Z",
          "updatedAt": "2018-03-17T10:20:35Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ekline The RFC7710bis you're working on will tackle this?",
          "createdAt": "2018-06-27T23:50:26Z",
          "updatedAt": "2018-06-27T23:50:26Z"
        },
        {
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Long overdue reply: yes.\r\n\r\n=)\r\n\r\nThere's now even a -00 of it:\r\n\r\n    https://datatracker.ietf.org/doc/draft-ekwk-capport-rfc7710bis/",
          "createdAt": "2018-07-17T02:56:56Z",
          "updatedAt": "2018-07-17T02:56:56Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "MDU6SXNzdWUyNzIzNjUxNTM=",
      "title": "Which portion of packet is used for capport enforcement?",
      "url": "https://github.com/capport-wg/architecture/issues/5",
      "state": "CLOSED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "E.g., MAC address or IP address? Or?\r\nUse of MAC address means enforcement must be on the local layer2 segment.\r\nUse of IP address has complexity around the user device randomly changing the IPv6 address.",
      "createdAt": "2017-11-08T22:00:16Z",
      "updatedAt": "2018-06-29T23:16:37Z",
      "closedAt": "2018-06-29T23:16:37Z",
      "comments": [
        {
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In addition to MAC address it could also be done based on other \"link properties\" like DSL Line ID.",
          "createdAt": "2018-01-15T04:21:59Z",
          "updatedAt": "2018-01-15T04:21:59Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I would like to come up with something generic if possible. What are the properties of the information we're using that are desirable?\r\n* Uniquely identifies the host trying to connect at a given time\r\n* Hard to spoof\r\n* Visible/understood by the API for correlation\r\n* ...\r\n\r\nWhether or not these apply to a given piece of information depends a lot on where the devices are in the network. For example, if the captive portal enforcement *and* API are being applied at a location where the DSL Line ID is known, then using that is sufficient. I'd be sad if we restricted compliant implementations from doing so.\r\n\r\nHowever, if the API were elsewhere in the network, the line ID likely would not be sufficient. So, we again need to allow other options.\r\n\r\nSo, it seems like we need to:\r\n\r\n1.  Recommend a set of properties\r\n2.  Describe how to evaluate whether they apply to a given type of information\r\n3.  Describe how to tie break if a number of pieces of information satisfy the properties.\r\n",
          "createdAt": "2018-02-22T01:49:01Z",
          "updatedAt": "2018-02-22T01:49:01Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It sounds like you are on the right track here.  (The tie break probably isn't necessary as long as you have agreement between the entities that consume/exchange the information,)\r\n\r\nI think that we should expound upon the hard to spoof part more.  The degree of removal from the UE is likely to mean that there are boxes between UE and enforcement/API.  More network hops means that each intermediate node needs to preserve the integrity of the identifier.  For instance, if the network used source IP address, then any intermediate router would have to ensure that the IP address were not spoofed.\r\n\r\nThat means, for instance, knowing that this line ID is assigned a particular IP address and not allowing packets that claim other source IP addresses to pass.  Or, at the next hop, either trusting that the router that forwards the packet has done these checks, and maybe adding extra verification (such as that the IP address comes from the subnet assigned to that router).",
          "createdAt": "2018-02-22T22:16:43Z",
          "updatedAt": "2018-02-22T22:16:43Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Offline, Erik mentioned another option, which is doing what DHCP does and have a trusted agent on the same link (a relay).  For HTTP, redirects and gatewaying are options that preserve visibility of the identification information without requiring lots of effort.",
          "createdAt": "2018-02-23T04:35:24Z",
          "updatedAt": "2018-02-23T04:35:24Z"
        },
        {
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think the write up of key properties a good idea.  I have been thinking of them as \"link attributes\" where the enforcement point can take action on them (e.g DSL line-id, MAC address, or IPv6 prefix is the network architecture is known to the enforcement point).\r\n\r\nFocusing on the requirements for the source of the identifier and its authenticity is obviously integral.\r\n\r\nAnd yes: +1 to giving some concrete examples of how implementation might do this, specifically we should include MAC address and DSL line-id at a minimum.  It's quite likely this section will be valuable for referencing by implementors and requirements docs.",
          "createdAt": "2018-02-27T02:14:40Z",
          "updatedAt": "2018-02-27T02:14:40Z"
        },
        {
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The relay/gateway idea is basically this:\r\n\r\n(a) take as given that the enforcement point must make its decision on some link or network architecture attribute(s) and must be situated at a point where this/these can be observed and acted upon\r\n\r\n(b) observe that (a) means the enforcement is essentially the best source of authenticity for this information (pulling out MAC addresses or whatnot)\r\n\r\n(c) note that enforcement points today already do HTTP rewriting, and that it probably would not be onerous for them to actually be the first API endpoint the client talks to, even over HTTPS\r\n\r\n(d) it can then issue the client a redirect with some identifying information and any authentication tokens required to any off-net API server if the API server is actually not also located within the enforcement point.\r\n\r\nDoes that make sense?",
          "createdAt": "2018-02-27T02:25:43Z",
          "updatedAt": "2018-02-27T03:19:32Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "(Edit FTW)\r\n\r\nAlso, we need to point out that if a redirect is used, then the information will transit the UE and therefore needs integrity protection.  This is tricky and you don't want to end up building a token binding architecture, because we have more than one of those already.  Basically, if the redirect includes information about my identity, then you need to prevent me from giving this to someone else and having them pay for my network access.  The UE needs to know that the API and portal are both able to correctly identify the UE.\r\n\r\nHaving the enforcement point act as a relay (in the DHCP relay sense) or gateway (the HTTP term) might make this more tractable.",
          "createdAt": "2018-02-27T03:24:42Z",
          "updatedAt": "2018-02-27T03:24:42Z"
        },
        {
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed. However, I would expect that presumably there is already a (set of) common authentication mechanism(s) in use today, though, right?\r\n\r\nI mean, whenever I connect to a portal and I see &mac=00:00:5E:00:53:00:xx in the redirected URL I assume there's other bits that are, for example, hmac-signed *or* it's been deemed not important since the only thing you can /currently/ do is pay for someone else's access.",
          "createdAt": "2018-02-27T03:52:00Z",
          "updatedAt": "2018-02-27T03:52:00Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note that an HMAC can only help if the API is able to *see* the identifier as well.  Otherwise, that `&mac=00:00...` thing is a bearer token.  The thing with bearer tokens is that whoever has it can use it.  That's not necessarily a good property.",
          "createdAt": "2018-02-27T03:57:53Z",
          "updatedAt": "2018-02-27T03:57:53Z"
        },
        {
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Spoofing a source IP address doesn't give one network access (responses go to the real owner).\r\nSpoofing allows one to mount an attack and charge it to another user.\r\nIs this problem in scope for capport group, which I thought was more about avoiding HTTP and DNS modifications?",
          "createdAt": "2018-02-27T17:19:26Z",
          "updatedAt": "2018-02-27T17:19:26Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If an IP (or prefix thereof) is used to identify the UE, then the API will see that IP and can use it.  If, as you say, it is spoofed, then connections fail and talking to the API doesn't work.\r\n\r\nBut MAC addresses or line identifiers are different, because they aren't necessarily visible to an API.  That's where the bearer token issue arises.  If the identifier is visible to the API, then it's easy.",
          "createdAt": "2018-02-28T03:05:11Z",
          "updatedAt": "2018-02-28T03:05:11Z"
        },
        {
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I was trying to suggest that using IP address is a pretty good solution. The problems with IP address might be orthogonal to the capport mandate.",
          "createdAt": "2018-02-28T13:32:22Z",
          "updatedAt": "2018-02-28T13:32:22Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I suspect that IP is pretty good, yes.  But I know that other identifiers are used, and we should include text that explains the implications of choosing other than IP.",
          "createdAt": "2018-02-28T21:00:07Z",
          "updatedAt": "2018-02-28T21:00:07Z"
        },
        {
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Enforcing by IP Prefix, where prefixOf(IPv4 address) == /32 and prefixOf(IPv6 address) <= 64, seems likely to be simple for both enforcement and API endpoints (where separate).\r\n\r\nWe can generally depend on return routability as part of connection establishment to address spoofing.  In the futuristic case of a QUIC-enabled API endpoint it might well be possible to issue some commands within a single packet sans return routability.  At the moment the API doesn't really let you do any damage, but this is stuff we should have documented in the relevant security sections.\r\n\r\nLastly, my biggest remaining concern is that folks might erroneously assume that \"IPv6 == 128bit IPv4\", which is just not true (as we know, but some readers might not).  If we were to see deployment of enforcement points that didn't allow clients to form new IPv6 addresses on the same link and use them freely (i.e. without re-authenticating) then that could be seen as violating the spirit of RFC 7934 (and generally be bad for the IPv6 Internet).  I can already imagine the defensive code in Android to use a new IPv6 address for every captive portal API call, just to be sure.  :-/",
          "createdAt": "2018-03-05T09:44:07Z",
          "updatedAt": "2018-03-05T09:44:07Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing this for now, as we discussed at length during the last meeting, with no real conclusions beyond what's already in the document. We can always revisit with more detail or specific recommendations.",
          "createdAt": "2018-06-29T23:16:37Z",
          "updatedAt": "2018-06-29T23:16:37Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "MDU6SXNzdWUyODg0ODM5ODg=",
      "title": "HTTPS",
      "url": "https://github.com/capport-wg/architecture/issues/6",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "It sure would be nice if we could mandate the use of HTTPS for the API.  It would be absolutely necessary if the API were used to exchange secrets.\r\n\r\nHTTPS does make some things a lot harder.  Traps for the unwary lie in:\r\n\r\n* OCSP or CRL validation which require that clients talk to servers that might not be on the whitelist (answer: use OCSP stapling or whitelist those names; the former being far better overall)\r\n* non-unique names like those that use IP addresses or `.local` (possible answer: use real names)\r\n* client clock skew that can't be corrected without contacting a blocked time server (rare but annoyingly hard to fix in practice)",
      "createdAt": "2018-01-15T05:24:45Z",
      "updatedAt": "2018-06-27T23:46:12Z",
      "closedAt": "2018-06-27T23:46:12Z",
      "comments": [
        {
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It might help to clarify the reasons to use HTTPS. Privacy? Authenticating the server? Making auth scheme simpler by permitting basic user/pass method?",
          "createdAt": "2018-02-27T17:37:46Z",
          "updatedAt": "2018-02-27T17:37:46Z"
        },
        {
          "author": "adamroach",
          "authorAssociation": "NONE",
          "body": "@dcdolson -- As a practical matter, browsers are increasingly moving toward warning users about submitting information on non-https pages, [especially passwords](https://support.mozilla.org/en-US/kb/insecure-password-warning-firefox). Starting this summer, Chrome plans to [warn about non-https pages regardless of content](https://techcrunch.com/2018/02/08/chrome-will-soon-mark-all-unencrypted-pages-as-not-secure/). In light of recent trends, it would seem ill-advised to publish a new specification that uses unsecured http.",
          "createdAt": "2018-02-27T17:46:49Z",
          "updatedAt": "2018-02-27T17:46:49Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Aside from Adam's point, which should be sufficient, the confidentiality of any secrets (the API doc has one right now), and integrity of discovery should be good reasons to add.\r\n\r\nOn integrity, anything we do is still vulnerable to the RA or DHCP producing invalid values, but at least that will be the only exposure. The operating theory is that when those are compromised, then you are connecting to whatever network the attacker chooses (as opposed to the network that the person who installed the equipment thinks of).  I don't think that people are currently especially concerned about those attacks, those who deploy the equipment are able to defend against that sort of attack fairly trivially.",
          "createdAt": "2018-02-27T23:27:27Z",
          "updatedAt": "2018-02-27T23:27:27Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Reading through the draft again, we have mentioned that the api MUST _support_ TLS. Is there any particular reason for HTTPS as opposed to TLS? Putting HTTPS constrains the API solutions, so I want to make sure that HTTPS vs some other application layer protocol. \r\n\r\nNow, I highlighted support for a reason. Are we taking issue with that wording? Saying that the API supports TLS does not mean that it must only use TLS. So, I can definitely reword it. But, I think we need some more justification to suggest HTTPS over a more general TLS.",
          "createdAt": "2018-02-28T01:03:26Z",
          "updatedAt": "2018-02-28T01:03:26Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I updated the wording to make TLS required. If we decide on HTTPS vs TLS, I'll make further updates accordingly.\r\n\r\nFor now I've submitted a pull request with this change.",
          "createdAt": "2018-02-28T02:07:57Z",
          "updatedAt": "2018-02-28T02:07:57Z"
        },
        {
          "author": "mcr",
          "authorAssociation": "NONE",
          "body": "I would like integrity and privacy as a MUST.   Just waving some TLS on top of it is not quite enough.\r\nThe points that Martin makes are particularly acute, and I've seen WAY TOO MANY captive portals with expired certificates, or just plain wrong names.   I would rather those portals used HTTP, and yes, failed if the browser considered it insecure.\r\n\r\nOr to put it another way, if there is going to be an override visible to any user, I'd rather it was \"I agree to submit this via HTTP\" rather than \"I agree to pretend I'm using HTTPS, despite having invalid time, no OCSP, and the name being wrong\".\r\n",
          "createdAt": "2018-02-28T22:24:47Z",
          "updatedAt": "2018-02-28T22:24:47Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@mcr I have added a requirement on the API that it must provide integrity and privacy. Does that sufficiently address your concerns, or do you think we should expand a little on concerns about implementations that erroneously claim security/mislead their users? I don't want to be too verbose, but it could help to provide guidance.",
          "createdAt": "2018-03-01T01:26:13Z",
          "updatedAt": "2018-03-01T01:26:13Z"
        },
        {
          "author": "ao-8",
          "authorAssociation": "NONE",
          "body": "I agree \"integrity and privacy as a MUST\" for both API and portal URI(Captive Portal can use HTTPS today, right?).\r\nSince Android 7.0, without success from the https probe they do not use a network automatically. The user needs to manually select it, so I think that HTTPS, TLS, or some way of encryption is needed for capport to improve its user experience, too.",
          "createdAt": "2018-03-01T01:36:18Z",
          "updatedAt": "2018-03-01T01:36:18Z"
        },
        {
          "author": "mcr",
          "authorAssociation": "NONE",
          "body": "Kyle Larose <notifications@github.com> wrote:\n    > @mcr I have added a requirement on the API that it must provide\n    > integrity and privacy. Does that sufficiently address your concerns, or\n    > do you think we should expand a little on concerns about\n    > implementations that erroneously claim security/mislead their users? I\n    > don't want to be too verbose, but it could help to provide guidance.\n\nI will review text....\n\n--\n]               Never tell me the odds!                 | ipv6 mesh networks [\n]   Michael Richardson, Sandelman Software Works        | network architect  [\n]     mcr@sandelman.ca  http://www.sandelman.ca/        |   ruby on rails    [\n\n",
          "createdAt": "2018-03-01T22:12:06Z",
          "updatedAt": "2018-03-01T22:12:06Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "People seemed fairly happy with the results from -01.",
          "createdAt": "2018-06-27T23:46:12Z",
          "updatedAt": "2018-06-27T23:46:12Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "MDU6SXNzdWUzMDE2NDE2MjY=",
      "title": "What to do about ICMP",
      "url": "https://github.com/capport-wg/architecture/issues/8",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We need a firm decision about inclusion or not.  If we include it, then we need a doc defining mechanisms.",
      "createdAt": "2018-03-02T03:29:38Z",
      "updatedAt": "2018-06-29T23:15:01Z",
      "closedAt": "2018-06-29T23:15:01Z",
      "comments": [
        {
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If included, ICMP must only be used as a hint to query the API.\r\nThe UE should rate-limit queries to the API.\r\nExample polocy: even if 1000 ICMP msgs/s, only query the API once every 5s.",
          "createdAt": "2018-03-20T15:12:28Z",
          "updatedAt": "2018-03-20T15:12:28Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We decided in IETF 101 to remove ICMP from being explicitly mentioned, and instead put requirements into the document for a signal.",
          "createdAt": "2018-06-27T23:25:48Z",
          "updatedAt": "2018-06-27T23:25:48Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Removed",
          "createdAt": "2018-06-29T23:15:01Z",
          "updatedAt": "2018-06-29T23:15:01Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "MDU6SXNzdWUzMzkwMjI1MDM=",
      "title": "Make sure there are no references to HTTP in the solution",
      "url": "https://github.com/capport-wg/architecture/issues/11",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As pointed out on the mailing list, there's a few places we refer to an HTTP API. Make sure we don't do that.\r\n\r\n>    This document aims to document consensus on the CAPPORT architecture.\r\n>   DHCP or Router Advertisements, an optional signaling protocol, and an\r\n>  HTTP API are used to provide the solution.  The role of Provisioning\r\n> Domains (PvDs) is described.",
      "createdAt": "2018-07-06T17:47:47Z",
      "updatedAt": "2020-01-28T22:47:17Z",
      "closedAt": "2020-01-28T22:47:16Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It's OK to talk about HTTP when talking about the semantics of the protocol.  You only need to make it clear that HTTP over TCP (without TLS) is not permitted.",
          "createdAt": "2018-07-06T23:05:55Z",
          "updatedAt": "2018-07-06T23:05:55Z"
        },
        {
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "we have the current text:\r\n\r\n> The API MUST use TLS for privacy and server authentication.\r\n> The implementation of the API MUST ensure both privacy and integrity of\r\n> any information provided by or required by it.\r\n\r\n...\r\n\r\n> The solution described here assumes that when the User Equipment needs to\r\n> trust the API server, server authentication will be performed using TLS\r\n> mechanisms.\r\n\r\n...\r\n\r\n> The solution described here requires that the API be secured using TLS.\r\n> This is required to allow the user equipment and API Server to exchange\r\n> secrets which can be used to validate future interactions. The API must\r\n> ensure the integrity of this information, as well as its confidentiality.\r\n\r\nwhat else shall we add please? or shall we explicitly say HTTPS (besides TLS)?",
          "createdAt": "2020-01-27T23:00:54Z",
          "updatedAt": "2020-01-27T23:00:54Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This might have been overtaken by events.  I don't see anything in the current doc that seems problematic.",
          "createdAt": "2020-01-28T10:28:54Z",
          "updatedAt": "2020-01-28T10:28:54Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed. I think we're done with this. I'll close it.",
          "createdAt": "2020-01-28T22:47:16Z",
          "updatedAt": "2020-01-28T22:47:16Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "MDU6SXNzdWUzNDE5NDk4MTg=",
      "title": "Scoping of information",
      "url": "https://github.com/capport-wg/architecture/issues/12",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The information needs to only apply to the current point of network attachment.  That is obvious, perhaps, but worth stating.  Thanks to Warren Kumari.",
      "createdAt": "2018-07-17T14:40:36Z",
      "updatedAt": "2018-12-18T01:15:45Z",
      "closedAt": "2018-12-18T01:15:45Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinthomson Can you take a look at PR #18? I want to make sure I've captured Warren's point properly.",
          "createdAt": "2018-12-16T15:00:18Z",
          "updatedAt": "2018-12-16T15:00:18Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "MDU6SXNzdWUzNDE5NzA4MzU=",
      "title": "Address the non-binary cases",
      "url": "https://github.com/capport-wg/architecture/issues/13",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "There are networks that want to selectively block things.  We aren't going to get consensus on whether that is good practice, but we do have consensus that we don't provide protocol mechanisms for communicating about selective blocking.  Document that fact.",
      "createdAt": "2018-07-17T15:28:51Z",
      "updatedAt": "2018-12-31T02:59:05Z",
      "closedAt": "2018-12-31T02:59:05Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closed in #19.",
          "createdAt": "2018-12-31T02:59:05Z",
          "updatedAt": "2018-12-31T02:59:05Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "MDU6SXNzdWUzNDE5NzEyOTk=",
      "title": "Slim down the text on signaling",
      "url": "https://github.com/capport-wg/architecture/issues/14",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We concluded in Montreal to look at removing details of the signaling protocol that we haven't decided on yet.  For instance, we don't need to describe whether the signal is authenticated.",
      "createdAt": "2018-07-17T15:29:59Z",
      "updatedAt": "2018-12-19T15:55:50Z",
      "closedAt": "2018-12-19T15:55:50Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "NONE",
          "body": "Discussed and generally agreed at IETF 103. We should do this.",
          "createdAt": "2018-11-08T04:35:11Z",
          "updatedAt": "2018-11-08T04:35:11Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "MDU6SXNzdWUzNDE5NzMxMDU=",
      "title": "Describe what happens if the portal URI changes",
      "url": "https://github.com/capport-wg/architecture/issues/15",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Probably not a lot, except that future requests might go there.  Because we don't hold any state for these resources, that's probably OK.",
      "createdAt": "2018-07-17T15:34:25Z",
      "updatedAt": "2020-01-06T04:15:59Z",
      "closedAt": "2020-01-06T04:15:59Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@liucougar do you think that you could take a swing at this?",
          "createdAt": "2019-11-21T10:18:28Z",
          "updatedAt": "2019-11-28T04:49:55Z"
        },
        {
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "By portal URI, you meant the URL to the json file?\r\n\r\nIf so, it seems the ways how it could be changed are:\r\nIn the case of DHCPv4/v6,in a renewal/rebind of DHCPv4/v6 lease, the end user equipment could receive a new portal URI in the DHCP renew/rebind response.\r\nIn the case of RA, the end user device may receive a new portal URI in a new RA message. (In RA case, is it possible that there are multiple RA servers sending out different portal URI?)\r\n\r\nIs there any other possibilities?\r\n\r\nDo I understand correctly that you are suggesting add something like the following?\r\nIf a new Portal URI is provided via DHCPv4/v6 renew/rebind or RA, use the new one.\r\n\r\nWhere shall we add this section please? a new paragraph under 2.2.1.  DHCP or Router Advertisements? or a new sub section 4.3 under 4 Solution Workflow?",
          "createdAt": "2019-11-28T06:52:03Z",
          "updatedAt": "2019-11-28T06:52:03Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Right.  I forget whether this was about the API URL (the JSON) or the user portal URL.  In either case, they can change and I think that's OK.\r\n\r\nThe RA case is interesting in the sense that it might imply a different router advertising different coordinates, as you say, but if it is the same router, then that should be regarded as a change.\r\n\r\nThis came up in discussion and some people felt that it needed to be acknowledged.  Your suggested outcome is probably the only sensible one: if you need to contact the API, use the most recent value you have.\r\n\r\nAs for location in the document, a new Section 4.x describing how updated details can be acquired seems right.",
          "createdAt": "2019-11-28T08:18:48Z",
          "updatedAt": "2019-11-28T08:18:48Z"
        },
        {
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed in #30 ",
          "createdAt": "2020-01-06T04:15:59Z",
          "updatedAt": "2020-01-06T04:15:59Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "MDU6SXNzdWUzNzg1NzU5NjA=",
      "title": "Fix description of PvD usage",
      "url": "https://github.com/capport-wg/architecture/issues/17",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "This text incorrectly describes the PvD JSON as the API JSON. This is incorrect.\r\n\r\n```\r\nAlthough still a work in progress, [I-D.ietf-intarea-provisioning-domains] proposes a mechanism\r\n for User Equipment to be provided with PvD Bootstrap Information containing the URI for\r\n a JSON file containing key-value pairs to be downloaded over HTTPS. This JSON file would\r\n fill the role of the Captive Portal API described in Section 2.3.\r\n```\r\n\r\nWe should also refer to the CAPPORT PvD proposal document which explains this.",
      "createdAt": "2018-11-08T04:36:54Z",
      "updatedAt": "2020-04-01T13:58:51Z",
      "closedAt": "2020-04-01T13:58:50Z",
      "comments": [
        {
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "anything left for this please?",
          "createdAt": "2020-03-31T23:23:03Z",
          "updatedAt": "2020-03-31T23:23:03Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tfpauly?",
          "createdAt": "2020-03-31T23:25:57Z",
          "updatedAt": "2020-03-31T23:25:57Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "NONE",
          "body": "Seems fine to me to close",
          "createdAt": "2020-04-01T13:58:50Z",
          "updatedAt": "2020-04-01T13:58:50Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "MDU6SXNzdWUzOTQ5MjMwMzQ=",
      "title": "API=closed, network=open",
      "url": "https://github.com/capport-wg/architecture/issues/24",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "klarose"
      ],
      "labels": [],
      "body": "David Bird points out:\r\n\r\n> The section titled  \"Risk of Nuisance Captive Portal\" should really be\r\n> talking about networks that USE the API and have NO network integration\r\n> (e.g. Captive by API only, not by any network enforcement function).\r\n\r\nThis is a case we might address.\r\n\r\nWe might reason about this by comparison with imperfect blocking.  Say that a network failed to block your VPN provider, you might see no problem with existing probes if you only used the VPN.  Though many network stacks seem to like to probe before allowing any traffic, this might still happen.",
      "createdAt": "2018-12-31T03:15:20Z",
      "updatedAt": "2020-01-06T22:03:52Z",
      "closedAt": "2020-01-06T22:03:52Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "So, not we're talking about the risk of a nuisance API. I think we had been calling this a non-issue because UE discovers the API from somewhat trusted sources -- DHCP/RA,PvD. \r\n\r\nBut, let's assume that the API is a bad actor for some reason -- discovery was compromised, the API itself was compromised, or it's just plain broken.\r\n\r\nThinking about that case, you could have:\r\n1. The API says that you have access when you don't.\r\n2. The API says that you have access when you do.\r\n3. The API says that you don't have access when you do.\r\n4. The API says that you don't have access when you don't.\r\n\r\nWe don't need to worry about 2. and 4.\r\n\r\nIn case 1. the system will try to access the network and fail. Barring probe functionality, this means that the system will simply fail to attach to the network properly. There's no good solution without user intervention. With probes, I think it works out naturally -- the system will work as it does today.\r\n\r\nIn case 3. the UE will attempt to visit the portal. I can think of a few sub-cases here:\r\na) The URI of the portal is bad/non-existent\r\nb) The URI is present, works and the portal says you have access\r\nc) The URI is present, works and the portal refuses to grant access.\r\n\r\nb) is easy: the UE proceeds with its connection and everything works.\r\n\r\nWe need to consider a) a bit, since it's a fairly likely failure mode. I think it's probably safe to assume that, barring probes, network access is unavailable on this network, and the system should treat it as such.\r\nc) I think this should probably behave the same as a), though it's a bit nicer in that the user has actual feedback.\r\n\r\nIt's a little unfortunate that in the two cases I mentioned above, a) and c), the UE *should* have network access, but it does not give access to the user. So, perhaps the recommendation should be to treat it as though network access is unavailable, barring explicit confirmation from the user to use the network, or confirmation that network access is available through probes.",
          "createdAt": "2019-01-02T18:35:03Z",
          "updatedAt": "2019-01-02T18:35:03Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'll post the above to the mailing list for general comments.",
          "createdAt": "2019-01-02T18:35:33Z",
          "updatedAt": "2019-01-02T18:35:33Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Discussed in Montreal:\r\n\r\nThis is not an issue that we need to address.  However, we do need to remove the word nuisance from the title.",
          "createdAt": "2019-07-22T15:09:26Z",
          "updatedAt": "2019-07-22T15:09:26Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed in #32 ",
          "createdAt": "2020-01-06T22:03:52Z",
          "updatedAt": "2020-01-06T22:03:52Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "MDU6SXNzdWU0MjU4NzY4MTk=",
      "title": "DoH, split horizon, and captive portals",
      "url": "https://github.com/capport-wg/architecture/issues/25",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "In the case that access to an external DNS resolver is permitted, this could complicate the process of contacting the API server.  A recommendation to disable that might be wise.\r\n\r\n(I only included the DoH thing in the title because everyone needs a DoH issue, but this is not really one of those.)",
      "createdAt": "2019-03-27T10:26:42Z",
      "updatedAt": "2020-02-13T21:36:55Z",
      "closedAt": "2020-02-13T21:36:54Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Do we have an example of how it complicates things? It may help to set the context. I'm guessing it's because the API may not be globally addressable/doesn't have an external DNS entry?",
          "createdAt": "2019-03-27T12:53:37Z",
          "updatedAt": "2019-03-27T12:53:37Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Two modes of failure:\r\n\r\n1. Local resolvers might be the only ones that produce an answer that is usable for devices in the network. (This is confirming your guess.)\r\n\r\n2. Remote resolvers might be blocked.",
          "createdAt": "2019-03-28T09:04:00Z",
          "updatedAt": "2019-03-28T09:04:00Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Discussed in Montreal:\r\nGeneral agreement to use the local resolver for the purposes of contacting the captive portal (API, and other pages that stem from that).  The implementation complexities that arise are non-trivial, but we need to at least acknowledge what the right thing to do is.",
          "createdAt": "2019-07-22T14:40:42Z",
          "updatedAt": "2019-07-22T14:40:42Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Also discussed in Singapore and the general view there was that while UE should avoid using an external resolver, we should also recommend that networks not rely on split horizon in order to work.  If the portal API is accessed from outside of the network, it would be better if it worked.  That wasn't a firm requirement, but merely a recognition of the fact that the UE might not always pick the right network path for sending requests (whether they are DNS or HTTP matters little here).",
          "createdAt": "2019-11-28T04:55:51Z",
          "updatedAt": "2019-11-28T04:55:51Z"
        },
        {
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Given #28, is there anything else we want to add for this issue please?",
          "createdAt": "2020-01-29T03:22:49Z",
          "updatedAt": "2020-01-29T03:22:49Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think that #28 is a good approach for addressing this.",
          "createdAt": "2020-01-29T10:50:12Z",
          "updatedAt": "2020-01-29T10:50:12Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "So, it sounds like we're finished with this, then?",
          "createdAt": "2020-02-13T16:32:38Z",
          "updatedAt": "2020-02-13T16:32:38Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yessir.",
          "createdAt": "2020-02-13T21:36:54Z",
          "updatedAt": "2020-02-13T21:36:54Z"
        }
      ]
    },
    {
      "number": 28,
      "id": "MDU6SXNzdWU1MjUzNjI3ODk=",
      "title": "URLs should be context-free",
      "url": "https://github.com/capport-wg/architecture/issues/28",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Based on discussion in Singapore, the group decided to recommend (not require) that URLs use names that can be resolved from the public DNS (no split horizon, etc...).  The content served from those URLs should also not be dependent on the network path, but instead the URL would include all information necessary to produce the resource.",
      "createdAt": "2019-11-20T01:25:21Z",
      "updatedAt": "2020-02-12T03:01:30Z",
      "closedAt": "2020-02-12T03:01:30Z",
      "comments": [
        {
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "i remember we were talking about primarily venue URL should be context free\r\n\r\nhowever, the architecture doc does not mention the venue URL (only portal URL)\r\n\r\nwhich section shall we add this context-free please? (maybe in section_pvd?)\r\n\r\nshall we also mention this in the api doc?",
          "createdAt": "2019-12-31T06:44:33Z",
          "updatedAt": "2019-12-31T06:44:33Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think that @tfpauly might want to think about what to include once we have text here.\r\n\r\nThe text can be generic.  I would suggest a new Section 3.5 as this relates to identification of UE.  That is, you say that information presented in the API - and in particular URLs - need to include identification UE information.  In particular, any information that is used from this context should not depend on ambient information, such as the remote address on a connection, as this information might be used by the UE on a different network interface.  For example, a user might access venue information URLs from another network.\r\n\r\nYou might also then mention that this might expose the service to spoofing or replay of that information in those cases.  This might mean that though the URL might \"work\", it might not present all options.  For instance, payment options might not be offered, or if they are, warnings might be shown that the payment is not for the current connection.",
          "createdAt": "2020-01-01T23:34:16Z",
          "updatedAt": "2020-01-01T23:34:16Z"
        }
      ]
    },
    {
      "number": 29,
      "id": "MDU6SXNzdWU1Mjk3NTkwMjY=",
      "title": "PvD is going to be published first",
      "url": "https://github.com/capport-wg/architecture/issues/29",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "When the document says:\r\n\r\n> Although still a work in progress, [I-D.ietf-intarea-provisioning-domains] \r\n\r\nIt might be better to just remove the lead-in part, since it appears PvD will be published ahead of this document.",
      "createdAt": "2019-11-28T08:19:39Z",
      "updatedAt": "2019-12-29T16:58:26Z",
      "closedAt": "2019-12-29T16:58:26Z",
      "comments": []
    },
    {
      "number": 31,
      "id": "MDU6SXNzdWU1MzU0Nzc1OTY=",
      "title": "Name of the API",
      "url": "https://github.com/capport-wg/architecture/issues/31",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "klarose"
      ],
      "labels": [
        "editorial"
      ],
      "body": "This is a little inconsistent.  I see \"CAPPORT API\" and \"Captive Portal API\", but mostly just \"API\" or \"API server\".\r\n\r\nHaving a short form (API) seems useful.  The longer form probably needs to be \"Captive Portal API\" to avoid having to define what \"CAPPORT\" means.  There seems to be value in distinguishing between the API and the entity that provides it, so maybe the latter distinction is fine to leave alone.",
      "createdAt": "2019-12-10T04:00:27Z",
      "updatedAt": "2020-01-06T22:02:44Z",
      "closedAt": "2020-01-06T22:02:44Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "So \"API\" as short for \"Captive Portal API\" and \"API server\" as short for \"Captive Portal API server\"?\r\n\r\nSeems reasonable.",
          "createdAt": "2019-12-10T19:00:03Z",
          "updatedAt": "2019-12-10T19:00:03Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed in #33\r\n\r\n",
          "createdAt": "2020-01-06T22:02:43Z",
          "updatedAt": "2020-01-06T22:02:43Z"
        }
      ]
    },
    {
      "number": 37,
      "id": "MDU6SXNzdWU1NDUyNTY5ODI=",
      "title": "Error: Cannot handle a <date> with year different than this year, and no month.  Using today's date.",
      "url": "https://github.com/capport-wg/architecture/issues/37",
      "state": "CLOSED",
      "author": "liucougar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "<date year=\"2019\" /> is causing the date error when converting xml to html using xml2rfc",
      "createdAt": "2020-01-04T08:11:48Z",
      "updatedAt": "2020-01-04T21:31:31Z",
      "closedAt": "2020-01-04T21:31:31Z",
      "comments": []
    },
    {
      "number": 40,
      "id": "MDU6SXNzdWU1NjM2OTc2ODU=",
      "title": "Cite 7710bis",
      "url": "https://github.com/capport-wg/architecture/issues/40",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "And remove some of the stuff that is speculative from SS2.2.1.",
      "createdAt": "2020-02-12T02:32:20Z",
      "updatedAt": "2020-02-13T00:00:24Z",
      "closedAt": "2020-02-13T00:00:24Z",
      "comments": []
    },
    {
      "number": 41,
      "id": "MDU6SXNzdWU1NjM2OTk0NjQ=",
      "title": "Doc has lots of lowercase \"must\" and \"should\"",
      "url": "https://github.com/capport-wg/architecture/issues/41",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "liucougar"
      ],
      "labels": [],
      "body": "A scrub for these to determine which are really requirements is a good idea.\r\n\r\nAlso, update SS1.1 to use RFC 8174 boilerplate.",
      "createdAt": "2020-02-12T02:37:01Z",
      "updatedAt": "2020-04-16T22:02:01Z",
      "closedAt": "2020-04-16T22:02:01Z",
      "comments": []
    },
    {
      "number": 46,
      "id": "MDU6SXNzdWU1NjQzOTAxNjM=",
      "title": "[nit] clarify \"Public DNS\" in 3.4.3 (context-free url)",
      "url": "https://github.com/capport-wg/architecture/issues/46",
      "state": "CLOSED",
      "author": "ekline",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "liucougar"
      ],
      "labels": [],
      "body": "https://datatracker.ietf.org/doc/html/rfc8499#section-2 provides a definition of \"Global DNS\" to which we might want to link.",
      "createdAt": "2020-02-13T01:57:39Z",
      "updatedAt": "2020-04-02T21:23:01Z",
      "closedAt": "2020-04-02T21:23:01Z",
      "comments": []
    },
    {
      "number": 48,
      "id": "MDU6SXNzdWU1NzczODcyMjI=",
      "title": "I-D.nottingham-capport-problem is still referenced",
      "url": "https://github.com/capport-wg/architecture/issues/48",
      "state": "CLOSED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "klarose"
      ],
      "labels": [],
      "body": "This paragraph still exists in the document:\r\n   Problems with captive portal implementations have been described in\r\n   [I-D.nottingham-capport-problem].  [If that document cannot be\r\n   published, consider putting its best parts into an appendix of this\r\n   document.]\r\nMaybe pull in sections 3 & 4 from https://tools.ietf.org/html/draft-nottingham-capport-problem-01 ?\r\n",
      "createdAt": "2020-03-07T19:19:01Z",
      "updatedAt": "2020-04-06T22:47:56Z",
      "closedAt": "2020-04-06T22:47:56Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinthomson I'm fine taking Dave's suggestion to pull in those sections. However, I'm not sure of the best way to attribute the content to that original document/its author. I imagine simply acknowledging Mark is sufficient, but if there is a better practice, please let me know.",
          "createdAt": "2020-04-01T21:50:24Z",
          "updatedAt": "2020-04-01T21:50:34Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Though I am somewhat concerned that it's a lot of text, and could be contentious if we're adding it after last call. For example statements like the one about access only being possible to steal in an insecure wireless network--I'm not convinced that's actually true. Given that this document wasn't really vetted, perhaps it'd be better to just try to summarize in the intro some of the more salient points.",
          "createdAt": "2020-04-01T22:08:13Z",
          "updatedAt": "2020-04-01T22:08:13Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, if we pull in additional text, then I might feel obligated to run another last call.  We can ask Mark for permission (not at-mentioning here yet), but I want to understand what this document lacks that Mark's has.  My sense is that the text can be just cut, or the problem statement summarized in one of two paragraphs.",
          "createdAt": "2020-04-02T01:08:44Z",
          "updatedAt": "2020-04-02T01:08:44Z"
        },
        {
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Good question. I think the nottingham problem statement was very useful for thinking about the problem and what to avoid. But we do have the guiding principles in the introduction.\r\nIt would certainly be easier to just drop the mention of it, and focus on what should be vs. what should not be.",
          "createdAt": "2020-04-02T01:22:32Z",
          "updatedAt": "2020-04-02T01:22:32Z"
        }
      ]
    },
    {
      "number": 50,
      "id": "MDU6SXNzdWU1ODU4MzkzMjM=",
      "title": "Add architecture notes about server authentication requirements",
      "url": "https://github.com/capport-wg/architecture/issues/50",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "liucougar"
      ],
      "labels": [],
      "body": "The CAPPORT API document explains some requirements on deployments to allow certificate validation of servers, specifically in Section 4.1.1. Server Authentication. Last call comments noted that the architecture should have notes that such provisions are needed.",
      "createdAt": "2020-03-22T23:21:07Z",
      "updatedAt": "2020-04-20T22:00:42Z",
      "closedAt": "2020-04-20T22:00:42Z",
      "comments": []
    },
    {
      "number": 52,
      "id": "MDU6SXNzdWU1OTE0NTQ2Nzg=",
      "title": "Shrink signalling section",
      "url": "https://github.com/capport-wg/architecture/issues/52",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "klarose"
      ],
      "labels": [],
      "body": "As suggested by @martinthomson :\r\n\r\n```\r\n--->8--\r\nWhen User Equipment first connects to a network, or when there are changes in status, the Enforcement Device could generate a signal toward the User Equipment.  This signal indicates that the User Equipment might need to contact the API Server to receive updated information.  For instance, this signal might be generated when the end of a session is imminent.\r\n\r\nAn Enforcement Device MUST rate limit any signal; User Equipment MUST rate limit attempts to contact the API Server; see Section 7.4.\r\n--8<---\r\n```\r\n\r\nDo a pass through the document with this text in mind and make sure it makes sense. Clean up anything that may have depended on removed text.",
      "createdAt": "2020-03-31T21:50:33Z",
      "updatedAt": "2020-04-07T21:53:06Z",
      "closedAt": "2020-04-07T21:53:06Z",
      "comments": []
    },
    {
      "number": 60,
      "id": "MDU6SXNzdWU2MDcxNzUyNzc=",
      "title": "Fix inconsistent use of Captive Portal Enforcement",
      "url": "https://github.com/capport-wg/architecture/issues/60",
      "state": "CLOSED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "klarose"
      ],
      "labels": [],
      "body": "Used in different ways: Captive Portal Enforcement, enforcement device, etc.",
      "createdAt": "2020-04-27T01:57:04Z",
      "updatedAt": "2020-05-11T15:15:57Z",
      "closedAt": "2020-05-11T15:15:57Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think keeping it shorter is likely better. `Enforcement Device`? Caps to make it clear it's a first class component in the architecture?",
          "createdAt": "2020-04-27T21:19:30Z",
          "updatedAt": "2020-04-27T21:19:30Z"
        }
      ]
    },
    {
      "number": 61,
      "id": "MDU6SXNzdWU2MDcxODYwNTk=",
      "title": "Clarify \"supports the present architecture\"",
      "url": "https://github.com/capport-wg/architecture/issues/61",
      "state": "CLOSED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "klarose"
      ],
      "labels": [],
      "body": "A reviewer says,\r\n```\r\n> \u2014 Section 2.3 \u2014\r\n> \r\n>    The API SHOULD provide evidence\r\n>    to the caller that it supports the present architecture.\r\n> \r\n> I don\u2019t understand what this means; can you explain?\r\n```\r\nSuggestion: state that a version of the protocol should be included in the API response.\r\n",
      "createdAt": "2020-04-27T02:34:21Z",
      "updatedAt": "2020-05-11T15:15:50Z",
      "closedAt": "2020-05-11T15:15:50Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Isn't the content-type of the API response sufficient indication?\r\n\r\nThat implies that we might need a new content-type if we want to make incompatible changes in a subsequent revision, but I think that is a good plan.",
          "createdAt": "2020-04-27T05:00:40Z",
          "updatedAt": "2020-04-27T05:00:40Z"
        },
        {
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "At the architecture level, can we state the point more clearly?\r\nMaybe better to state what the User Equipment should do if the API response doesn't make sense?",
          "createdAt": "2020-04-27T14:29:38Z",
          "updatedAt": "2020-04-27T14:29:38Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "So, the fact that we've discovered the API likely means that we're interacting with the architecture -- i.e. we got there from PvD or the dhcp option. So, I'm not sure what it would mean to not support the architecture in that case. It would be a provisioning mistake, I guess? We should suggest what the UE could do in that case, though, for robustness. So, maybe mention that the API should have a content-type in the response to indicate that it is indeed a captive portal API, and then what to do if the UE doesn't recognize that?",
          "createdAt": "2020-04-29T12:29:50Z",
          "updatedAt": "2020-04-29T12:29:50Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "So I think that the reviewer here was simply confused about the choice of words and phrasing.  How about:\r\n\r\nA caller to the API needs to be presented with evidence that the content it is receiving is for a version of the API that it supports.  For an HTTP-based interaction, such as in {{API}} this might be achieved by using a content type that is unique to the protocol.\r\n",
          "createdAt": "2020-04-29T23:11:50Z",
          "updatedAt": "2020-04-29T23:11:50Z"
        }
      ]
    },
    {
      "number": 62,
      "id": "MDU6SXNzdWU2MDcxOTg5Nzc=",
      "title": "Confusing \"Evaluating an Identifier\" section.",
      "url": "https://github.com/capport-wg/architecture/issues/62",
      "state": "CLOSED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A reviewer writes,\r\n```\r\n> \u2014 Section 3.3 \u2014\r\n> Are we really talking about evaluating individual identifiers here?\r\n> Or does this really mean to discuss *methods* of generating or\r\n> choosing identifiers?\r\n```\r\nI think we should rewrite this section to be about evaluating types of identifiers or sources of identifiers.",
      "createdAt": "2020-04-27T03:15:24Z",
      "updatedAt": "2020-05-06T12:01:24Z",
      "closedAt": "2020-05-06T12:01:24Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed. It's ambiguous as to whether we're describe how to evaluate `2001:db8::` equals `00:11:22:33:44:55`, or whether we're talking about the types (ip vs ethernet)",
          "createdAt": "2020-04-27T21:16:36Z",
          "updatedAt": "2020-04-27T21:16:36Z"
        }
      ]
    },
    {
      "number": 63,
      "id": "MDU6SXNzdWU2MDcyMDA5Mzk=",
      "title": "What is the intent of the context-free URL section?",
      "url": "https://github.com/capport-wg/architecture/issues/63",
      "state": "CLOSED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A reviewer writes,\r\n```\r\n> \u2014 Section 3.4.3 \u2014\r\n> Is this section talking about using a context-free URI as a UE\r\n> identifier?  It should be clearer about that, if so (and if that\u2019s not\r\n> what it\u2019s about, the section is misplaced).  There\u2019s nothing in here\r\n> that discusses how such identifiers would meet the specified criteria.\r\n```\r\n\r\nI think this is trying to say the server should not be looking at\r\nEthernet addresses, for example, because the server is probably not\r\non the same subnet as the User Equipment. So the info needs to be\r\nin the URL.\r\n\r\nFigure out what we're trying to say, and whether this is the right section for it.",
      "createdAt": "2020-04-27T03:20:55Z",
      "updatedAt": "2020-05-06T12:01:29Z",
      "closedAt": "2020-05-06T12:01:29Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That's exactly what it's talking about.\r\n\r\nThat said, while it is related to identifying the UE, it's not an example identifier.\r\n\r\nIt has been a while since I thought about this, and I wasn't at the meeting where it was discussed, but I think the intention here was to limit any URIs provide in the API to these context-free URIs. That is, the resource pointed to by the URI cannot depend on information not present in the URI.  For example, the API draft (https://tools.ietf.org/html/draft-ietf-capport-api-07#section-5) provides a 'user-portal-url'.\r\n\r\nSuppose that URL is \"captive-portal.example.com/login\". That resource could be implemented by checking the source ethernet address of the connection to see if you're already logged in. But, that won't be correct if you're not in the same subnet.\r\n\r\nInstead, the URL should be something like: \"captive-portal.example.com/login?id=<user-equipment-id>\"\r\n\r\n\r\nSo, this is more of a constraint on the API and how it uses identifiers than an example of an identifier. Did we just get the indentation wrong? Or was this a misunderstanding of what the working group requested?",
          "createdAt": "2020-04-27T21:08:30Z",
          "updatedAt": "2020-04-27T21:08:30Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Maybe all this needs is a preface explaining how some systems operate.\r\n\r\n> A captive portal API needs to present information to clients that is unique to that client.  To do this, some systems use information from the context of a request, such as the source address, to identify the UE.\r\n>\r\n> Using information from context rather than information from the URI allows the same URI to be used for different clients.  However, it also means that the resource is unable to provide relevant information if the UE makes a request using a different network path.  This might happen when UE has multiple network interfaces.  It might also happen if the address of the API provided by DNS depends on where the query originates (as split DNS {{?RFC8499}}).\r\n>\r\n> Accessing the API MAY depend on contextual information.  However, the URLs provided in the API SHOULD be unique to the UE and not dependent on contextual information to function correctly.\r\n>\r\n> Though a URL might still correctly resolve when the UE makes the request from a different network, it is possible that some functions could be limited to when the UE makes requests using the captive network. For example, payment options could be absent or a warning could be displayed to indicate the payment is not for the current connection.\r\n>\r\n> URLs could include some means of identifying the User Equipment in the URLs.  However, including unauthenticated User Equipment identifiers in the URL may expose the service to spoofing or replay attacks.\r\n\r\nThe last two paragraphs are a direct copy of existing text.",
          "createdAt": "2020-04-29T23:23:31Z",
          "updatedAt": "2020-04-29T23:23:31Z"
        }
      ]
    },
    {
      "number": 64,
      "id": "MDU6SXNzdWU2MDkwMTMxOTM=",
      "title": "Consistently use URI (in place of URL)",
      "url": "https://github.com/capport-wg/architecture/issues/64",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Multiple reviewers have suggested that we use URI instead of URL.\r\n\r\n> But that's backward: the IETF formally defines \"URI\" [RFC3986], not\r\n> \"URL\", and that document says [Section 1.1.3]:\r\n> \r\n>    Future specifications and related documentation should\r\n>    use the general term \"URI\" rather than the more restrictive terms\r\n>    \"URL\" and \"URN\"\r\n> \r\n> (Additionally, we should probably include an informative reference to\r\n> 3986 on first use of the term.)\r\n\r\nI think we should make this change, and add the informative reference.",
      "createdAt": "2020-04-29T12:21:08Z",
      "updatedAt": "2020-05-04T22:24:10Z",
      "closedAt": "2020-05-04T22:24:10Z",
      "comments": []
    },
    {
      "number": 71,
      "id": "MDU6SXNzdWU2MTYyMzQyMjY=",
      "title": "Is the URI mandatory?",
      "url": "https://github.com/capport-wg/architecture/issues/71",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Tirupachur Comerica, Subash writes:\r\n\r\n> At minimum, the API MUST provide: (1) the state of captivity and (2) a URI for the Captive Portal Server.\r\n>\r\n> - However, in draft-ietf-capport-api, section 5: API State Structure, only \"captive\" (boolean): is mandatory whereas \"user-portal-url\" (string): is optional. One of these two drafts may need an update for consistency.\r\n\r\n",
      "createdAt": "2020-05-11T22:41:28Z",
      "updatedAt": "2020-06-16T13:31:29Z",
      "closedAt": "2020-06-16T13:30:34Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This was also brought up by Martin Duke during the the api document's last call. Let's fix it.\r\n\r\nTwo options were raised during that review (by Tommy and Erik, respectively):\r\n - Require that the API be *able* to provide the URI\r\n - Qualify the requirement to indicate when the URI is required (e.g. when captive portal enforcement may be active).\r\n\r\nSome proposals:\r\n\r\n```\r\nAt minimum, the API MUST provide the state of captivity. Further the API MUST be able to provide\r\na URI for the Captive Portal Server. \r\n```\r\n\r\n```\r\nAt minimum, the API MUST provide the state of captivity. Further the API MUST also provide\r\na URI for the Captive Portal Server when captive portal enforcement may be active.\r\n```\r\n\r\nI'm not sure it's worth discussing the use-case that leads to it being useful for it to be optional (e.g. the venue w/ notification or extra info). ",
          "createdAt": "2020-06-08T12:19:40Z",
          "updatedAt": "2020-06-08T12:19:40Z"
        },
        {
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We went with the first proposal, \"the API MUST be able to provide a URI\"",
          "createdAt": "2020-06-16T13:31:29Z",
          "updatedAt": "2020-06-16T13:31:29Z"
        }
      ]
    },
    {
      "number": 72,
      "id": "MDU6SXNzdWU2MTYyMzQ3NTg=",
      "title": "Network vs. Portal",
      "url": "https://github.com/capport-wg/architecture/issues/72",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Tirupachur Comerica, Subash writes:\r\n\r\n> Captive Network and Captive Portal are used interchangeably, so do we define captive portal or network or both?\r\n\r\nI think that this is clear: one is a network and the other a server.  Review to see if the right choice is used throughout.  ...or point out that we assume a degree of mutual control over both.",
      "createdAt": "2020-05-11T22:42:50Z",
      "updatedAt": "2020-08-06T11:48:53Z",
      "closedAt": "2020-08-06T11:48:53Z",
      "comments": []
    },
    {
      "number": 73,
      "id": "MDU6SXNzdWU2MTYyMzU0ODM=",
      "title": "Collocation of functions",
      "url": "https://github.com/capport-wg/architecture/issues/73",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Tirupachur Comerica, Subash writes:\r\n\r\n> Although the Provisioning Service, API Server, and Web Portal Server functions are shown as discrete blocks, they could of course be combined into a single element.\r\n\r\nWe could say that this architecture is a description of functions and that multiple functions might be provided by the same entity.  Not sure.  Will leave to editorial discretion.",
      "createdAt": "2020-05-11T22:44:37Z",
      "updatedAt": "2020-06-16T04:05:20Z",
      "closedAt": "2020-06-16T04:05:20Z",
      "comments": []
    },
    {
      "number": 74,
      "id": "MDU6SXNzdWU2MTY2MDc0MTM=",
      "title": "Language implying that the document is a standard",
      "url": "https://github.com/capport-wg/architecture/issues/74",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "S. Moonesamy writes:\r\n\r\n> I took a quick look at the draft. \u00a0The third paragraph in the\r\n> Introduction section states that the document standardizes an\r\n> architecture for implementing captive portals. \u00a0Does it \u00a0meant that\r\n> this draft is intended to be a standard?\r\n>\r\n\r\nThis is intended to be informational. We should rephrase.",
      "createdAt": "2020-05-12T12:13:42Z",
      "updatedAt": "2020-06-16T13:18:58Z",
      "closedAt": "2020-06-16T13:18:58Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Joel Halpern also pointed this out in the genart review.",
          "createdAt": "2020-05-19T15:21:48Z",
          "updatedAt": "2020-05-19T15:21:48Z"
        }
      ]
    },
    {
      "number": 75,
      "id": "MDU6SXNzdWU2MTY2MjA4NzM=",
      "title": "Confusion regarding the document's principles",
      "url": "https://github.com/capport-wg/architecture/issues/75",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "S. Moonesamy writes\r\n\r\n> The principles listed to guide the architecture looks more like\r\n> requirements. \u00a0Anyone who has been at an airport understands that\r\n> existing protocols are being intercepted, forged, broken, etc. to get\r\n> to reach the user to go through the \"captive\" experience. \u00a0The\r\n> \"SHOULD NOT\" (why are the words in uppercase?) comes out as a\r\n> principle that \"one should follow the existing standards\".\r\n>\r\n> What are there \"MAY\" principles?\r\n>\r\n\r\n\r\nIt sounds like there is some confusion around the purpose/intent of this section. We should consider how to rephrase/restructure so that we still guide solutions without confusing the reader.",
      "createdAt": "2020-05-12T12:35:43Z",
      "updatedAt": "2020-07-03T19:36:07Z",
      "closedAt": "2020-07-03T19:36:07Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "One approach I suggested in my reply to the feedback:\r\n\r\n> Perhaps we shouldn't be calling these principles, but rather the requirements the document isplacing on a solution that will lead to a good outcome.",
          "createdAt": "2020-05-12T12:36:14Z",
          "updatedAt": "2020-05-12T12:37:23Z"
        }
      ]
    },
    {
      "number": 76,
      "id": "MDU6SXNzdWU2MjA5MzUyMzU=",
      "title": "capport/captive portal",
      "url": "https://github.com/capport-wg/architecture/issues/76",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Joel Halpern writes,\r\n\r\n> \u00a0 \u00a0 The abstract really should expand \"capport\". \u00a0 As simple as having the\r\n> \u00a0 \u00a0 first sentence read \"This document describes a \"captive portal\" (capport)\r\n> \u00a0 \u00a0 archtiecture.\"\r\n\r\n\r\nWe should do this.",
      "createdAt": "2020-05-19T12:26:27Z",
      "updatedAt": "2020-06-16T13:15:48Z",
      "closedAt": "2020-06-16T13:15:48Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Or erase all mentions of 'capport'",
          "createdAt": "2020-05-19T21:20:57Z",
          "updatedAt": "2020-05-19T21:20:57Z"
        }
      ]
    },
    {
      "number": 77,
      "id": "MDU6SXNzdWU2MjA5MzcxMjM=",
      "title": "Document that we are not describing how to escape captivity",
      "url": "https://github.com/capport-wg/architecture/issues/77",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "On page 4: \r\n\r\n> However, this document does not yet describe a mechanism\r\n>    for such devices to escape captivity.\r\n\r\nJoel Halpern writes,\r\n> \u00a0 \u00a0 Following the first bulleted list in the introduction, the document reads:\r\n> \u00a0 \u00a0 \"this document does not yet describe...? \u00a0The word \"yet\" seems\r\n> \u00a0 \u00a0 inappropriate. \u00a0We are pbulsihgin this as an RFC. \u00a0Please remove the \"yet\".\r\n>\r\n\r\nWe should take his feedback here.\r\n",
      "createdAt": "2020-05-19T12:29:27Z",
      "updatedAt": "2020-06-17T11:37:45Z",
      "closedAt": "2020-06-17T11:37:45Z",
      "comments": []
    },
    {
      "number": 78,
      "id": "MDU6SXNzdWU2MzQ1Njk2MDU=",
      "title": "New, consistent term for Captive Portal Server",
      "url": "https://github.com/capport-wg/architecture/issues/78",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Some reviewers have found \"Captive Portal Server\" to be confusing when read alongside \"Captive Portal API Server\". Let's change it to something a bit more distinct. \r\n\r\nTommy Pauly has suggested \"user portal\", which seems reasonable.\r\n\r\nWhile we're in there, make sure we're consistent with this use. It was also pointed out that we used \"web portal\" in quite a few places (e.g. sec 2.6, section 4).",
      "createdAt": "2020-06-08T12:35:23Z",
      "updatedAt": "2020-06-16T12:50:43Z",
      "closedAt": "2020-06-16T12:50:43Z",
      "comments": []
    },
    {
      "number": 79,
      "id": "MDU6SXNzdWU2MzQ1NzQ2ODI=",
      "title": "Fix up section 3.2's bullet list",
      "url": "https://github.com/capport-wg/architecture/issues/79",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We're using title case here. We shouldn't be.\r\n\r\nE.g.\r\n```\r\n *  Uniquely Identify the User Equipment\r\n\r\n   *  Be Hard to Spoof\r\n\r\n   *  Be Visible to the API Server\r\n\r\n   *  Be Visible to the Enforcement Device\r\n```\r\n\r\n->\r\n\r\n```\r\n  *  uniquely identify the User Equipment\r\n\r\n   *  be hard to spoof\r\n\r\n   *  be visible to the API Server\r\n\r\n   *  be visible to the Enforcement Device\r\n```\r\n\r\n",
      "createdAt": "2020-06-08T12:39:58Z",
      "updatedAt": "2020-06-17T11:41:20Z",
      "closedAt": "2020-06-17T11:41:20Z",
      "comments": []
    },
    {
      "number": 80,
      "id": "MDU6SXNzdWU2MzQ1NzYyMzg=",
      "title": "Consistent use of UE vs User Equipment",
      "url": "https://github.com/capport-wg/architecture/issues/80",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "It was pointed out that we sometimes use UE rather than user equipment (e.g. section 3.5.). Let's be consistent, perhaps shortening all references to UE other than where it is defined.",
      "createdAt": "2020-06-08T12:41:22Z",
      "updatedAt": "2020-06-18T11:29:47Z",
      "closedAt": "2020-06-18T11:29:47Z",
      "comments": []
    },
    {
      "number": 81,
      "id": "MDU6SXNzdWU2MzQ1Nzg1NTQ=",
      "title": "RA used, but not defined",
      "url": "https://github.com/capport-wg/architecture/issues/81",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We never define what an 'RA' is, but we use that term in section 4.1.\r\n\r\nWe should consider expanding it to the full term (Router Advertisement). We may also want to add an informative reference to it when we first mention it.\r\n\r\nNote that we have the same problem with DHCP here -- I'm not sure offhand what the best practice is regarding terms that have fairly wide use, but may not be understood by everyone (and even what that set of terms is).",
      "createdAt": "2020-06-08T12:43:27Z",
      "updatedAt": "2020-06-18T11:29:06Z",
      "closedAt": "2020-06-18T11:29:06Z",
      "comments": [
        {
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "body": "RA is listed in the abbreviations document:\r\n\r\n  * https://www.rfc-editor.org/materials/abbrev.expansion.txt\r\n\r\nbut of course \"expand on first use\" seems like sound editorial practice.\r\n",
          "createdAt": "2020-06-08T23:42:38Z",
          "updatedAt": "2020-06-08T23:42:38Z"
        }
      ]
    },
    {
      "number": 82,
      "id": "MDU6SXNzdWU2MzUzODc4OTc=",
      "title": "Use captive portal in the abstract",
      "url": "https://github.com/capport-wg/architecture/issues/82",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As pointed out during a review, we do not use \"Captive Portal\" in the abstract, which could make it hard to find the document.",
      "createdAt": "2020-06-09T12:30:36Z",
      "updatedAt": "2020-06-12T12:31:14Z",
      "closedAt": "2020-06-12T12:31:14Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is a dupe of #76 ",
          "createdAt": "2020-06-12T12:31:11Z",
          "updatedAt": "2020-06-12T12:31:11Z"
        }
      ]
    },
    {
      "number": 83,
      "id": "MDU6SXNzdWU2MzUzODg1NTg=",
      "title": "Discuss what happens to traffic inside the captive network",
      "url": "https://github.com/capport-wg/architecture/issues/83",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Raised during review.\r\n\r\n - Is it allowed by definition (i.e. within the walled garden)\r\n - Is it more nuanced?\r\n - Is it just up to the use-case?",
      "createdAt": "2020-06-09T12:31:41Z",
      "updatedAt": "2020-06-17T15:58:46Z",
      "closedAt": "2020-06-17T15:58:46Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Eric suggests in reply to my suggestions:\r\n\r\n```\r\n    This would be up to the network operator, I suppose -- they define the\r\n    extent of the walled garden. The only hosts that must be reachable are\r\n    any necessary to perform the workflows related to gaining access. The\r\n    document mentions those in a few places. In section 2.4, the document\r\n    states:\r\n\r\n     Typically User Equipment is permitted access to a small number of\r\n    services and is\r\n      denied general network access until it satisfies the Captive Portal\r\n    Conditions.\r\n\r\n    Perhaps we could add some language indicating that this isn't intended\r\n    to be a normative requirement -- the restrictions placed by the\r\n    captive portal depend on its use-case.\r\n\r\nEV> you may add \"(.g., local communication)\" after \"small number of services\" ?\r\n    >\r\n\r\n```\r\n\r\nI propose we do this.\r\n",
          "createdAt": "2020-06-14T14:58:02Z",
          "updatedAt": "2020-06-14T14:58:02Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@dcdolson replied with:\r\n\r\n> I don't think \"local\", implying physical proximity, is the correct word.\r\n> There are multiple technologies for serving DHCP, DNS, user portal, API,\r\n> etc. from\r\n> *remote* machines. I feel that adding \"e.g., local communication\" would\r\n> add more\r\n> confusion than clarity.\r\n> \r\n> How about, \"... permitted access to a small number of services\r\n> (according to the\r\n> policies of the network provider) and is denied general network\r\n> access...\"\r\n\r\nLet's do that.",
          "createdAt": "2020-06-15T12:37:40Z",
          "updatedAt": "2020-06-15T12:37:40Z"
        }
      ]
    },
    {
      "number": 84,
      "id": "MDU6SXNzdWU2MzUzODkxMTI=",
      "title": "Mention redundancy/scale of components",
      "url": "https://github.com/capport-wg/architecture/issues/84",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Pointed out during review: we mention that components may be logically combined, but we don't talk about redundancy or scale.",
      "createdAt": "2020-06-09T12:32:32Z",
      "updatedAt": "2020-06-19T11:42:43Z",
      "closedAt": "2020-06-19T11:42:43Z",
      "comments": []
    },
    {
      "number": 85,
      "id": "MDU6SXNzdWU2MzUzOTAxNzE=",
      "title": "Mention dual stack in the IP Address identifier discussion",
      "url": "https://github.com/capport-wg/architecture/issues/85",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Raised during review that dual-stack is a use-case worth calling out explicitly.\r\n\r\nSome suggested text:\r\n\r\n\"Further attention should be paid to a device using dual-stack [rfc4213]: it could have both an IPv4 and an IPv6 address at the same time. There could be no properties in common between the two addresses, meaning that some form of mapping solution could be required to form a single identity from the two address.\"\r\n",
      "createdAt": "2020-06-09T12:34:16Z",
      "updatedAt": "2020-06-19T12:59:43Z",
      "closedAt": "2020-06-19T12:59:43Z",
      "comments": []
    },
    {
      "number": 86,
      "id": "MDU6SXNzdWU2MzUzOTA3MTc=",
      "title": "Resolve once and for all MAC address identifier questions",
      "url": "https://github.com/capport-wg/architecture/issues/86",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The MAC address is such an obvious identifier, particularly since it's so widely used. We've have multiple questions about it during reviews. We should probably add some simple text pointing that out.\r\n\r\nE.g.\r\n\r\n\"The MAC address of a device is often used as an identity in existing implementations. A discussion of it has been omitted for brevity, but the MAC address could be used subject to the criteria in section 3.2\"",
      "createdAt": "2020-06-09T12:35:11Z",
      "updatedAt": "2020-06-20T11:31:00Z",
      "closedAt": "2020-06-20T11:31:00Z",
      "comments": []
    },
    {
      "number": 87,
      "id": "MDU6SXNzdWU2MzYyMDQ2MjM=",
      "title": "Do not restrict provisioning in abstract",
      "url": "https://github.com/capport-wg/architecture/issues/87",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "klarose"
      ],
      "labels": [],
      "body": "Benjamin writes:\r\n\r\n> (1) Given that section 1 describes other options, the abstract should not\r\n> limit to just DHCP and RA as options for provisioning the API URL.\r\n>\r\n\r\nMy suggestion:\r\n\r\n```\r\nNetwork provisioning protocols such as DHCP or Router Advertisements, an optional signaling protocol...\r\n```\r\n",
      "createdAt": "2020-06-10T12:27:29Z",
      "updatedAt": "2020-06-19T12:55:37Z",
      "closedAt": "2020-06-19T12:55:37Z",
      "comments": []
    },
    {
      "number": 88,
      "id": "MDU6SXNzdWU2MzYyMTYyNzY=",
      "title": "The API does not tell the enforcement device to open up",
      "url": "https://github.com/capport-wg/architecture/issues/88",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Benjamin writes:\r\n\r\n> (2) Section 4.1 says that:\r\n>\r\n> \u00a0 \u00a05. \u00a0The Captive Portal API server indicates to the Enforcement Device\r\n> \u00a0 \u00a0 \u00a0 \u00a0that the User Equipment is allowed to access the external\r\n> \u00a0 \u00a0 \u00a0 \u00a0network.\r\n>\r\n> but I believe this should be the \"Captive Portal Server\" (or, as the\r\n> previous point has it, the \"web portal\").\r\n>\r\n\r\nWe should change this (also make it align with the new term for the server)",
      "createdAt": "2020-06-10T12:45:33Z",
      "updatedAt": "2020-06-19T12:54:07Z",
      "closedAt": "2020-06-19T12:54:07Z",
      "comments": []
    },
    {
      "number": 89,
      "id": "MDU6SXNzdWU2MzYyNTk0NTU=",
      "title": "Cite RFC6125 in section 2.1",
      "url": "https://github.com/capport-wg/architecture/issues/89",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> \u00a0 \u00a0If User Equipment supports the Captive Portal API, it MUST validate\r\n> \u00a0 \u00a0the API server's TLS certificate (see [RFC2818]). \u00a0An Enforcement\r\n>\r\n> We should probably cite RFC 6125 here and say something about how the UE\r\n> gets a name to validate the server's certificate against (and what name\r\n> type to use).\r\n\r\nDo this. Figure out the proper 'name type'.",
      "createdAt": "2020-06-10T13:43:18Z",
      "updatedAt": "2020-06-24T11:45:21Z",
      "closedAt": "2020-06-24T11:45:21Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Ben suggests\r\n\r\n> If User Equipment supports the Captive Portal API, it MUST validate the\r\n> API server's TLS Certificate according to the procedures in [RFC6125].\r\n> The API server's URI is obtained via a network provisioning protocol,\r\n> which will typically provide a hostname to be used in TLS server\r\n> certificate validation, against a DNS-ID in the server certificate.  If\r\n> the API server is identified by IP address, the iPAddress subjectAltName\r\n> is used to validate the server certificate.\r\n\r\nLet's use this, and attribute it to him in the acknowledgements.",
          "createdAt": "2020-06-23T11:44:42Z",
          "updatedAt": "2020-06-23T11:44:42Z"
        }
      ]
    },
    {
      "number": 90,
      "id": "MDU6SXNzdWU2MzYyNjcyNTY=",
      "title": "TLS for web portal/Captive Portal Server",
      "url": "https://github.com/capport-wg/architecture/issues/90",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Benjamin writes:\r\n\r\n>\r\n> \u00a0 \u00a0At minimum, the API MUST provide: (1) the state of captivity and (2)\r\n> \u00a0 \u00a0a URI for the Captive Portal Server.\r\n>\r\n> Is there anything useful to say about the URI scheme for the captive\r\n> portal server URI? \u00a0I guess I could probably (grudgingly) come up with a\r\n> case where http-not-s would be tolerable, but given that we admit the\r\n> possibility of \"payment\" as a captive portal condition, I don't want us\r\n> to encourage sending payment or other sensitive information over schemes\r\n> inappropriate for such information.\\\r\n\r\nI would at least\u00a0like to recommend that it's TLS, so it's considered. Discussion continuing on list.",
      "createdAt": "2020-06-10T13:52:47Z",
      "updatedAt": "2020-06-26T11:46:00Z",
      "closedAt": "2020-06-26T11:46:00Z",
      "comments": []
    },
    {
      "number": 91,
      "id": "MDU6SXNzdWU2MzYyNjgxNzk=",
      "title": "Review nits",
      "url": "https://github.com/capport-wg/architecture/issues/91",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "klarose"
      ],
      "labels": [],
      "body": "Benjamin writes:\r\n\r\n>\r\n> Section 1\r\n>\r\n> \u00a0 \u00a0Implementations generally require a web server, some method to allow/\r\n> \u00a0 \u00a0block traffic, and some method to alert the user. \u00a0Common methods of\r\n>\r\n> nit: I'd suggest clarifying that this is \"implementations of captive\r\n> portals\" (or is it \"captive networks\"?).\r\n\r\nClarify to implementations of captive portals\r\n\r\n\r\n>\r\n> \u00a0 \u00a0alerting the user involve modifying HTTP or DNS traffic.\r\n>\r\n> nit: perhaps \"at present\" or \"prior to this work\"? \u00a0If I understand\r\n> correctly one of the goals of this work is to shift the balance of\r\n> captive portals away from these practices (while acknowledging that\r\n> fully eliminating them is not feasible in the near future).\r\n>\r\n\r\nMention that we're talking about current implementations\r\n\r\n>\r\n> \u00a0 \u00a0* \u00a0The architecture MUST provide a path of incremental migration,\r\n> \u00a0 \u00a0 \u00a0 acknowledging a huge variety of portals and end-user device\r\n> \u00a0 \u00a0 \u00a0 implementations and software versions.\r\n>\r\n> nit: \"preexisting\" or similar would go a long way here.\r\n\r\n-> \"huge variety of preexisting portals and ...\"\r\n\r\n\r\n>\r\n> \u00a0 \u00a0 \u00a0 for this purpose are available in [RFC7710bis]. \u00a0Other protocols\r\n> \u00a0 \u00a0 \u00a0 (such as RADIUS), Provisioning Domains [I-D.pfister-capport-pvd],\r\n> \u00a0 \u00a0 \u00a0 or static configuration may also be used. \u00a0A device MAY query this\r\n>\r\n> side note: personally, I'd expand to \"may also be used to convey this\r\n> API URI\", though it's probably not required for clarity.\r\n\r\nTake the suggestion.\r\n\r\n> \u00a0 \u00a0* \u00a0SHOULD have a mechanism for notifying the user of the Captive\r\n> \u00a0 \u00a0 \u00a0 Portal\r\n>\r\n> It is pretty important that this mechanism be non-spoofable by, e.g.,\r\n> untrusted websites. \u00a0I think we should mention something about\r\n> \"non-spoofable\" here.\r\n\r\nIs it sufficient to just say \"SHOULD have a non-spoofable mechanism...\"?\r\n\r\n\r\n>\r\n> \u00a0 \u00a0* \u00a0MAY prevent applications from using networks that do not grant\r\n> \u00a0 \u00a0 \u00a0 full network access. \u00a0E.g., a device connected to a mobile network\r\n> \u00a0 \u00a0 \u00a0 may be connecting to a captive WiFi network; the operating system\r\n> \u00a0 \u00a0 \u00a0 MAY avoid updating the default route until network access\r\n> \u00a0 \u00a0 \u00a0 restrictions have been lifted (excepting access to the Captive\r\n>\r\n> nit: maybe say in which direction the update would go and/or something\r\n> about why the move to wifi is desirable?\r\n\r\nHow about \"... the operating system could avoid updating the default route to a device on the captive WiFi network until ...\"\r\n\r\nNote: We're changing MAY to could here to address Alvaro's review comment.\r\n\r\n>\r\n> \u00a0 \u00a0[I-D.ietf-capport-api] for more information. \u00a0If certificate\r\n> \u00a0 \u00a0validation fails, User Equipment MUST NOT proceed with any of the\r\n> \u00a0 \u00a0behavior described above.\r\n>\r\n> I'm not sure which behavior the \"behavior described above\" is.\r\n> \"[accessing...] OCSP responders, CRLs, and NTP servers\" doesn't seem\r\n> quite right since that's *how* you determine that certificate validation\r\n> fails, but the bits further up about \"navigate [to] the Captive Portal\r\n> user interface\" do not seem to clearly call out a single behavior or set\r\n> of behaviors by the UE.\r\n\r\nThis is a bit ambiguous. It's meant to basically say: \"Stop interacting with the API\". We canprobably rephrase to \"If certificate validation fails, the User Equipment MUST NOT make any calls tothe API Server\".\r\n\r\n>\r\n> Section 2.2.2\r\n>\r\n> \u00a0 \u00a0Although still a work in progress, [I-D.pfister-capport-pvd] proposes\r\n> \u00a0 \u00a0a mechanism for User Equipment to be provided with PvD Bootstrap\r\n> \u00a0 \u00a0Information containing the URI for the JSON-based API described in\r\n> \u00a0 \u00a0Section 2.3.\r\n>\r\n> I don't think \"JSON-based\" is supported by the text of \u00a7 2.3 (and isn't\r\n> really appropriate for an architecture doc in most cases, anyway).\r\n>\r\n\r\nDrop \"JSON-based\".\r\n\r\n> Section 2.3\r\n>\r\n> \u00a0 \u00a0The purpose of a Captive Portal API is to permit a query of Captive\r\n> \u00a0 \u00a0Portal state without interrupting the user. \u00a0This API thereby removes\r\n> \u00a0 \u00a0the need for User Equipment to perform clear-text \"canary\" HTTP\r\n> \u00a0 \u00a0queries to check for response tampering.\r\n>\r\n> nit: probably don't need to be specific about HTTP, here.\r\n\r\nRemove HTTP\r\n\r\n> \u00a0 \u00a0When User Equipment receives Captive Portal Signals, the User\r\n> \u00a0 \u00a0Equipment MAY query the API to check the state. \u00a0The User Equipment\r\n>\r\n> nit: we seem to use \"the state of its captivity\" most places.\r\n\r\nDo it\r\n\r\n> Section 2.4\r\n>\r\n> \u00a0 \u00a0* \u00a0May signal User Equipment using the Captive Portal Signaling\r\n> \u00a0 \u00a0 \u00a0 protocol if certain traffic is blocked.\r\n>\r\n> nit: I think that \"optionally signals\" might be a better fit for the\r\n> list structure as used in the other bullet points.\r\n\r\nDo it\r\n\r\n> Section 3.2.2\r\n>\r\n> \u00a0 \u00a0are active at the same time. \u00a0This property is particularly important\r\n> \u00a0 \u00a0when the User Equipment is extended externally to devices such as\r\n> \u00a0 \u00a0billing systems, or where the identity of the User Equipment could\r\n> \u00a0 \u00a0imply liability.\r\n>\r\n> nit(?): is it the UE that is extended externally or the identifier\r\n> thereof?\r\n\r\nThe identifier. Will update.\r\n\r\n>\r\n> Section 3.2.4\r\n>\r\n> \u00a0 \u00a0In some situations, the User Equipment may have multiple IP\r\n> \u00a0 \u00a0addresses, while still satisfying all of the recommended properties.\r\n>\r\n> nit: as written, \"while still satisfying all of the recommended\r\n> properties\" is describing the UE, but the context of Section 3.4\r\n> suggests that we want to be talking about the recommended properties for\r\n> identifiers.\r\n>\r\nWill rephrase.\r\n\r\n>\r\n> Section 4.1\r\n>\r\n> \u00a0 \u00a04. \u00a0If necessary, the User navigates the web portal to gain access to\r\n> \u00a0 \u00a0 \u00a0 \u00a0the external network.\r\n>\r\n> nit: \"navigates to\"\r\n\r\nFix it.\r\n\r\n> Section 4.3\r\n>\r\n> \u00a0 \u00a0Whenever a new Portal URI is received by end User Equipment, it\r\n> \u00a0 \u00a0SHOULD discard the old URI and use the new one for future requests to\r\n> \u00a0 \u00a0the API.\r\n>\r\n\r\n> (nit: we probably should check the terminology in this section; the\r\n> Section 1.2 lexicon would call this information the \"Captive Portal API\r\n> Server URI\" and not a \"Portal URI\".)\r\n\r\nDo it.\r\n\r\n> Appendix A\r\n>\r\n> We explain the use of the \"canary\" term here, but have already used it\r\n> twice (with no forward-reference) in the body of the document.\r\n>\r\n\r\nLet's add a forward reference.\r\n\r\n>\r\n> \u00a0 \u00a0Malicious or misconfigured networks with a captive portal present may\r\n> \u00a0 \u00a0not intercept these requests and choose to pass them through or\r\n> \u00a0 \u00a0decide to impersonate, leading to the device having a false negative.\r\n>\r\n> nit: I suggest \"these 'canary' requests\" to clarify which requests we're\r\n> talking about.\r\n\r\nDo it.\r\n",
      "createdAt": "2020-06-10T13:53:59Z",
      "updatedAt": "2020-06-26T11:50:59Z",
      "closedAt": "2020-06-26T11:50:59Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": " Working on this. Will have a PR up tomorrow.",
          "createdAt": "2020-06-24T12:33:22Z",
          "updatedAt": "2020-06-24T12:33:22Z"
        }
      ]
    },
    {
      "number": 92,
      "id": "MDU6SXNzdWU2MzY0MDU0MTE=",
      "title": "Add \"Captive Portal Session\" to definition list",
      "url": "https://github.com/capport-wg/architecture/issues/92",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "klarose"
      ],
      "labels": [],
      "body": "From Ben's review of the API document, we should define \"session\" formally in the architecture. The architecture doc mentions it in passing once already. The API doc uses the term session much more.",
      "createdAt": "2020-06-10T16:56:12Z",
      "updatedAt": "2020-06-30T11:42:48Z",
      "closedAt": "2020-06-30T11:42:48Z",
      "comments": []
    },
    {
      "number": 93,
      "id": "MDU6SXNzdWU2MzY0MDY0NTM=",
      "title": "Expand Captive Portal API definition",
      "url": "https://github.com/capport-wg/architecture/issues/93",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "klarose"
      ],
      "labels": [],
      "body": "```\r\n   Captive Portal API: Also known as API.  An HTTP API allowing User\r\n   Equipment to query its state of captivity within the Captive Portal.\r\n```\r\n\r\nThis currently only mentions the state of captivity, whereas it should also include how to get out captivity.",
      "createdAt": "2020-06-10T16:57:57Z",
      "updatedAt": "2020-07-01T10:57:13Z",
      "closedAt": "2020-07-01T10:57:13Z",
      "comments": []
    },
    {
      "number": 94,
      "id": "MDU6SXNzdWU2MzY5NTYwMTQ=",
      "title": "Update section 2.6 to handle the web portal uri being optional",
      "url": "https://github.com/capport-wg/architecture/issues/94",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "klarose"
      ],
      "labels": [],
      "body": ">\r\n> Section 2.6\r\n>\r\n> \u00a0 \u00a0* \u00a0The User Equipment queries the API to learn of its state of\r\n> \u00a0 \u00a0 \u00a0 captivity. \u00a0If captive, the User Equipment presents the portal\r\n> \u00a0 \u00a0 \u00a0 user interface from the Web Portal Server to the user.\r\n>\r\n> [we previously discussed this UE behavior as optional. \u00a0I don't mind\r\n> having the text be descriptive like this, since it's describing the\r\n> diagram, and the diagram is not binding on all UEs, but it seemed worth\r\n> noting just in case.]\r\n>\r\n\r\nWe could probably preface this section with a comment indicating that it's covering the casewhere the API provides a web portal uri",
      "createdAt": "2020-06-11T11:59:15Z",
      "updatedAt": "2020-06-28T12:57:52Z",
      "closedAt": "2020-06-28T12:57:52Z",
      "comments": []
    },
    {
      "number": 95,
      "id": "MDU6SXNzdWU2MzY5NjcxMjI=",
      "title": "Consider mentioning that the User Portal URL be unguessable",
      "url": "https://github.com/capport-wg/architecture/issues/95",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> Section 3.5\r\n>\r\n> \u00a0 \u00a0Accessing the API MAY depend on contextual information. \u00a0However, the\r\n> \u00a0 \u00a0URIs provided in the API SHOULD be unique to the UE and not dependent\r\n> \u00a0 \u00a0on contextual information to function correctly.\r\n>\r\n> Should the per-UE APIs and/or the mapping between UE and per-UE API be\r\n> unguessable? \u00a0(Do we want to reference Capability URLs\r\n> [https://www.w3.org/TR/capability-urls/]?)\r\n>\r\nThat's not a bad idea. Does anyone else have an opinion on this? I'm currently planning on taking the suggestion of mentioning that they should be unguessable and reference that document.",
      "createdAt": "2020-06-11T12:18:37Z",
      "updatedAt": "2020-08-06T17:20:22Z",
      "closedAt": "2020-08-06T17:20:22Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This sentence refers to URLs in the API blob, not the API itself. We definitely are okay with a common API URL or a guessable one. That\u2019s an option. ",
          "createdAt": "2020-06-11T14:00:55Z",
          "updatedAt": "2020-06-11T14:00:55Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> This sentence refers to URLs in the API blob, not the API itself. We definitely are okay with a common API URL or a guessable one. That\u2019s an option.\r\n\r\nRight. I'm not sure what I was thinking.\r\n\r\n@tfpauly What about the URIs provided by the API itself? Do you have an opinion whether we should suggest that they be unguessable?\r\n\r\nOne thought is that the API server and web portal could agree on an mechanism to cipher the UE's identifier, so that even if it's something possible guessable (i.e. the IP), and attacker couldn't spoof it.",
          "createdAt": "2020-06-12T12:28:20Z",
          "updatedAt": "2020-06-12T12:28:51Z"
        }
      ]
    },
    {
      "number": 96,
      "id": "MDU6SXNzdWU2MzY5NjkxMDM=",
      "title": "Clarify that section 4 is non-normative",
      "url": "https://github.com/capport-wg/architecture/issues/96",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Benjamin writes,\r\n\r\n> Section 4\r\n>\r\n> I might consider explicitly saying \"non-normative\" somewhere in here.\r\n\r\nDo it.",
      "createdAt": "2020-06-11T12:21:56Z",
      "updatedAt": "2020-07-02T11:40:26Z",
      "closedAt": "2020-07-02T11:40:26Z",
      "comments": []
    },
    {
      "number": 97,
      "id": "MDU6SXNzdWU2MzY5NzM4NTY=",
      "title": "Update section 4.2 to mention user interaction",
      "url": "https://github.com/capport-wg/architecture/issues/97",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> Section 4.2\r\n>\r\n> \u00a0 \u00a03. \u00a0The User Equipment's UI indicates that the length of time left\r\n> \u00a0 \u00a0 \u00a0 \u00a0for its access has fallen below a threshold\r\n>\r\n> \u00a0 \u00a04. \u00a0The User Equipment visits the API again to validate the expiry\r\n> \u00a0 \u00a0 \u00a0 \u00a0time\r\n>\r\n> side note: I feel like there's implicitly some User action in here,\r\n> though I don't know that we need to actually say anything about it.\r\n> (Otherwise we wouldn't have the UI indicating things.)\r\n>\r\n\r\nWe may need to change this up a bit and then mention that the user accepts the prompt. E.g.\r\n\r\n\r\n```\r\n\u00a0 \u00a03. \u00a0The User Equipment detects that the length of time left\r\n\u00a0 \u00a0 \u00a0 \u00a0for its access has fallen below a threshold by comparing its stored\r\n       expiry time with the current time.\r\n\r\n\u00a0 \u00a04. \u00a0The User Equipment visits the API again to validate the expiry\r\n\u00a0 \u00a0 \u00a0 \u00a0time\r\n\r\n\u00a0 \u00a05. \u00a0If expiry is still imminent, the User Equipment prompts the user\r\n\u00a0 \u00a0 \u00a0 \u00a0to access the web-portal URI again\r\n\u00a0 \u00a06. The user accepts accepts the prompt\u00a0displayed by the User Equipment.\r\n\u00a0\u00a0 7. \u00a0The User extends their access through the web-portal via the UI",
      "createdAt": "2020-06-11T12:30:01Z",
      "updatedAt": "2020-07-03T11:36:10Z",
      "closedAt": "2020-07-03T11:36:10Z",
      "comments": []
    },
    {
      "number": 98,
      "id": "MDU6SXNzdWU2MzY5ODQ3Mjk=",
      "title": "Not clear how new captive portal URIs are retrieved",
      "url": "https://github.com/capport-wg/architecture/issues/98",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Benjamin writes,\r\n\r\n> Section 4.3\r\n>\r\n> \u00a0 \u00a0Whenever a new Portal URI is received by end User Equipment, it\r\n> \u00a0 \u00a0SHOULD discard the old URI and use the new one for future requests to\r\n> \u00a0 \u00a0the API.\r\n>\r\n> What kind of validation/authorization checks need to be applied to the\r\n> new Portal URI?\r\nThis should be the same as the initial one we received when first accessing the network(e.g. via DHCP, RAs, etc). Perhaps we don't properly indicate elsewhere that this should be supported. I thought we did, but I can't find it...\u00a0\r\n\r\nI think we should add a point to Section 2.1 that the UE SHOULD support updates to the captive portal URI from the network provisioning service, and then mention here that that service is what did it. The same trust as mentioned in section 7.1 still applies.",
      "createdAt": "2020-06-11T12:46:54Z",
      "updatedAt": "2020-07-02T11:40:26Z",
      "closedAt": "2020-07-02T11:40:26Z",
      "comments": []
    },
    {
      "number": 99,
      "id": "MDU6SXNzdWU2MzY5OTE5NjE=",
      "title": "Rephrase bit on dhcpv6 auth in section 7.1",
      "url": "https://github.com/capport-wg/architecture/issues/99",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> Section 7.1\r\n>\r\n> \u00a0 \u00a0Given that a user chooses to visit a Captive Portal URI, the URI\r\n> \u00a0 \u00a0location SHOULD be securely provided to the user's device. \u00a0E.g., the\r\n> \u00a0 \u00a0DHCPv6 AUTH option can sign this information.\r\n>\r\n> I'm not sure that I understand the intent behind the \"Given that\"\r\n> construction here. \u00a0Is it trying to emphasize user choice, and thus the\r\n> need for informed choice?\r\nYes. We should probably rephrase this.\u00a0\r\n\r\nE.g.\r\n\r\n\"The user makes an informed choice in deciding to visit and trust the Captive Portal URI. Since the network provides Captive Portal URI to the user equipment, thenetwork SHOULD do so securely so that the user's trust in the network can extend to their trust of the Captive Portal URI. E.g., the DHCPv6 AUTH option can sign this information.\"",
      "createdAt": "2020-06-11T12:56:57Z",
      "updatedAt": "2020-07-02T11:41:50Z",
      "closedAt": "2020-07-02T11:41:50Z",
      "comments": []
    },
    {
      "number": 100,
      "id": "MDU6SXNzdWU2MzY5OTMxOTg=",
      "title": "Expand on how we authenticate the API using TLS in 7.2",
      "url": "https://github.com/capport-wg/architecture/issues/100",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Benjamin writes\r\n\r\n>\r\n> [In the vein of my previous remarks, there are many ways to use TLS, and\r\n> usually we provide more details on how we expect TLS to be used.]\r\n>\r\nWe can expand on that here.\r\n\r\nWhile in here, Roland writes:\r\n\r\n> ** Section 7.2. \u00a0Per \u201cThe solution described here assumes that when the User\r\n> Equipment needs to trust the API \u2026\u201d, why is this conditional. \u00a0Doesn\u2019t the UE\r\n> have to trust the API server?\r\n>\r\n\r\nLet's make sure it's not conditional. There really isn't a good reason for it to be that I'm aware of.",
      "createdAt": "2020-06-11T12:58:54Z",
      "updatedAt": "2020-07-03T11:41:48Z",
      "closedAt": "2020-07-03T11:41:47Z",
      "comments": []
    },
    {
      "number": 101,
      "id": "MDU6SXNzdWU2MzY5OTY1MjI=",
      "title": "Describe the attacker in section 7.3.",
      "url": "https://github.com/capport-wg/architecture/issues/101",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "klarose"
      ],
      "labels": [],
      "body": "Benjamin writes,\r\n\r\n> Section 7.3\r\n>\r\n> \u00a0 \u00a0The API MUST ensure the integrity of this information, as well as its\r\n> \u00a0 \u00a0confidentiality.\r\n>\r\n> Who/what is the attacker(s) that we need to preserve confidentiality from?\r\n>\r\n\r\nSuggestion (needs elaboration):\r\nWithout knowing the details of the particular solution, it's a bit hard to say for sure, but roughly\u00a0I'd say it's someone who wants to interact with the API using the identity of the user. E.g. if we're using an 'unguessable' URI, an attacker snooping on the communication with the API could determine the URI, and use it.\r\n\r\n",
      "createdAt": "2020-06-11T13:04:16Z",
      "updatedAt": "2020-08-07T11:56:44Z",
      "closedAt": "2020-08-07T11:56:44Z",
      "comments": []
    },
    {
      "number": 102,
      "id": "MDU6SXNzdWU2MzY5OTgzNDY=",
      "title": "Mention using flooding attack to get info in section 7.4",
      "url": "https://github.com/capport-wg/architecture/issues/102",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> Section 7.4\r\n>\r\n> \u00a0 \u00a0* \u00a0Accesses to the API Server are rate limited, limiting the impact\r\n> \u00a0 \u00a0 \u00a0 of a repeated attack.\r\n>\r\n> One might consider a flooding attack that tries to get the UE to use all\r\n> its (rate-limited) connections to get some information that is not the\r\n> information that it's most important for the UE to have. \u00a0If there's\r\n> only a single operation that can be performed at the API Server (which I\r\n> believe is the intent?) there is no such attack, but it may be worth\r\n> mentioning that there is no such attack.\r\n>\r\nIn this case that's the intent (i.e. only visit to get whether we're still captive). That's a good point, though: if we ever expand on that, it could open the door to such an attack, so it's worth mentioning why it's not a problem.",
      "createdAt": "2020-06-11T13:07:01Z",
      "updatedAt": "2020-07-02T12:06:13Z",
      "closedAt": "2020-07-02T12:06:13Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note Benjamin's reply to my question asking for clarification:\r\n\r\n> The attack I had in mind did not involve exfiltrating information to the\r\n> attacker, just causing the UE to get confused (or miss updates, etc.).\r\n\r\nMy reply to that:\r\n\r\n> Ah, I see. Thanks for the clarification: we don't discuss that the rate limiting, while preventing the system from beingbrought to its knees, could still cause a loss of information.  How about:\r\n> \r\n> \".. limiting the impact of a repeated attack. However, note that if the rate limit stops the UE from requesting information from the APIthat it needs, particularly if there are multiple types of request the UE could make to the API, then there is a chance that the UE could lose information when under such an attack. The UE could take steps to mitigate such an attack by rate limiting each type of request individually.\"\r\n> \r\n> I suppose we may also want to mention that if there are an unbounded, or large number of types of request, then my above suggestion for a mitigation may not suffice... Or do you think that's obvious?\r\n",
          "createdAt": "2020-06-14T15:56:02Z",
          "updatedAt": "2020-06-14T15:56:02Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closed in #142 ",
          "createdAt": "2020-07-02T12:06:13Z",
          "updatedAt": "2020-07-02T12:06:13Z"
        }
      ]
    },
    {
      "number": 103,
      "id": "MDU6SXNzdWU2Mzc3Mjg3OTM=",
      "title": "Rephrase section 1 bits about forging to be positive",
      "url": "https://github.com/capport-wg/architecture/issues/103",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Benjamin writes in his review:\r\n\r\n> (3) Probably a \"discuss discuss\", but ... in Section 1 we have:\r\n> \r\n>    *  Solutions SHOULD NOT require the forging of responses from DNS or\r\n>       HTTP servers, or any other protocol.  In particular, solutions\r\n>       SHOULD NOT require man-in-the-middle proxy of TLS traffic.\r\n> \r\n> I'd like to understand the motivation for this one a little better.\r\n> Naively, it seems like we could get away with \"MUST NOT require\" while\r\n> still allowing it to be done.  Am I missing something obvious?\r\n\r\nMichael replied with this suggested text:\r\n\r\n```\r\n      Solutions MUST permit clients to perform DNSSEC validation,\r\n      which rules out solutions that forge DNS responses.\r\n\r\n      Solutions SHOULD permit clients to detect and avoid TLS\r\n      man-in-the-middle attacks without requiring a human to\r\n      perform any kind of \"exception\" processing.\r\n```\r\n\r\nThis seems reasonable, as I mentioned in the reply. We should go with it, unless anyone has an objection. Also, attribute it to Michael Richardson.\r\n",
      "createdAt": "2020-06-12T12:52:33Z",
      "updatedAt": "2020-07-03T19:36:07Z",
      "closedAt": "2020-07-03T19:36:07Z",
      "comments": []
    },
    {
      "number": 104,
      "id": "MDU6SXNzdWU2Mzc3MzU4NDc=",
      "title": "Clarify scope of identifier in section 3.2.1",
      "url": "https://github.com/capport-wg/architecture/issues/104",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Roman writes,\r\n\r\n> ** Section 3.2.1. \u00a0Per \u201cEach instance of User Equipment interacting with the\r\n> Captive Network MUST be given an identifier that is unique among User Equipment\r\n> interacting at that time.\u201d, is \u201cunique among user equipment interacting at that\r\n> time\u201d the same as saying \u201cunique among the identifiers currently in use in the\r\n> Captive Network\u201d? \u00a0It might be useful to frame this guidance within the scope\r\n> of the previous definitions.\r\n\r\nUse the suggested phrasing.\r\n",
      "createdAt": "2020-06-12T13:04:26Z",
      "updatedAt": "2020-07-04T11:20:51Z",
      "closedAt": "2020-07-04T11:20:51Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Already addressed with an earlier rephrasing.",
          "createdAt": "2020-07-04T11:20:51Z",
          "updatedAt": "2020-07-04T11:20:51Z"
        }
      ]
    },
    {
      "number": 105,
      "id": "MDU6SXNzdWU2Mzc3MzY0MzI=",
      "title": "Rephrase section 2 to remove 'at this time'",
      "url": "https://github.com/capport-wg/architecture/issues/105",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Roman writes,\r\n\r\n> ** Section 2.1. Per \u201cAt this time we consider \u2026\u201d, to what is \u201cat this time\u201d\r\n> referring (maybe this is referring to the WG scope)? \u00a0This might not age well\r\n> as currently framed.\r\n>\r\n\r\nHow about just \"This document only considers devices with ...\"\r\n\r\n",
      "createdAt": "2020-06-12T13:05:29Z",
      "updatedAt": "2020-06-29T15:10:23Z",
      "closedAt": "2020-06-29T15:09:20Z",
      "comments": [
        {
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This was fixed in commit 3e450345",
          "createdAt": "2020-06-29T15:09:20Z",
          "updatedAt": "2020-06-29T15:10:23Z"
        }
      ]
    },
    {
      "number": 106,
      "id": "MDU6SXNzdWU2Mzc3MzY4NDc=",
      "title": "Expand section 2.2",
      "url": "https://github.com/capport-wg/architecture/issues/106",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Roman writes,\r\n\r\n> ** Section 2.2. \u00a0The architecture doesn\u2019t explicitly describe which component\r\n> is responsibility for provisioning the user equipment sufficiently so it can\r\n> access the IP network anywhere. \u00a0I would have expected it to be the\r\n> Provisioning Service. \u00a0Section 2.1, 2.3 and 2.4 describe the role of these\r\n> components in the architecture and their requirements. \u00a0Section 2.2 does not.\r\n> Instead it describes candidate technologies. \u00a0It would be helpful to explicitly\r\n> say.\r\n>\r\n\r\nHow about\r\n\r\n\"The Provisioning Service is primarily responsible for providing a portal URI to\r\nthe User Equipment when it connects to the network, and later if the URI changes.\r\nThe provisioning service could also be the same service which is responsible for\r\nprovisioning the User Equipment for access to the Captive Network (e.g. by providing it with an IP address). This section discusses two mechanisms which may be used to provide the portal URI to the User Equipment.\r\n\r\nIt is expected that the provided URI will be for the API described in Section 2.3\".",
      "createdAt": "2020-06-12T13:06:14Z",
      "updatedAt": "2020-07-06T11:45:43Z",
      "closedAt": "2020-07-06T11:45:43Z",
      "comments": []
    },
    {
      "number": 107,
      "id": "MDU6SXNzdWU2Mzc3Mzc1OTE=",
      "title": "Move guidance on API URI changing to section 2.1",
      "url": "https://github.com/capport-wg/architecture/issues/107",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Roman writes,\r\n\r\n> ** Section 4. \u00a0Does this section provide normative guidance? \u00a0The introductory\r\n> sentence suggests no by saying that this section describes \u201cpossible\r\n> workflow[s]\u201d. \u00a0However, Section 4.3 uses a normative SHOULD.\r\n\r\n\r\nIt's meant to be informative. Move it Section 2.1 (User Equipment)\r\n\r\n",
      "createdAt": "2020-06-12T13:07:33Z",
      "updatedAt": "2020-07-04T11:35:36Z",
      "closedAt": "2020-07-04T11:35:35Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We did this in #140 ",
          "createdAt": "2020-07-04T11:35:35Z",
          "updatedAt": "2020-07-04T11:35:35Z"
        }
      ]
    },
    {
      "number": 108,
      "id": "MDU6SXNzdWU2Mzc3NTgyMzM=",
      "title": "Mention potentially storing API response in section 2.1",
      "url": "https://github.com/capport-wg/architecture/issues/108",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Roman writes,\r\n\r\n> ** Section 4.2. \u00a0Between step #2 and #3, did some kind of signaling happen to\r\n> indicate that expiration is imminent, or did the UE keep state of some kind?\r\n> Keeping state isn\u2019t mentioned as a UE requirement in Section 2.1. \u00a0Section 2.5.\r\n> notes that a \u201csignal might be generated when the end of a session is imminent\u201d.\r\n>\r\n\r\nThe implication is that there is state in this case -- the UE stored the last response\r\nit retrieved from the API so that it could consult the time remaining (seconds-remainingin the API document). I can update section 2.1 to indicate that the UE could store informationfrom the API's response in order to trigger workflows related to imminent expiry of its access.Storing the state isn't required, but it could make the user experience better if supported.",
      "createdAt": "2020-06-12T13:40:53Z",
      "updatedAt": "2020-07-06T11:47:05Z",
      "closedAt": "2020-07-06T11:47:05Z",
      "comments": []
    },
    {
      "number": 109,
      "id": "MDU6SXNzdWU2Mzc3NjA4Njg=",
      "title": "Discuss privacy in section 7",
      "url": "https://github.com/capport-wg/architecture/issues/109",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Benjamin writes,\r\n\r\n> Section 7\r\n>\r\n> This mechanism rather inherently requires having multiple entities track\r\n> the UE's identity (and, thus, likely be tracking a proxy for the user's\r\n> identity).  It seems appropriate to include some discussion of the\r\n> privacy considerations of this tracking, and whether/what kind of\r\n> anonymity support is appropriate!\r\n>\r\n\r\nRoman also pointed this out:\r\n\r\n> ** Section 7. \u00a0This section would benefit from a discussion of the privacy\r\n> impacts of the implicit identifiers embedded into the architecture (e.g.,\r\n> re-identification)\r\n>\r\n\r\nRough suggestion:\r\n\r\n```\r\nSection 7.X  Privacy\r\n\r\n  Section 3 describes a mechanism by which all components within the\r\nCaptive Network\r\n  agree on a unique identifier for the User Equipment. This identifier\r\ncould be abused to\r\n  track the user. Implementers and designers of Captive Networks\r\nshould take care to ensure\r\n  that identifiers, if stored, are stored securely. \r\n```\r\n\r\nWe need a bit more text here.",
      "createdAt": "2020-06-12T13:45:07Z",
      "updatedAt": "2020-08-06T11:50:17Z",
      "closedAt": "2020-08-06T11:50:17Z",
      "comments": []
    },
    {
      "number": 110,
      "id": "MDU6SXNzdWU2Mzc3NjIzMDc=",
      "title": "Mention on-path attacks in section 7.1",
      "url": "https://github.com/capport-wg/architecture/issues/110",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Roman writes,\r\n\r\n\r\n> ** Section 7.1. Per \u201cIf a user decides to incorrectly trust an attacking\r\n> network \u2026.\u201d, you have an on-path attacker so additional risks include traffic\r\n> redirection to arbitrary destinations to server malicious payloads; traffic\r\n> analysis and loss of confidentiality; inline traffic modification; etc.\r\n>\r\n\r\nSuggest working those attacks into that part of the section, with the existing\r\ntext as just one example.",
      "createdAt": "2020-06-12T13:47:28Z",
      "updatedAt": "2020-07-07T11:48:49Z",
      "closedAt": "2020-07-07T11:48:49Z",
      "comments": []
    },
    {
      "number": 111,
      "id": "MDU6SXNzdWU2MzgxNTY4MDk=",
      "title": "Consistent terminology for alerting/notifying via signal.",
      "url": "https://github.com/capport-wg/architecture/issues/111",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Alvaro writes,\r\n\r\n> (3) \u00a71: \"MAY allow a device to be alerted\" \u00a0 Other parts of the document (even\r\n> in the same section) talk about \"devices can be notified\" or \"informs an\r\n> end-user\", while \"alert\" is not mentioned anywhere else. \u00a0Given that \"alert\"\r\n> has the normative attachment, it would be nice to use consistent language.\r\n\r\nLet's make this consistent across the entire document. Doesn't have to be alert, but should be consistent.",
      "createdAt": "2020-06-13T12:50:24Z",
      "updatedAt": "2020-07-10T11:45:05Z",
      "closedAt": "2020-07-10T11:45:05Z",
      "comments": []
    },
    {
      "number": 112,
      "id": "MDU6SXNzdWU2MzgxNTcyMjc=",
      "title": "Use non-normative language in beginning of section 3.1",
      "url": "https://github.com/capport-wg/architecture/issues/112",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "klarose"
      ],
      "labels": [],
      "body": "Alvaro writes\r\n\r\n>\r\n> (5) \u00a73.1: \"An Identifier MAY be a field...Or, an Identifier MAY be an ephemeral\r\n> property...\" \u00a0 s/MAY/may \u00a0These seem to be statements and not normative\r\n> statements.\r\n>\r\n\r\nThese are examples of where an identifier could come from, not really an exhaustive list\r\nof possibilities.\r\n\r\nReplace the two 'MAY' occurrences with 'could'.\r\n",
      "createdAt": "2020-06-13T12:53:22Z",
      "updatedAt": "2020-07-07T11:47:48Z",
      "closedAt": "2020-07-07T11:47:48Z",
      "comments": []
    },
    {
      "number": 113,
      "id": "MDU6SXNzdWU2MzgxNTkxNDA=",
      "title": "Update figure 1 to include that the UE may send a join request to the provisioning service",
      "url": "https://github.com/capport-wg/architecture/issues/113",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Robert writes,\r\n\r\n> I was surprised by the diagram in section 2.6, since it seems to imply that the\r\n> Provisioning Service kicks everything off, but I would have expected the User\r\n> equipment to initiate the flow, which is articulated in the first step of\r\n> section 4.1. \u00a0Hence, I think that the diagram could be more clear if it also\r\n> showed the initial request from the client (as per the first step in 4.1).\r\n\r\n\r\nE.g. something like a \"Join Network\" request.\r\n\r\nIt's possible that the URI flows to the User Equipment unsolicited, but I don't think adding the request to the diagram precludes that. Possibly mention that in the surrounding text.",
      "createdAt": "2020-06-13T13:06:46Z",
      "updatedAt": "2020-07-08T11:43:09Z",
      "closedAt": "2020-07-08T11:43:09Z",
      "comments": []
    },
    {
      "number": 114,
      "id": "MDU6SXNzdWU2MzgzNjg5MzA=",
      "title": "Clarify that the document is not giving a solution for UI-less devices",
      "url": "https://github.com/capport-wg/architecture/issues/114",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Eric points out in his review:\r\n\r\n\r\n> -- Section 2.1 --\r\n> \"At this time we consider only devices with web browsers\" while the previous\r\n> text was about \"devices without user interfaces\". Finally, is this document for\r\n> devices with or without human interface ?\r\n\r\nHe suggests as a solution:\r\n\r\n> \r\nEV> I would suggest that at the first mention of \" devices without user interfaces\", the text mention \"for future version\" or something in the same line. The focus on user-interface devices is written a little too deep in the document, should come earlier in the text to avoid confusion.\r\n\r\nI propose we do this. The first mention is in section one. We can say something along the lines of \"A future document could provide a solution for devices without user interfaces. This document focuses on devices with user interfaces.\"",
      "createdAt": "2020-06-14T15:01:55Z",
      "updatedAt": "2020-06-17T11:37:45Z",
      "closedAt": "2020-06-17T11:37:45Z",
      "comments": []
    },
    {
      "number": 115,
      "id": "MDU6SXNzdWU2MzgzNzEzNTI=",
      "title": "Non-spoofable mechanism in section 2.1 for notifying user",
      "url": "https://github.com/capport-wg/architecture/issues/115",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Benjamin writes,\r\n\r\n> >    *  SHOULD have a mechanism for notifying the user of the Captive\r\n> >       Portal\r\n> >\r\n> > It is pretty important that this mechanism be non-spoofable by, e.g.,\r\n> > untrusted websites.  I think we should mention something about\r\n> > \"non-spoofable\" here.\r\n\r\nI propose `s/mechanism/non-spoofable mechanism/`.\r\n",
      "createdAt": "2020-06-14T15:14:52Z",
      "updatedAt": "2020-06-14T15:16:00Z",
      "closedAt": "2020-06-14T15:15:59Z",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Handled in #91 ",
          "createdAt": "2020-06-14T15:15:59Z",
          "updatedAt": "2020-06-14T15:15:59Z"
        }
      ]
    },
    {
      "number": 116,
      "id": "MDU6SXNzdWU2MzgzNzE5MzQ=",
      "title": "Remove normative MAY from section 2.1",
      "url": "https://github.com/capport-wg/architecture/issues/116",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Benjamin writes,\r\n\r\n>       The device MAY take immediate action to satisfy the portal\r\n>       (according to its configuration/policy).\r\n>\r\n> side note: it's not entirely clear to me that we need a normative MAY\r\n> for this.\r\n\r\nI've asked for WG feedback. Replace with 'could' if nobody objects.",
      "createdAt": "2020-06-14T15:17:35Z",
      "updatedAt": "2020-07-07T11:55:09Z",
      "closedAt": "2020-07-07T11:55:09Z",
      "comments": []
    },
    {
      "number": 117,
      "id": "MDU6SXNzdWU2MzgzNzMxOTY=",
      "title": "Rephrase 3.2.1: associate rather than give",
      "url": "https://github.com/capport-wg/architecture/issues/117",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Benjamin writes,\r\n\r\n> Section 3.2.1\r\n>\r\n>    Each instance of User Equipment interacting with the Captive Network\r\n>    MUST be given an identifier that is unique among User Equipment\r\n>    interacting at that time.\r\n>\r\n> side note: \"MUST be given\" gets a knee-jerk \"by whom?\" response from me.\r\n> It's probably okay for this document to not specify, though, as it may\r\n> depend on the nature of the Captive Network.\r\n\r\nI suggest:\r\n\r\n>perhaps \"given\" is the wrong term here? Should we rephrase to\r\n> \"The Captive Network MUST associate the User Equipment with an\r\n> identifier that is unique among User Equipment that is interacting at\r\n> that time?\"\r\n\r\n",
      "createdAt": "2020-06-14T15:23:51Z",
      "updatedAt": "2020-06-30T11:47:17Z",
      "closedAt": "2020-06-30T11:47:17Z",
      "comments": []
    },
    {
      "number": 118,
      "id": "MDU6SXNzdWU2Mzg4MjMxNzA=",
      "title": "Section 2.3: explicitly mention that the UE should only be able to check its own captivity status",
      "url": "https://github.com/capport-wg/architecture/issues/118",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Roman writes,\r\n\r\n> ** Section 2.3.  Perhaps this is too pedantic, but should the obvious be\r\n> explicitly called out: the user equipment should only be able to check it\u2019s own\r\n> captivity status?  This would be some explicit notion of authorization.\r\n\r\nMartin agreed that we should do something like this in response to my question:\r\n\r\n> > I recall discussing this, but I don't think we settled on a good,\r\n> > simple solution. I'm\r\n> > fine pointing out that the user equipment should only be able to check its own\r\n> > state of captivity, but I worry that discussing authorization will\r\n> > open a large can\r\n> > of worms. Do the chairs have an opinion on this?\r\n> \r\n> This is a reasonable requirement to state, as it motivates the existing discussion of identifier selection.  A good part of the discussion we had around choosing identifiers was around the point of implicit identification and the potential for that to be spoofed.  That spoofing might circumvent authorization was largely implicit, but it doesn't hurt to be explicit.\r\n\r\nWe can add a requirement stating that the only the UE should be able to check its own state of captivity (work on the phrasing/normative text).",
      "createdAt": "2020-06-15T12:42:57Z",
      "updatedAt": "2020-07-10T11:44:12Z",
      "closedAt": "2020-07-10T11:44:11Z",
      "comments": []
    },
    {
      "number": 150,
      "id": "MDU6SXNzdWU2NTA4OTU5ODk=",
      "title": "Revisit the Abstract",
      "url": "https://github.com/capport-wg/architecture/issues/150",
      "state": "CLOSED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The abstract seems weak. It should mention the problem domain and all of the components. Not sure if it needs to mention PvD at all.",
      "createdAt": "2020-07-04T13:59:02Z",
      "updatedAt": "2020-08-07T17:22:02Z",
      "closedAt": "2020-08-07T17:22:02Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Personally, I think that aside from the PvD mention, which can be removed, the current is mostly OK.  Brief is good.",
          "createdAt": "2020-08-07T00:35:54Z",
          "updatedAt": "2020-08-07T00:35:54Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ1MzgwNTAw",
      "title": "Use i-d-template",
      "url": "https://github.com/capport-wg/architecture/pull/1",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Using these tools should help make things run a little more smoothly.  I'll setup a push to gh-pages if you think that this is a good plan.",
      "createdAt": "2017-10-09T06:26:06Z",
      "updatedAt": "2018-03-05T23:05:19Z",
      "closedAt": "2018-03-05T23:05:19Z",
      "mergedAt": "2018-03-05T23:05:19Z",
      "mergedBy": "klarose",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hmmm. We should probably deal with this merge conflict. :)",
          "createdAt": "2018-02-28T13:10:24Z",
          "updatedAt": "2018-02-28T13:10:24Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Deconflicted.  It was trivial to do on the command line.",
          "createdAt": "2018-03-05T08:14:24Z",
          "updatedAt": "2018-03-05T08:14:24Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njg4MTgyMDc=",
          "commit": {
            "abbreviatedOid": "7fb3742"
          },
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2017-10-12T05:17:15Z",
          "updatedAt": "2017-10-12T05:17:15Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "8b5fee8ad722931c02d42cabeac7e2f1958cb413",
      "headRepository": "martinthomson/architecture",
      "headRefName": "cleanup",
      "headRefOid": "c91764d154312b8425a7b915b3349b7b71e5a8ec",
      "mergeCommit": {
        "oid": "dd1a6da7fcb931b7d3132e44b289c71548263283"
      }
    },
    {
      "number": 7,
      "id": "MDExOlB1bGxSZXF1ZXN0MTcxODM3MzM5",
      "title": "Update TLS wording to be stronger",
      "url": "https://github.com/capport-wg/architecture/pull/7",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We want to make TLS a requirement, not a suggestion, so I've chagned\r\nthe wording around TLS to reflect this. I also added a section to the\r\nsecurity section discussing the motivation behind the requirement.",
      "createdAt": "2018-02-28T02:06:52Z",
      "updatedAt": "2018-03-06T01:19:44Z",
      "closedAt": "2018-03-06T01:05:12Z",
      "mergedAt": "2018-03-06T01:05:12Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3OTk5Mjc5NDQ=",
          "commit": {
            "abbreviatedOid": "c24c6f9"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Can you forward to the list please? ",
          "createdAt": "2018-02-28T02:34:22Z",
          "updatedAt": "2018-02-28T02:34:38Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "The current api includes secrets from the api, not the other way around.",
              "createdAt": "2018-02-28T02:34:22Z",
              "updatedAt": "2018-03-06T01:04:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTAwMDU5Nzg4",
          "commit": {
            "abbreviatedOid": "c24c6f9"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-02-28T13:25:25Z",
          "updatedAt": "2018-02-28T13:25:25Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Thanks. I'll rephrase it to be more generic.",
              "createdAt": "2018-02-28T13:25:25Z",
              "updatedAt": "2018-03-06T01:04:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTAwMTcwODU2",
          "commit": {
            "abbreviatedOid": "c24c6f9"
          },
          "author": "tfpauly",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-02-28T18:15:16Z",
          "updatedAt": "2018-02-28T18:15:16Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Yes, perhaps something like:\r\n\r\n\"This is required to allow the user equipment and API server to exchange secrets which can be used to validate future interactions.\"",
              "createdAt": "2018-02-28T18:15:16Z",
              "updatedAt": "2018-03-06T01:04:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTAwMjg4NDE4",
          "commit": {
            "abbreviatedOid": "c24c6f9"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-03-01T01:03:37Z",
          "updatedAt": "2018-03-01T01:03:37Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Thanks, Tommy. I'll use that wording. :)",
              "createdAt": "2018-03-01T01:03:37Z",
              "updatedAt": "2018-03-06T01:04:42Z"
            }
          ]
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "4c8b82f3164616b0ed8edeee4f981ff0e5f68dc1",
      "headRepository": "capport-wg/architecture",
      "headRefName": "updates_for_ietf101",
      "headRefOid": "dd337564c86132b1974f305a212a2ab2d3b6aaeb",
      "mergeCommit": {
        "oid": "416dbabe28ac68fa828287c2be0413cfc954d05e"
      }
    },
    {
      "number": 9,
      "id": "MDExOlB1bGxSZXF1ZXN0MTcyNzI4Njk2",
      "title": "Add identifier section",
      "url": "https://github.com/capport-wg/architecture/pull/9",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We need to discuss what information will be used to identify the UE from\r\nthe perspective of the various components in the system. This updates\r\nthe draft to discuss this concept, including desired properties of the\r\nidentifier and some examples.\r\n\r\nThis aims to address issue 5  (https://github.com/capport-wg/architecture/issues/5)",
      "createdAt": "2018-03-04T16:48:17Z",
      "updatedAt": "2018-03-06T01:19:23Z",
      "closedAt": "2018-03-06T01:19:23Z",
      "mergedAt": "2018-03-06T01:19:23Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTAxMDI1MDI3",
          "commit": {
            "abbreviatedOid": "bf561fa"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Looks good.  Given time constraints, I would merge this and then send to the working group for review.",
          "createdAt": "2018-03-04T23:35:24Z",
          "updatedAt": "2018-03-04T23:41:28Z",
          "comments": [
            {
              "originalPosition": 138,
              "body": "e.g.,",
              "createdAt": "2018-03-04T23:35:24Z",
              "updatedAt": "2018-03-06T01:14:26Z"
            },
            {
              "originalPosition": 20,
              "body": "I don't think that you should use \"identifying\" in the definition of \"identifier\".\r\n\r\nSuggest: \"An identifier is a characteristic of the UE [...]\"",
              "createdAt": "2018-03-04T23:36:45Z",
              "updatedAt": "2018-03-06T01:14:26Z"
            },
            {
              "originalPosition": 131,
              "body": "This seems more pertinent for the general section.  (It is a criterion that invalidates the use of a v6 /128.)",
              "createdAt": "2018-03-04T23:37:51Z",
              "updatedAt": "2018-03-06T01:14:26Z"
            },
            {
              "originalPosition": 154,
              "body": "typo: perspective",
              "createdAt": "2018-03-04T23:38:13Z",
              "updatedAt": "2018-03-06T01:14:26Z"
            },
            {
              "originalPosition": 159,
              "body": "typo: functioning",
              "createdAt": "2018-03-04T23:38:29Z",
              "updatedAt": "2018-03-06T01:14:26Z"
            },
            {
              "originalPosition": 161,
              "body": "You might add: \"Demonstrations of return routeability, such as that required for TCP connection establishment, might be sufficient defense against spoofing, though this might not be sufficient in networks that use broadcast media (such as some wireless networks).\"",
              "createdAt": "2018-03-04T23:40:00Z",
              "updatedAt": "2018-03-06T01:14:26Z"
            },
            {
              "originalPosition": 182,
              "body": "This is the point where you talk about using the v6 prefix rather than the full /128.",
              "createdAt": "2018-03-04T23:40:51Z",
              "updatedAt": "2018-03-06T01:14:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTAxMjIzODk1",
          "commit": {
            "abbreviatedOid": "bf561fa"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-03-05T16:14:22Z",
          "updatedAt": "2018-03-05T16:14:22Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Circular definitions for the win. :) I'll use your suggestion.",
              "createdAt": "2018-03-05T16:14:22Z",
              "updatedAt": "2018-03-06T01:14:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTAxMzg2NjE1",
          "commit": {
            "abbreviatedOid": "bf561fa"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-03-06T00:57:24Z",
          "updatedAt": "2018-03-06T00:57:24Z",
          "comments": [
            {
              "originalPosition": 131,
              "body": "Something like a requirement that a device have only a single identifier? Or are you thinking something like a requirement that the identifier be easily recycled?",
              "createdAt": "2018-03-06T00:57:24Z",
              "updatedAt": "2018-03-06T01:14:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTAxMzg5OTk1",
          "commit": {
            "abbreviatedOid": "bf561fa"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-03-06T01:16:22Z",
          "updatedAt": "2018-03-06T01:16:23Z",
          "comments": [
            {
              "originalPosition": 161,
              "body": "Done",
              "createdAt": "2018-03-06T01:16:22Z",
              "updatedAt": "2018-03-06T01:16:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTAxMzkwMDc1",
          "commit": {
            "abbreviatedOid": "bf561fa"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-03-06T01:16:51Z",
          "updatedAt": "2018-03-06T01:16:51Z",
          "comments": [
            {
              "originalPosition": 131,
              "body": "The point here is one that Erik raised.  If you identify by a v6 /128, then you prevent the UE from using IPv6 as designed.  Many networks are moving to giving each host its own prefix (see https://tools.ietf.org/html/draft-ietf-v6ops-unique-ipv6-prefix-per-host-01), which allows a number of interesting usage models.  Conditioning captive network access on /128 would prevent those uses.",
              "createdAt": "2018-03-06T01:16:51Z",
              "updatedAt": "2018-03-06T01:16:51Z"
            }
          ]
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "4c8b82f3164616b0ed8edeee4f981ff0e5f68dc1",
      "headRepository": "capport-wg/architecture",
      "headRefName": "identifier_section",
      "headRefOid": "fec055a88880b4214e6ec2a9ccd403a543f60476",
      "mergeCommit": {
        "oid": "cff83ba3cc1688069c17f8300b1860f4b1d97aa3"
      }
    },
    {
      "number": 10,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk3ODgwODAx",
      "title": "Remove icmp",
      "url": "https://github.com/capport-wg/architecture/pull/10",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR attempts to deal with issue #8 by replacing references to ICMP with a generic signaling protocols, then specifying requirements for it.",
      "createdAt": "2018-06-27T23:34:48Z",
      "updatedAt": "2018-06-29T23:14:36Z",
      "closedAt": "2018-06-29T23:14:36Z",
      "mergedAt": "2018-06-29T23:14:36Z",
      "mergedBy": "klarose",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I missed some stuff in here. My big long list of todos got messed up, so I thought I was done this bit. :/ Basically, some diagrams/etc still need work. I'll take your feedback while finishing it up.",
          "createdAt": "2018-06-27T23:56:57Z",
          "updatedAt": "2018-06-27T23:56:57Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMyNjQ1MTM0",
          "commit": {
            "abbreviatedOid": "cc3f0de"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-06-27T23:37:09Z",
          "updatedAt": "2018-06-27T23:39:20Z",
          "comments": [
            {
              "originalPosition": 182,
              "body": "typo: Protocl",
              "createdAt": "2018-06-27T23:37:09Z",
              "updatedAt": "2018-06-28T01:05:34Z"
            },
            {
              "originalPosition": 191,
              "body": "seamless",
              "createdAt": "2018-06-27T23:37:28Z",
              "updatedAt": "2018-06-28T01:05:34Z"
            },
            {
              "originalPosition": 196,
              "body": "This isn't really a requirement, it's desiderata, sure, but the point I think that you wanted to capture is that the protocol not include any information other than a prompt to contact the API.",
              "createdAt": "2018-06-27T23:38:20Z",
              "updatedAt": "2018-06-28T01:05:34Z"
            },
            {
              "originalPosition": 199,
              "body": "\"NOT REQUIRED\" is not a 2119 keyword, so not sure what capitalizing it does.\r\n\r\nUS English is \"signaling\" (something that used to annoy me no end).",
              "createdAt": "2018-06-27T23:39:05Z",
              "updatedAt": "2018-06-28T01:05:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMyNjQ5NjY1",
          "commit": {
            "abbreviatedOid": "cc3f0de"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-06-28T00:02:52Z",
          "updatedAt": "2018-06-28T00:02:52Z",
          "comments": [
            {
              "originalPosition": 199,
              "body": "Hmm. I'm trying to point out that that protocol designers need not make the protocol reliable. Perhaps simple omission, plus a note to that effect in the next point is sufficient?",
              "createdAt": "2018-06-28T00:02:52Z",
              "updatedAt": "2018-06-28T01:05:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMyNjU0MDU5",
          "commit": {
            "abbreviatedOid": "cc3f0de"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-06-28T00:31:42Z",
          "updatedAt": "2018-06-28T00:31:42Z",
          "comments": [
            {
              "originalPosition": 199,
              "body": "That's probably better, yeah.",
              "createdAt": "2018-06-28T00:31:42Z",
              "updatedAt": "2018-06-28T01:05:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMyNjU5MDIw",
          "commit": {
            "abbreviatedOid": "58db1b5"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-06-28T01:07:39Z",
          "updatedAt": "2018-06-28T01:07:39Z",
          "comments": [
            {
              "originalPosition": 551,
              "body": "Should this be in a Contribution section? I'm not sure of the etiquette here.",
              "createdAt": "2018-06-28T01:07:39Z",
              "updatedAt": "2018-06-28T01:07:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMyNjY1ODU3",
          "commit": {
            "abbreviatedOid": "58db1b5"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-06-28T01:58:56Z",
          "updatedAt": "2018-06-28T01:58:57Z",
          "comments": [
            {
              "originalPosition": 551,
              "body": "Acknowledgments are good.  Contributors is usually used for substantial editorial contributions, not just ideas and feedback.  But both are left to editor discretion.  Add as you see fit.",
              "createdAt": "2018-06-28T01:58:56Z",
              "updatedAt": "2018-06-28T01:58:57Z"
            }
          ]
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "a504d699ea7c996c3e495d329fdf700b9b109cf0",
      "headRepository": "capport-wg/architecture",
      "headRefName": "remove_icmp",
      "headRefOid": "58db1b5169f4efe6814e01511abaeb56c22c3fe7",
      "mergeCommit": {
        "oid": "c2e9fa6d7905eeb151edb3984c4b37a884098ce4"
      }
    },
    {
      "number": 16,
      "id": "MDExOlB1bGxSZXF1ZXN0MjAyNjc4NTQ4",
      "title": "Reduce scope of Signalling Protocol",
      "url": "https://github.com/capport-wg/architecture/pull/16",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We decided to reduce the scope of the signalling protocol during ietf\r\n102 in Montreal (Issue #14).This attempts to do so.\r\n\r\n- Reduced signalling interactions from SHOULDs to a MAYs\r\n- Removed references to trusting/validating/authenticating/etc the Signal\r\n- reduced API extensibility text so that it no longer includes various unnecessary things, including \r\n  signal validation tokens\r\n- Removed section on the \"upgrade\" path of sending signal in conjunction with redirecting\r\n- changed a bit of language around to make it clear that the signal is truly optional\r\n- Fixed a few nits\r\n- Changed the \"Conditions About to Expire\" example to discuss the UE querying the API, rather\r\n  than relying on a pre-emptive signals.",
      "createdAt": "2018-07-19T20:44:52Z",
      "updatedAt": "2018-12-19T15:55:02Z",
      "closedAt": "2018-12-19T15:55:02Z",
      "mergedAt": "2018-12-19T15:55:02Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTM5MDU4OTY3",
          "commit": {
            "abbreviatedOid": "bc6f966"
          },
          "author": "tfpauly",
          "authorAssociation": "NONE",
          "state": "CHANGES_REQUESTED",
          "body": "Looks good in general. Just some nits to have clarity in the text.",
          "createdAt": "2018-07-20T13:36:03Z",
          "updatedAt": "2018-07-20T13:51:20Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Should this instead be:\r\n\r\n\"Solutions MAY alert devices that they are in a captive network...\"\r\n\r\nThe solution is not really \"allowing\" the the device to be alerted\u2014the network is just alerting or not.",
              "createdAt": "2018-07-20T13:36:03Z",
              "updatedAt": "2018-12-18T01:07:59Z"
            },
            {
              "originalPosition": 33,
              "body": "Since `may` can be confused with `MAY`, I sometime suggest using `can` for this purpose, when you are just stating a fact.",
              "createdAt": "2018-07-20T13:36:47Z",
              "updatedAt": "2018-12-18T01:07:59Z"
            },
            {
              "originalPosition": 33,
              "body": "The term \"Captive Portal Signal\" has not been defined at this point in the document; either define it, provide a reference to later, or change to a less canonical name.",
              "createdAt": "2018-07-20T13:40:26Z",
              "updatedAt": "2018-12-18T01:07:59Z"
            },
            {
              "originalPosition": 64,
              "body": "Question: Is the signaling protocol really signaling information about \"the state of captivity\", or is it instead signaling about connection/transmission failures due to captivity enforcement? All it provides a hint about is that something is restricted or enforced/blocked, but can't really provide trustworthy information about other state (unless we design a different protocol).",
              "createdAt": "2018-07-20T13:42:52Z",
              "updatedAt": "2018-12-18T01:07:59Z"
            },
            {
              "originalPosition": 94,
              "body": "\ud83d\udc4d\ud83c\udffb",
              "createdAt": "2018-07-20T13:43:16Z",
              "updatedAt": "2018-12-18T01:07:59Z"
            },
            {
              "originalPosition": 120,
              "body": "Rather than \"a visit to the API\", can we use \"communication with the API server\" or  \"interaction with the API server\"",
              "createdAt": "2018-07-20T13:44:19Z",
              "updatedAt": "2018-12-18T01:07:59Z"
            },
            {
              "originalPosition": 141,
              "body": "Rather than being a prompt to contact the API, can we call this \"an indication that traffic is restricted, which can be used as a prompt to re-contact the API\"?",
              "createdAt": "2018-07-20T13:45:19Z",
              "updatedAt": "2018-12-18T01:07:59Z"
            },
            {
              "originalPosition": 228,
              "body": "Don't say \"go to the captive portal\"; instead, something like \"communicate with the Captive Portal API\".",
              "createdAt": "2018-07-20T13:50:57Z",
              "updatedAt": "2018-12-18T01:07:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg1Mzg5NjM2",
          "commit": {
            "abbreviatedOid": "58d8d65"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-12-16T14:22:30Z",
          "updatedAt": "2018-12-16T14:22:30Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "I'm not sure we've decided at this point. The goal was to leave the protocol fairly open-ended, from what I remember. Either way, my most recent push made it a little more ambiguous about the state -- I said that it may indicate a change of state.\r\n\r\nDo you think we should take this discussion to the list?",
              "createdAt": "2018-12-16T14:22:30Z",
              "updatedAt": "2018-12-18T01:07:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg1Mzg5NjU3",
          "commit": {
            "abbreviatedOid": "58d8d65"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-12-16T14:23:14Z",
          "updatedAt": "2018-12-16T14:23:14Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "I added a term to the definitions section.",
              "createdAt": "2018-12-16T14:23:14Z",
              "updatedAt": "2018-12-18T01:07:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg1Mzg5Njk2",
          "commit": {
            "abbreviatedOid": "58d8d65"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-12-16T14:23:41Z",
          "updatedAt": "2018-12-16T14:23:42Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "Not sure if I should add a link to it, or if it's standard in the intro to assume that unknown terms will be defined later. :)",
              "createdAt": "2018-12-16T14:23:42Z",
              "updatedAt": "2018-12-18T01:07:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg1Mzg5NzA0",
          "commit": {
            "abbreviatedOid": "58d8d65"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-12-16T14:23:58Z",
          "updatedAt": "2018-12-16T14:23:58Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "Good idea.",
              "createdAt": "2018-12-16T14:23:58Z",
              "updatedAt": "2018-12-18T01:07:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg1NDA2MTU4",
          "commit": {
            "abbreviatedOid": "58d8d65"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-12-16T22:08:38Z",
          "updatedAt": "2018-12-16T22:10:06Z",
          "comments": [
            {
              "originalPosition": 242,
              "body": "```suggestion\r\n         The Signal could inform the User Equipment that it is being held\r\n```",
              "createdAt": "2018-12-16T22:08:38Z",
              "updatedAt": "2018-12-18T01:07:59Z"
            },
            {
              "originalPosition": 64,
              "body": "My understanding was that the signal existed only to inform the UE that it should check back with the API.",
              "createdAt": "2018-12-16T22:10:02Z",
              "updatedAt": "2018-12-18T01:07:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg1ODY5ODg0",
          "commit": {
            "abbreviatedOid": "93450fa"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-12-18T01:08:40Z",
          "updatedAt": "2018-12-18T01:08:40Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "I think we properly capture that now.",
              "createdAt": "2018-12-18T01:08:40Z",
              "updatedAt": "2018-12-18T01:08:40Z"
            }
          ]
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "ca4d4732e1ffc198f4362447f4c79a95804d48f5",
      "headRepository": "klarose/architecture",
      "headRefName": "master",
      "headRefOid": "93450fa67cd5f1a61d16cebb506547d104178c37",
      "mergeCommit": {
        "oid": "9157202e65947cce483bae6a4b234b11ce358e4a"
      }
    },
    {
      "number": 18,
      "id": "MDExOlB1bGxSZXF1ZXN0MjM4OTcxMjE5",
      "title": "Identity depends on network attachment point",
      "url": "https://github.com/capport-wg/architecture/pull/18",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes Issue #12",
      "createdAt": "2018-12-16T14:59:37Z",
      "updatedAt": "2018-12-18T01:15:22Z",
      "closedAt": "2018-12-18T01:15:08Z",
      "mergedAt": "2018-12-18T01:15:08Z",
      "mergedBy": "klarose",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinthomson Thanks for the quick review.",
          "createdAt": "2018-12-18T01:13:32Z",
          "updatedAt": "2018-12-18T01:13:32Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg1NDA2MjU2",
          "commit": {
            "abbreviatedOid": "f628940"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I think that's about right.  But you should avoid 2119 language.  I have a few suggestions (if only GitHub had multi-line suggestions...).",
          "createdAt": "2018-12-16T22:10:57Z",
          "updatedAt": "2018-12-16T22:12:20Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n             An identifier might only apply to the current point of network attachment. If the\r\n```",
              "createdAt": "2018-12-16T22:10:58Z",
              "updatedAt": "2018-12-18T01:12:54Z"
            },
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n             device moves to a different network location its identity could change.```",
              "createdAt": "2018-12-16T22:11:35Z",
              "updatedAt": "2018-12-18T01:12:54Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n```",
              "createdAt": "2018-12-16T22:11:42Z",
              "updatedAt": "2018-12-18T01:12:54Z"
            }
          ]
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "f30fd16fc8897b4309419eebe00b8720213171a0",
      "headRepository": "klarose/architecture",
      "headRefName": "issue_12",
      "headRefOid": "0fa84ef9baf201ad1d87976fc030ae8a8724e806",
      "mergeCommit": {
        "oid": "c26a87b6ab81bf015048c3820d549a71f34b2c61"
      }
    },
    {
      "number": 19,
      "id": "MDExOlB1bGxSZXF1ZXN0MjM4OTcxODgx",
      "title": "Address non-binary blocking",
      "url": "https://github.com/capport-wg/architecture/pull/19",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Point out that future Captive Portal Signalling Protocols will not\r\nenable non-binary blocking.\r\n\r\nFixes Issue #13",
      "createdAt": "2018-12-16T15:12:15Z",
      "updatedAt": "2018-12-27T17:21:14Z",
      "closedAt": "2018-12-27T17:21:14Z",
      "mergedAt": "2018-12-27T17:21:14Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg1NDA2NDk4",
          "commit": {
            "abbreviatedOid": "d3a9458"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-12-16T22:17:13Z",
          "updatedAt": "2018-12-16T22:17:56Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "This is a strange statement to make.  We can't really make commitments for future versions of us (who might be entirely different people, even).  I think that all we can do is express the goal of this version.\r\n\r\nPerhaps this should be as simple as \"The Captive Portal Signaling Protocol does not provide any means of indicating that the network prevents access to some destinations.  The intent is to rely on the web portal to communicate local network policies.\"",
              "createdAt": "2018-12-16T22:17:13Z",
              "updatedAt": "2018-12-18T01:25:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg1ODcxNjk3",
          "commit": {
            "abbreviatedOid": "d3a9458"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-12-18T01:17:06Z",
          "updatedAt": "2018-12-18T01:17:06Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Yeah, I struggled with this one; I wasn't comfortable claiming that either. :) I think I misunderstood the request in the issue. I like your suggestion.",
              "createdAt": "2018-12-18T01:17:06Z",
              "updatedAt": "2018-12-18T01:25:23Z"
            }
          ]
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "c26a87b6ab81bf015048c3820d549a71f34b2c61",
      "headRepository": "klarose/architecture",
      "headRefName": "issue_13",
      "headRefOid": "ff0b2c01941d125912c083152c481e6339094d0a",
      "mergeCommit": {
        "oid": "f933912cf2bf3785f86c9959039df45390336f39"
      }
    },
    {
      "number": 20,
      "id": "MDExOlB1bGxSZXF1ZXN0MjM4OTczMzI1",
      "title": "Update PvD section",
      "url": "https://github.com/capport-wg/architecture/pull/20",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We were incorrectly describing the behaviour of the capport PvD option.\r\nUpdate the text to better reflect how it will work, and reference the\r\nnew draft describing that behaviour.\r\n\r\nThis removes most of the section describing the behaviour, since it's now in the new draft.\r\n\r\nFixes Issue #17.",
      "createdAt": "2018-12-16T15:39:08Z",
      "updatedAt": "2020-02-12T02:44:25Z",
      "closedAt": "2020-02-12T02:44:25Z",
      "mergedAt": "2020-02-12T02:44:25Z",
      "mergedBy": "martinthomson",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Let's talk about adoption of the capport-pvd draft before we make this sort of change.",
          "createdAt": "2018-12-16T22:19:48Z",
          "updatedAt": "2018-12-16T22:19:48Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinthomson , was the capport-pvd draft discussed during IETF 104? I don't see anything in the minutes.",
          "createdAt": "2019-03-27T12:55:04Z",
          "updatedAt": "2019-03-27T12:56:13Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "NONE",
          "body": "@klarose we did not specifically discuss the capport-pvd draft. I think that doesn't need to be in this first core flight of docs. Note we'll be discussing the core PvD doc more in intarea and hopefully will get that out to last call.",
          "createdAt": "2019-03-27T13:20:36Z",
          "updatedAt": "2019-03-27T13:20:36Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@tfpauly Alright. The existing content is still wrong, though. So, to fix this, perhaps we should just remove the references to PvDs in general?",
          "createdAt": "2019-03-27T13:44:59Z",
          "updatedAt": "2019-03-27T13:44:59Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg1NzE3Nzc1",
          "commit": {
            "abbreviatedOid": "ca882b7"
          },
          "author": "tfpauly",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-12-17T17:50:14Z",
          "updatedAt": "2018-12-17T17:50:14Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTQ4ODM4",
          "commit": {
            "abbreviatedOid": "ca882b7"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-02-12T02:15:02Z",
          "updatedAt": "2020-02-12T02:15:06Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "This paragraph might also go away.",
              "createdAt": "2020-02-12T02:15:02Z",
              "updatedAt": "2020-02-12T02:44:10Z"
            }
          ]
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "64f1aba1d42ab1fcfb660665b4e3ba10e0c5c2b8",
      "headRepository": "klarose/architecture",
      "headRefName": "issue_17",
      "headRefOid": "9b255412c463bbfd6e832157d4df8ad470dc4ab6",
      "mergeCommit": {
        "oid": "1d1e64f779ec83a7e218601b7ca5777b88c73ea5"
      }
    },
    {
      "number": 21,
      "id": "MDExOlB1bGxSZXF1ZXN0MjM4OTk2NTM0",
      "title": "Cleanup the figure",
      "url": "https://github.com/capport-wg/architecture/pull/21",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The semi-colon and period annoyed me, so I decided to clean this up.\r\n\r\nI didn't realize that you were putting the figure caption in the artwork.  That's not such a great idea.",
      "createdAt": "2018-12-16T22:58:55Z",
      "updatedAt": "2018-12-18T00:40:05Z",
      "closedAt": "2018-12-18T00:40:04Z",
      "mergedAt": "2018-12-18T00:40:04Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg1ODYzNzIx",
          "commit": {
            "abbreviatedOid": "30836e7"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-12-18T00:39:50Z",
          "updatedAt": "2018-12-18T00:39:50Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "f30fd16fc8897b4309419eebe00b8720213171a0",
      "headRepository": "capport-wg/architecture",
      "headRefName": "cleanup-figure",
      "headRefOid": "30836e7ae52a19c66e1c1c0fc11b6b25726466fd",
      "mergeCommit": {
        "oid": "ca4d4732e1ffc198f4362447f4c79a95804d48f5"
      }
    },
    {
      "number": 22,
      "id": "MDExOlB1bGxSZXF1ZXN0MjM5MzUxMjY2",
      "title": "Remove entity reference for 2119",
      "url": "https://github.com/capport-wg/architecture/pull/22",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Just to see if circle likes this better.",
      "createdAt": "2018-12-18T03:09:15Z",
      "updatedAt": "2020-02-12T02:43:39Z",
      "closedAt": "2020-02-12T02:43:39Z",
      "mergedAt": "2020-02-12T02:43:39Z",
      "mergedBy": "martinthomson",
      "comments": [],
      "reviews": [],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "c26a87b6ab81bf015048c3820d549a71f34b2c61",
      "headRepository": "martinthomson/architecture",
      "headRefName": "test-2119",
      "headRefOid": "d03fb481b31e3f50b7f5d7a41fa548df2db9ad2d",
      "mergeCommit": {
        "oid": "64f1aba1d42ab1fcfb660665b4e3ba10e0c5c2b8"
      }
    },
    {
      "number": 23,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQxMTk0MDM3",
      "title": "Update version to 03",
      "url": "https://github.com/capport-wg/architecture/pull/23",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-12-27T17:24:42Z",
      "updatedAt": "2019-12-31T13:22:03Z",
      "closedAt": "2018-12-27T17:24:51Z",
      "mergedAt": "2018-12-27T17:24:51Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "f933912cf2bf3785f86c9959039df45390336f39",
      "headRepository": "klarose/architecture",
      "headRefName": "update_version",
      "headRefOid": "457b115055d3fa49cb3b7f8a31eeebfceee6c92f",
      "mergeCommit": {
        "oid": "1b355918651c81cf1943f5a39bf419b5ee271fb6"
      }
    },
    {
      "number": 26,
      "id": "MDExOlB1bGxSZXF1ZXN0MjY1NDA1MjM1",
      "title": "Initial appendix work",
      "url": "https://github.com/capport-wg/architecture/pull/26",
      "state": "MERGED",
      "author": "thpts",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As per the discussion on the doh and capport mailing lists, a first pass of describing at least two of the ways portals are detected.",
      "createdAt": "2019-03-28T16:16:57Z",
      "updatedAt": "2019-04-01T15:06:31Z",
      "closedAt": "2019-04-01T15:06:31Z",
      "mergedAt": "2019-04-01T15:06:31Z",
      "mergedBy": "klarose",
      "comments": [
        {
          "author": "thpts",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@klarose Thank you for the feedback. I don't believe this is exhaustive, and a post to the mailing list requesting eyes would be appreciated. For example, Wikipedia lists [ICMP Redirect](https://en.wikipedia.org/wiki/Captive_portal#ICMP_redirect) as a means of detection, but I also have heard that some operating systems have disabled this.",
          "createdAt": "2019-03-28T19:33:35Z",
          "updatedAt": "2019-03-28T19:33:35Z"
        },
        {
          "author": "thpts",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@klarose Sure, meanwhile I will put together an email for the mailing list and may submit other PRs in future if we discover other implementations.",
          "createdAt": "2019-04-01T15:00:51Z",
          "updatedAt": "2019-04-01T15:00:51Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjIwMTQ4MTEy",
          "commit": {
            "abbreviatedOid": "c5c7b2c"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Seems reasonable. Thanks for doing this. ",
          "createdAt": "2019-03-28T16:52:11Z",
          "updatedAt": "2019-03-28T16:53:58Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "a fixed response",
              "createdAt": "2019-03-28T16:52:11Z",
              "updatedAt": "2019-04-01T14:44:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjIwMTgwNjgy",
          "commit": {
            "abbreviatedOid": "c5c7b2c"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks for doing this!\r\n\r\nOverall it look good. I've left a few nits/general comments.\r\n\r\nIs it worth following up with the list after merging this PR to see if there are other methods we should incorporate into the document? Or do we think this is sufficient/exhaustive?",
          "createdAt": "2019-03-28T17:49:50Z",
          "updatedAt": "2019-03-28T17:55:45Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "\"A common method is *to\"... (Or something like that)",
              "createdAt": "2019-03-28T17:49:51Z",
              "updatedAt": "2019-04-01T14:44:15Z"
            },
            {
              "originalPosition": 13,
              "body": "Should we rephrase along the lines of \"This check typically is not secured with TLS...\" Technically what we have isn't providing a recommendation, but I feel like we should try to avoid it just to avoid misunderstandings.",
              "createdAt": "2019-03-28T17:51:33Z",
              "updatedAt": "2019-04-01T14:44:15Z"
            },
            {
              "originalPosition": 15,
              "body": "This may be implied, but we may want to describe what indicates to the device that it is behind a captive portal. In this case, the fact that the response is not the known response.\r\n\r\nI'm not opposed to leaving out the criteria for a positive result, but I do prefer to be explicit.",
              "createdAt": "2019-03-28T17:52:28Z",
              "updatedAt": "2019-04-01T14:44:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjIwMjM5OTA5",
          "commit": {
            "abbreviatedOid": "c5c7b2c"
          },
          "author": "thpts",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-03-28T19:51:56Z",
          "updatedAt": "2019-03-28T19:51:57Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "To address this, I think I would have to leave `\"...with an expected response.\"` and explain that unexpected responses would flag the network as having a captive portal. @martinthomson does this make more sense, given your [comment](https://github.com/capport-wg/architecture/pull/26#discussion_r270100694) or is there a better way I could phrase this?",
              "createdAt": "2019-03-28T19:51:56Z",
              "updatedAt": "2019-04-01T14:44:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjIwMjQ2Njgw",
          "commit": {
            "abbreviatedOid": "6bd674d"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-03-28T20:06:42Z",
          "updatedAt": "2019-03-28T20:06:42Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjIwNTI3Nzgz",
          "commit": {
            "abbreviatedOid": "6bd674d"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-03-29T13:06:21Z",
          "updatedAt": "2019-03-29T13:06:21Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Yeah, \"Any other response is interpreted as a signal that the UE is captive.\"",
              "createdAt": "2019-03-29T13:06:21Z",
              "updatedAt": "2019-04-01T14:44:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjIxMTU3MzA2",
          "commit": {
            "abbreviatedOid": "590be32"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "These look good to me. If you're happy with it in its current form, I can merge it for you.",
          "createdAt": "2019-04-01T14:46:07Z",
          "updatedAt": "2019-04-01T14:46:07Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "1b355918651c81cf1943f5a39bf419b5ee271fb6",
      "headRepository": "thpts/architecture",
      "headRefName": "appendix",
      "headRefOid": "590be321e6906f81ac28ea23f8b44d2447708074",
      "mergeCommit": {
        "oid": "2b364840c3acae6dafa40788bc539f5de26c764a"
      }
    },
    {
      "number": 27,
      "id": "MDExOlB1bGxSZXF1ZXN0MjkzMDYyOTcx",
      "title": "refresh capport architecture draft",
      "url": "https://github.com/capport-wg/architecture/pull/27",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The draft was about to expire. Bump the date and version.",
      "createdAt": "2019-06-29T21:09:08Z",
      "updatedAt": "2019-06-29T21:09:59Z",
      "closedAt": "2019-06-29T21:09:54Z",
      "mergedAt": "2019-06-29T21:09:54Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "2b364840c3acae6dafa40788bc539f5de26c764a",
      "headRepository": "capport-wg/architecture",
      "headRefName": "refresh",
      "headRefOid": "b331ebfa6926a8681d8bdd7fbb41984fcc7abd20",
      "mergeCommit": {
        "oid": "de3b570d74967e93c614bc678e5be114c6044d6f"
      }
    },
    {
      "number": 30,
      "id": "MDExOlB1bGxSZXF1ZXN0MzUxMTMxNjAw",
      "title": "Describe what happens if the portal URI changes",
      "url": "https://github.com/capport-wg/architecture/pull/30",
      "state": "MERGED",
      "author": "liucougar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Just realized that, this section may also apply to the case of initial provisioning of Portal URI if multiple ways are used, such as:\r\nDHCPv4/DHCPv6/RA could be used at the same time, and they return different values;\r\n\r\nto quote 7710bis:\r\n   However, if the URIs learned are not in fact all identical the\r\n   captive device MUST prioritize URIs learned from network provisioning\r\n   or configuration mechanisms before all other URIs.  Specifically,\r\n   URIs learned via any of the options in Section 2 should take\r\n   precedence over any URI learned via some other mechanism, such as a\r\n   redirect.\r\n\r\nShall we mention anything on the initial provisioning case too here? or that will only in 7710bis?",
      "createdAt": "2019-12-09T23:52:49Z",
      "updatedAt": "2019-12-31T13:17:16Z",
      "closedAt": "2019-12-31T13:17:16Z",
      "mergedAt": "2019-12-31T13:17:15Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI5NTE1Mjg1",
          "commit": {
            "abbreviatedOid": "077f086"
          },
          "author": "tfpauly",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-12-10T00:08:23Z",
          "updatedAt": "2019-12-10T00:08:24Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Should we be referring to the portal URI here, or is it rather the API URI?",
              "createdAt": "2019-12-10T00:08:24Z",
              "updatedAt": "2019-12-31T06:21:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI5NTc2MTUy",
          "commit": {
            "abbreviatedOid": "077f086"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Thanks for doing this.  I have a few small suggestions.",
          "createdAt": "2019-12-10T03:52:47Z",
          "updatedAt": "2019-12-10T03:56:18Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n    <section title=\"Handling of Changes in Portal URI\">\r\n```",
              "createdAt": "2019-12-10T03:52:47Z",
              "updatedAt": "2019-12-31T06:21:26Z"
            },
            {
              "originalPosition": 6,
              "body": "I would strike the first sentence here.",
              "createdAt": "2019-12-10T03:53:06Z",
              "updatedAt": "2019-12-31T06:21:26Z"
            },
            {
              "originalPosition": 9,
              "body": "Consistency is king here.  \"Captive Portal API\" seems to be the full form, so you would say: \r\n```suggestion\r\n        <t>If DHCP is used, a lease renewal/rebind may return a different Captive Portal API URI.</t>\r\n```",
              "createdAt": "2019-12-10T03:55:01Z",
              "updatedAt": "2019-12-31T06:21:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzMwMDczOTAy",
          "commit": {
            "abbreviatedOid": "077f086"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-12-10T19:06:29Z",
          "updatedAt": "2019-12-10T19:06:30Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Is the URI changing a signal to reauth with the captive portal? I.e. should the UE consider it as a signal to check whether the portal is still authenticated if it is a URI to the Captive Portal API ?\r\n\r\nThe fact that there was a change could imply that the UE has associated with a different portal entirely. Should the UE preemptively check whether its session is still valid for good measure?",
              "createdAt": "2019-12-10T19:06:29Z",
              "updatedAt": "2019-12-31T06:21:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzMwMjUzMTUw",
          "commit": {
            "abbreviatedOid": "9c3aef8"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-12-11T01:34:38Z",
          "updatedAt": "2019-12-11T01:34:38Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "in 7710bis, we have the following:\r\n\r\n>   A device may learn about Captive Portal API URIs through more than\r\n>    one of (or indeed all of) the above options.  It is a network\r\n>    configuration error if the learned URIs are not all identical.\r\n> \r\n>    However, if the URIs learned are not in fact all identical the\r\n>    captive device MUST prioritize URIs learned from network provisioning\r\n>    or configuration mechanisms before all other URIs.  Specifically,\r\n>    URIs learned via any of the options in Section 2 should take\r\n>    precedence over any URI learned via a mechanism like the one\r\n>    described in Section 3.\r\n> \r\n>    If the URIs learned via more than one option described in Section 2\r\n>    are not all identical, this condition should be logged for the device\r\n>    owner or administrator.  URI precedence in this situation is not\r\n>    specified by this document.\r\n\r\nHow about we say that the captive portal API URI can not change, if it changes, it's a configuration error (inline with the above quoted paragraphs). In the case of a different API URI is returned in a dhcp renewal or RA, the end user device should ignore it and use the old one instead? (as long as the EU device is still connected to the same network, the first API URI will be used)",
              "createdAt": "2019-12-11T01:34:38Z",
              "updatedAt": "2019-12-31T06:21:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM2OTYzOTAw",
          "commit": {
            "abbreviatedOid": "9c3aef8"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-12-29T15:51:33Z",
          "updatedAt": "2019-12-29T15:51:34Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I can see cases where the captive portal provider may want to change the URI, but there isn't really any guarantee that clients currently connected will be able to detect the change in the URI, so I think it is reasonable that in such cases the provider should maintain both the old and the new one for continuity. So, this is probably a reasonable restriction.",
              "createdAt": "2019-12-29T15:51:33Z",
              "updatedAt": "2019-12-31T06:21:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM2OTY0MDQ3",
          "commit": {
            "abbreviatedOid": "9c3aef8"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-12-29T15:54:50Z",
          "updatedAt": "2019-12-29T15:54:50Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "On the other hand, I'm not sure what the restriction really provides... Is it just to side-step the question of whether we should reauthenticate? A different sort of signal may be more appropriate in that case, in which case we don't need to avoid the question at all. I think I prefer the text as it is now: just use the latest version. It's simpler.",
              "createdAt": "2019-12-29T15:54:50Z",
              "updatedAt": "2019-12-31T06:21:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM2OTY0MDg1",
          "commit": {
            "abbreviatedOid": "9c3aef8"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Looking good. Just one editorial comment.",
          "createdAt": "2019-12-29T15:55:57Z",
          "updatedAt": "2019-12-29T15:57:10Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "We intend this to be normative, right? Please use rfc2119 text in that case (i.e. `SHOULD`)",
              "createdAt": "2019-12-29T15:55:57Z",
              "updatedAt": "2019-12-31T06:21:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3MzczNzIz",
          "commit": {
            "abbreviatedOid": "7ee1dc1"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Looks good. Thanks!",
          "createdAt": "2019-12-31T13:17:06Z",
          "updatedAt": "2019-12-31T13:17:06Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "e084a2d1605614ce3f11ad599e945a84ca4b4143",
      "headRepository": "liucougar/architecture",
      "headRefName": "changed_uri",
      "headRefOid": "7ee1dc1c68cfe183f0098c5c48c74615cf8b05a0",
      "mergeCommit": {
        "oid": "403cb58aa833bf8aac2d567ea89d6a1e37ab3dbd"
      }
    },
    {
      "number": 32,
      "id": "MDExOlB1bGxSZXF1ZXN0MzU3NzQ0MzE5",
      "title": "Remove nuisance from risks",
      "url": "https://github.com/capport-wg/architecture/pull/32",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This was not phrased well. We decided in Montreal that we should\r\nrephrase the title of the nuisance captive portal in the risks section.\r\n\r\nFixes Issue #24",
      "createdAt": "2019-12-29T16:35:53Z",
      "updatedAt": "2020-01-06T22:01:36Z",
      "closedAt": "2020-01-06T22:01:36Z",
      "mergedAt": "2020-01-06T22:01:36Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3NTA5MTg1",
          "commit": {
            "abbreviatedOid": "62d6130"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-01-01T23:26:06Z",
          "updatedAt": "2020-01-01T23:26:06Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "de3b570d74967e93c614bc678e5be114c6044d6f",
      "headRepository": "klarose/architecture",
      "headRefName": "remove_nuisance",
      "headRefOid": "62d6130e23398b7e5c8756dd80980725c4ff0235",
      "mergeCommit": {
        "oid": "81637e828074056a096a73f8d893d3732bcfb951"
      }
    },
    {
      "number": 33,
      "id": "MDExOlB1bGxSZXF1ZXN0MzU3NzUwNzYx",
      "title": "API terminology consitency",
      "url": "https://github.com/capport-wg/architecture/pull/33",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We were using CAPPORT API to refer to the API or the API server without\r\nany real consistency. Clean this up by removing CAPPORT and using\r\nAPI/API Server as the short forms for the Captive Portal API and Captive\r\nPortal API Server.\r\n\r\nI also removed all references to `CAPPORT`  from the architecture diagram. I think the only remaining \"CAPPORT\" occurrences refer to the architecture itself. Not sure what we want to do there.\r\n\r\nFixes Issue #31.",
      "createdAt": "2019-12-29T16:54:22Z",
      "updatedAt": "2020-01-06T22:01:17Z",
      "closedAt": "2020-01-06T22:01:17Z",
      "mergedAt": "2020-01-06T22:01:16Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3NTA5MTc1",
          "commit": {
            "abbreviatedOid": "75a0b4d"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Very nice, thanks.",
          "createdAt": "2020-01-01T23:25:53Z",
          "updatedAt": "2020-01-01T23:25:53Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3NzMxMzY3",
          "commit": {
            "abbreviatedOid": "75a0b4d"
          },
          "author": "tfpauly",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-01-02T16:12:05Z",
          "updatedAt": "2020-01-02T16:12:05Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "de3b570d74967e93c614bc678e5be114c6044d6f",
      "headRepository": "klarose/architecture",
      "headRefName": "api-name",
      "headRefOid": "75a0b4dc4f75b11dc98775819b551cdd750cff57",
      "mergeCommit": {
        "oid": "46df0bd5068a13fc6648afad9bc81bb8bcf077d5"
      }
    },
    {
      "number": 34,
      "id": "MDExOlB1bGxSZXF1ZXN0MzU3NzUxOTg3",
      "title": "Remove pvd lead-in",
      "url": "https://github.com/capport-wg/architecture/pull/34",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "PvD is almost certainly going to be published first, so remove the\r\nlead-in to it in preparation for integrating the full rfc soon.\r\n\r\nFixes #29 ",
      "createdAt": "2019-12-29T16:57:41Z",
      "updatedAt": "2019-12-29T16:58:36Z",
      "closedAt": "2019-12-29T16:58:26Z",
      "mergedAt": "2019-12-29T16:58:26Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "de3b570d74967e93c614bc678e5be114c6044d6f",
      "headRepository": "klarose/architecture",
      "headRefName": "pvd-first",
      "headRefOid": "b00db3df8c6281828426748ceac01105d2eb693a",
      "mergeCommit": {
        "oid": "e084a2d1605614ce3f11ad599e945a84ca4b4143"
      }
    },
    {
      "number": 35,
      "id": "MDExOlB1bGxSZXF1ZXN0MzU4MzU2NjA5",
      "title": "bump version",
      "url": "https://github.com/capport-wg/architecture/pull/35",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Bump the version of the draft in preparation for submission.\r\n\r\nThis version picks up:\r\n - An editorial change related to pvds\r\n - A description of what to do when the captive portal URI changes.",
      "createdAt": "2019-12-31T13:20:46Z",
      "updatedAt": "2019-12-31T13:21:57Z",
      "closedAt": "2019-12-31T13:20:52Z",
      "mergedAt": "2019-12-31T13:20:52Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "403cb58aa833bf8aac2d567ea89d6a1e37ab3dbd",
      "headRepository": "klarose/architecture",
      "headRefName": "bump_version",
      "headRefOid": "6fcaea93cdfa7699ef65475e4e22333898c35c9a",
      "mergeCommit": {
        "oid": "c434d0764a76836fdcf53a085b4e8536e653e6cd"
      }
    },
    {
      "number": 36,
      "id": "MDExOlB1bGxSZXF1ZXN0MzU5MTkzOTAy",
      "title": "Add Heng Liu to authors list",
      "url": "https://github.com/capport-wg/architecture/pull/36",
      "state": "MERGED",
      "author": "liucougar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-01-04T08:04:47Z",
      "updatedAt": "2020-01-04T21:33:39Z",
      "closedAt": "2020-01-04T21:33:38Z",
      "mergedAt": "2020-01-04T21:33:38Z",
      "mergedBy": "ekline",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4MzcxMDAz",
          "commit": {
            "abbreviatedOid": "a09313f"
          },
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-01-04T21:33:31Z",
          "updatedAt": "2020-01-04T21:33:31Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "c434d0764a76836fdcf53a085b4e8536e653e6cd",
      "headRepository": "liucougar/architecture",
      "headRefName": "add_liucougar",
      "headRefOid": "a09313f9a4f1efe256e5ef095493ce4520a38f94",
      "mergeCommit": {
        "oid": "226209100f44e4aa9bd1b04ffa8f4d7635897bc8"
      }
    },
    {
      "number": 38,
      "id": "MDExOlB1bGxSZXF1ZXN0MzU5MTk0NDM5",
      "title": "Change year to 2020",
      "url": "https://github.com/capport-wg/architecture/pull/38",
      "state": "MERGED",
      "author": "liucougar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #37",
      "createdAt": "2020-01-04T08:14:30Z",
      "updatedAt": "2020-01-04T21:31:31Z",
      "closedAt": "2020-01-04T21:31:31Z",
      "mergedAt": "2020-01-04T21:31:31Z",
      "mergedBy": "ekline",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4MzcwOTM5",
          "commit": {
            "abbreviatedOid": "d775b8e"
          },
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-01-04T21:31:22Z",
          "updatedAt": "2020-01-04T21:31:22Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "c434d0764a76836fdcf53a085b4e8536e653e6cd",
      "headRepository": "liucougar/architecture",
      "headRefName": "fix_date",
      "headRefOid": "d775b8e311c25d7667c88327a6b1072f121757ae",
      "mergeCommit": {
        "oid": "7ad12128c30aa2d51cc0ce17df8cf3958d820015"
      }
    },
    {
      "number": 39,
      "id": "MDExOlB1bGxSZXF1ZXN0MzY3MDk2MTI1",
      "title": "Add context free URLs section",
      "url": "https://github.com/capport-wg/architecture/pull/39",
      "state": "MERGED",
      "author": "liucougar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #28",
      "createdAt": "2020-01-25T07:29:54Z",
      "updatedAt": "2020-02-13T04:14:04Z",
      "closedAt": "2020-02-12T03:01:30Z",
      "mergedAt": "2020-02-12T03:01:30Z",
      "mergedBy": "martinthomson",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for doing this! I've left a few minor comments.",
          "createdAt": "2020-01-29T13:55:26Z",
          "updatedAt": "2020-01-29T13:55:26Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Just for transparency.  Erik and I discussed this and made a few editorial changes.",
          "createdAt": "2020-02-12T03:01:56Z",
          "updatedAt": "2020-02-12T03:01:56Z"
        },
        {
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "thanks, was just trying to work on the changes here",
          "createdAt": "2020-02-13T04:14:04Z",
          "updatedAt": "2020-02-13T04:14:04Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MjY0ODU0",
          "commit": {
            "abbreviatedOid": "f8aba70"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Thanks for doing this.  This seems to accurately capture the outcome of the discussion we had.",
          "createdAt": "2020-01-28T10:22:47Z",
          "updatedAt": "2020-01-28T10:26:53Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Maybe:\r\n\r\n> This is to ensure that User Equipment can access URLs from a network other than the one that contains the captive portal.",
              "createdAt": "2020-01-28T10:22:47Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            },
            {
              "originalPosition": 20,
              "body": "Maybe you can also say \"Though a URL might still correctly resolve when the UE makes the request from a different network, it is possible that some functions could be limited to when the UE makes requests using the captive network.\"",
              "createdAt": "2020-01-28T10:26:32Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODQxODg1",
          "commit": {
            "abbreviatedOid": "f8aba70"
          },
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-01-29T03:20:22Z",
          "updatedAt": "2020-01-29T03:20:23Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Do we also need to have some text (possibly in another section) about the wisdom of having UE identifying information in the URL, especially if these URLs might be accessed from off-captive-net?  (one option is to include an authenticated hash of relevant bits or a just unique session that only the captive portal infrastructure can convert into UE-identifying information.)\r\n\r\nEdit: actually this doesn't matter as long as everything's HTTPS.  Withdrawn.",
              "createdAt": "2020-01-29T03:20:22Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODQxOTkz",
          "commit": {
            "abbreviatedOid": "148c03c"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-01-29T03:20:49Z",
          "updatedAt": "2020-01-29T03:20:50Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "changed",
              "createdAt": "2020-01-29T03:20:50Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODQyMDY1",
          "commit": {
            "abbreviatedOid": "148c03c"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-01-29T03:21:05Z",
          "updatedAt": "2020-01-29T03:21:05Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "> Maybe you can also say \"Though a URL might still correctly resolve when the UE makes the request from a different network, it is possible that some functions could be limited to when the UE makes requests using the captive network.\"\r\n\r\nadded this, thanks\r\n",
              "createdAt": "2020-01-29T03:21:05Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMTE2NTE1",
          "commit": {
            "abbreviatedOid": "148c03c"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-01-29T13:48:09Z",
          "updatedAt": "2020-01-29T13:48:10Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Should this be normative? (I.e. \"RECOMMENDED\")?",
              "createdAt": "2020-01-29T13:48:09Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMTE5Mzgw",
          "commit": {
            "abbreviatedOid": "148c03c"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-01-29T13:52:18Z",
          "updatedAt": "2020-01-29T13:52:18Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "As phrased, this is a bit ambiguous. The resource should be context free, not the URL -- i.e. all context should be in the URL, and the method for generating the resource should not depend on anything but the context within that URL. In my first read of this section, I took this to mean that the UR: should be context free.\r\n\r\nPerhaps rephrase to:\r\n\r\n\"...the resources requested: the resources should be context free so they do not ...\"",
              "createdAt": "2020-01-29T13:52:18Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMTIxMDU2",
          "commit": {
            "abbreviatedOid": "148c03c"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-01-29T13:54:40Z",
          "updatedAt": "2020-01-29T13:54:41Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Given my understanding (as outlined above), I think the issue isn't that the UE can't access URLs in a network other than the one in which they were initially captive, but rather that the resource at that URL may not render correctly in the new network. Perhaps some slight rephrasing could capture this?",
              "createdAt": "2020-01-29T13:54:41Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDA3OTgz",
          "commit": {
            "abbreviatedOid": "148c03c"
          },
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-01-29T20:38:00Z",
          "updatedAt": "2020-01-29T20:38:00Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "I could be mistaken, but my understanding of \"access from another network\" was that it could include something like a cell phone that tried to access the URL via the cell network and not via the captive wifi network.",
              "createdAt": "2020-01-29T20:38:00Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDIwODU2",
          "commit": {
            "abbreviatedOid": "148c03c"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-01-29T21:01:03Z",
          "updatedAt": "2020-01-29T21:01:04Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Yeah, that makes sense -- that's an entirely plausible scenario. I thought that the problem was that if the device serving the content at the URL used information from its network stack to render the content, then it would not work in this case.\r\n\r\nE.g. imagine that it determined the identity of the UE based on the source ip address of the tcp connection over which the http request was carried. That would almost certainly fail if the UE switched from a captive wifi network to a cell-phone network. However, if the information the UE used to identify itself to the device in the first place was carried in the URL, this would not be a problem.",
              "createdAt": "2020-01-29T21:01:03Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDIxNjMx",
          "commit": {
            "abbreviatedOid": "148c03c"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-01-29T21:02:29Z",
          "updatedAt": "2020-01-29T21:02:30Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "My reading of the current text is that it's saying that we want to put to context into the URL so that the URL is still accessible. But, if we follow the advice of using a public DNS name for the host, it should always be accessible. At issue is the content it serves being meaningful.",
              "createdAt": "2020-01-29T21:02:29Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNjE5NzI2",
          "commit": {
            "abbreviatedOid": "148c03c"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-01-30T07:21:16Z",
          "updatedAt": "2020-01-30T07:21:17Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "how about:\r\n...the resources requested: the resources should not depend on ambient...",
              "createdAt": "2020-01-30T07:21:17Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNjIwMTAx",
          "commit": {
            "abbreviatedOid": "148c03c"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-01-30T07:22:17Z",
          "updatedAt": "2020-01-30T07:22:18Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "I guess we have different interpretations of context\r\n\r\npersonally, I would not call anything in the URL as the context of the URL\r\n\r\nfor example, https://www.google.com/?q=ietf, the search query is part of the URL (and I would not call that context of the url)\r\n\r\nI think the current text is stating that the resource behind the URL should be accessible even if a non-captive network is used to access the URL. \r\n\r\nShall we clarify what context means here? or what do you suggest rephrase please?",
              "createdAt": "2020-01-30T07:22:18Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwODM1NTkx",
          "commit": {
            "abbreviatedOid": "148c03c"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-01-30T13:51:18Z",
          "updatedAt": "2020-01-30T13:51:18Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "I think we agree on what the context is. Just for good measure, I'll give an example. :)\r\n\r\nFor example, if the API returned https://example.com/captive-portal for its `user-portal-url`, and example.com used the source-ip address of the connection to present quota information to the user while rendering that page, we'd have a problem if the user briefly switched to an LTE network from the captive wifi network. \r\n\r\nHowever, if the API returned https://example.com/captive-portal?ue-identifier=X, and example.com used X to look up and present the quota information, then it wouldn't matter which network the UE was connected to.\r\n\r\nMy concern was with the phrasing:\r\n\r\n> This is to ensure that User Equipment can access URLs from a network other\"\r\n\r\nThe question of whether the URL is *accessible* is independent of whether the content served at that URL is context free. What matters here is whether it's *meaningful* and *correct*. So, maybe rephrase to:\r\n\r\n\"This is to ensure that the content served from these URLs is correct and meaningful to the User Equipment, even when accessed from a network other than the one that contains the captive portal\".\r\n\r\nSorry about the confusion and ramblings. Being somewhat disconnected from the WG at the moment, I just want to make sure I'm not misunderstanding. :)",
              "createdAt": "2020-01-30T13:51:18Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwODM2MTQ0",
          "commit": {
            "abbreviatedOid": "148c03c"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-01-30T13:52:02Z",
          "updatedAt": "2020-01-30T13:52:03Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Thanks. That sounds good.",
              "createdAt": "2020-01-30T13:52:03Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDQwNzQ5",
          "commit": {
            "abbreviatedOid": "148c03c"
          },
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-11T06:48:49Z",
          "updatedAt": "2020-02-11T06:48:49Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "This doc is currently targeting Informational.  We could all-caps recommend here, but it might be good to replicate the message over in the standards track API doc as well.",
              "createdAt": "2020-02-11T06:48:49Z",
              "updatedAt": "2020-02-12T03:00:51Z"
            }
          ]
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "81637e828074056a096a73f8d893d3732bcfb951",
      "headRepository": "liucougar/architecture",
      "headRefName": "context_free",
      "headRefOid": "c8f3b94105cacfbb0dc76860e7c7cf1f11b7da30",
      "mergeCommit": {
        "oid": "9c7473cf3aa81554c73927cf8ccf675483d6ea76"
      }
    },
    {
      "number": 42,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc0MDczMzky",
      "title": "Convert to v3 XML",
      "url": "https://github.com/capport-wg/architecture/pull/42",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-02-12T03:05:52Z",
      "updatedAt": "2020-02-12T03:13:39Z",
      "closedAt": "2020-02-12T03:13:38Z",
      "mergedAt": "2020-02-12T03:13:38Z",
      "mergedBy": "ekline",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTY0Njcy",
          "commit": {
            "abbreviatedOid": "e961bfe"
          },
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-02-12T03:13:16Z",
          "updatedAt": "2020-02-12T03:13:16Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "9c7473cf3aa81554c73927cf8ccf675483d6ea76",
      "headRepository": "capport-wg/architecture",
      "headRefName": "v3",
      "headRefOid": "e961bfeb10069ce74b9145eb3b5be99e2590c359",
      "mergeCommit": {
        "oid": "667cd6384a4975115b243fc774ebf7d39a777e71"
      }
    },
    {
      "number": 43,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc0MDc5OTc5",
      "title": "Cite 7710bis",
      "url": "https://github.com/capport-wg/architecture/pull/43",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-02-12T03:19:33Z",
      "updatedAt": "2020-02-13T00:00:24Z",
      "closedAt": "2020-02-13T00:00:24Z",
      "mergedAt": "2020-02-13T00:00:24Z",
      "mergedBy": "klarose",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note that this leaves this paragraph intact:\r\n\r\n>  Although it is not clear from RFC7710 what protocol should be executed at the specified URI, some readers might have assumed it to be an HTML page, and hence there might be User Equipment assuming a browser should open this URI. For backwards compatibility, it is RECOMMENDED that the server check the \"Accept\" field when serving the URI, and serve HTML pages for \"text/html\" and serve the API for \"application/json\". [REVISIT: are these details appropriate?]\r\n\r\nThat paragraph probably needs to go based on what is in 7710bis now.",
          "createdAt": "2020-02-12T03:20:26Z",
          "updatedAt": "2020-02-12T03:20:26Z"
        }
      ],
      "reviews": [],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "667cd6384a4975115b243fc774ebf7d39a777e71",
      "headRepository": "capport-wg/architecture",
      "headRefName": "7710bis",
      "headRefOid": "358171255a04fbbfb79b9001e25227a9eab7b740",
      "mergeCommit": {
        "oid": "358171255a04fbbfb79b9001e25227a9eab7b740"
      }
    },
    {
      "number": 44,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc0MDgyMzcy",
      "title": "Less context",
      "url": "https://github.com/capport-wg/architecture/pull/44",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This removes some text around discovering URLs with 7710[bis] and PvD.  That extra context can be handled by those documents.\r\n\r\nThis builds on #43.",
      "createdAt": "2020-02-12T03:23:48Z",
      "updatedAt": "2020-02-13T00:00:22Z",
      "closedAt": "2020-02-13T00:00:22Z",
      "mergedAt": "2020-02-13T00:00:22Z",
      "mergedBy": "klarose",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "NONE",
          "body": "Looks good",
          "createdAt": "2020-02-12T13:57:03Z",
          "updatedAt": "2020-02-12T13:57:03Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Lgtm",
          "createdAt": "2020-02-12T23:59:56Z",
          "updatedAt": "2020-02-12T23:59:56Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3Njg2NzEx",
          "commit": {
            "abbreviatedOid": "153736a"
          },
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-12T18:29:49Z",
          "updatedAt": "2020-02-12T18:29:49Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "I had been looking for a way to make the <? rfc ...refrence.I-D.ietf-capport-7710bis.xml ?> style of reference work, but my xml2rfc fu was too weak.",
              "createdAt": "2020-02-12T18:29:49Z",
              "updatedAt": "2020-02-12T18:29:49Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3Njg2ODQx",
          "commit": {
            "abbreviatedOid": "153736a"
          },
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "LGTM",
          "createdAt": "2020-02-12T18:30:01Z",
          "updatedAt": "2020-02-12T18:30:01Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "667cd6384a4975115b243fc774ebf7d39a777e71",
      "headRepository": "capport-wg/architecture",
      "headRefName": "less-context",
      "headRefOid": "153736a5c1c7a66b810a35a99fd36c0cae0649a6",
      "mergeCommit": {
        "oid": "c896f5a3faef09f16349ec1dda822ff4f1684819"
      }
    },
    {
      "number": 45,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc0MDg4NjQ2",
      "title": "Use 8174 boilerplate",
      "url": "https://github.com/capport-wg/architecture/pull/45",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-02-12T03:39:19Z",
      "updatedAt": "2020-03-31T21:43:54Z",
      "closedAt": "2020-03-31T21:43:54Z",
      "mergedAt": "2020-03-31T21:43:54Z",
      "mergedBy": "klarose",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks. I merged in the most recent changes to resolve the conflict.",
          "createdAt": "2020-03-31T21:43:41Z",
          "updatedAt": "2020-03-31T21:43:41Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3ODk4NjY5",
          "commit": {
            "abbreviatedOid": "fa96e9b"
          },
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-02-13T01:16:07Z",
          "updatedAt": "2020-02-13T01:16:07Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "7132b3627f6f5a27ecb024e6acbae1c2c041f443",
      "headRepository": "capport-wg/architecture",
      "headRefName": "8174",
      "headRefOid": "2922e7941418407713242adca29e3d2ef93b834c",
      "mergeCommit": {
        "oid": "69bb03c8b99ec7daa67149e8557429c461dbd9ab"
      }
    },
    {
      "number": 47,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc1NzEzNzg1",
      "title": "bump the version for submission",
      "url": "https://github.com/capport-wg/architecture/pull/47",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-02-15T13:04:23Z",
      "updatedAt": "2020-02-15T13:04:45Z",
      "closedAt": "2020-02-15T13:04:45Z",
      "mergedAt": "2020-02-15T13:04:45Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "c896f5a3faef09f16349ec1dda822ff4f1684819",
      "headRepository": "klarose/architecture",
      "headRefName": "bump-revision",
      "headRefOid": "5e01cfa2ac8b33d65ad9beb7a811984cb63f1b6c",
      "mergeCommit": {
        "oid": "3b11c512c4d4fc2342ff2fcd197750235f40a7e0"
      }
    },
    {
      "number": 49,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg1MTk3NTA4",
      "title": "Editorial improvements.",
      "url": "https://github.com/capport-wg/architecture/pull/49",
      "state": "MERGED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Trying to improve clarity.",
      "createdAt": "2020-03-07T21:56:16Z",
      "updatedAt": "2020-03-31T21:36:05Z",
      "closedAt": "2020-03-31T21:36:05Z",
      "mergedAt": "2020-03-31T21:36:05Z",
      "mergedBy": "klarose",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks!",
          "createdAt": "2020-03-31T21:35:58Z",
          "updatedAt": "2020-03-31T21:35:58Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MTIyMjI5",
          "commit": {
            "abbreviatedOid": "646a86c"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-03-31T21:35:50Z",
          "updatedAt": "2020-03-31T21:35:50Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "3b11c512c4d4fc2342ff2fcd197750235f40a7e0",
      "headRepository": "capport-wg/architecture",
      "headRefName": "ddolson-editorial-suggestions",
      "headRefOid": "646a86ce2d6f9beaa7fce78b8c86176298a7eaf3",
      "mergeCommit": {
        "oid": "7132b3627f6f5a27ecb024e6acbae1c2c041f443"
      }
    },
    {
      "number": 51,
      "id": "MDExOlB1bGxSZXF1ZXN0MzkyNzQ1MjE5",
      "title": "Editorial suggestions",
      "url": "https://github.com/capport-wg/architecture/pull/51",
      "state": "MERGED",
      "author": "gurshabad",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Happy to elaborate on them if the motivation is not clear from the changes, let me know!",
      "createdAt": "2020-03-24T02:48:01Z",
      "updatedAt": "2020-04-03T21:03:06Z",
      "closedAt": "2020-04-03T21:03:06Z",
      "mergedAt": "2020-04-03T21:03:06Z",
      "mergedBy": "klarose",
      "comments": [
        {
          "author": "gurshabad",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks @klarose!\r\n\r\nb1dc7ba4e26ab17ed12d8a5a2408fe8063b1177a accepts the suggestion.\r\n\r\n509d855e5ddba7dd1c5db58646c85516d0b40987 corrects the mistake I had made, which your question was about.",
          "createdAt": "2020-04-03T08:38:30Z",
          "updatedAt": "2020-04-03T08:39:02Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MTE3NzQy",
          "commit": {
            "abbreviatedOid": "40c2d58"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks for doing this! \r\n\r\nI've left one suggestion and one question.",
          "createdAt": "2020-03-31T21:28:04Z",
          "updatedAt": "2020-03-31T21:33:32Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "```suggestion\r\n            for User Equipment that has not yet satisfied the Captive Portal Conditions.</li>\r\n```",
              "createdAt": "2020-03-31T21:28:04Z",
              "updatedAt": "2020-04-03T21:02:20Z"
            },
            {
              "originalPosition": 133,
              "body": "Is there a particular reason you preferred referring to the Captive Network as opposed to the Enforcement Device? The Enforcement Device is the component within the network responsible for sending the signal. It makes sense to me that it be the thing that has not sent the signal to the User Equipment in this paragraph. ",
              "createdAt": "2020-03-31T21:31:50Z",
              "updatedAt": "2020-04-03T21:02:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODU4NTQ3",
          "commit": {
            "abbreviatedOid": "509d855"
          },
          "author": "gurshabad",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-03T00:05:36Z",
          "updatedAt": "2020-04-03T00:05:36Z",
          "comments": [
            {
              "originalPosition": 133,
              "body": "You're right, of course. I made this edit without reading the entire section (when I was slightly confused, as I noted in my email), and forgot to remove this edit.\r\n\r\n509d855e5ddba7dd1c5db58646c85516d0b40987 corrects it.",
              "createdAt": "2020-04-03T00:05:36Z",
              "updatedAt": "2020-04-03T21:02:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTc1NjA1",
          "commit": {
            "abbreviatedOid": "509d855"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Looks great. Thanks for the PR!",
          "createdAt": "2020-04-03T20:57:18Z",
          "updatedAt": "2020-04-03T20:57:18Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "28fbea9a7c3aad68fefceb7f0693853496ad800b",
      "headRepository": "gurshabad/architecture",
      "headRefName": "master",
      "headRefOid": "14484ec27e866738fa077d55d13234dc27ae6e16",
      "mergeCommit": {
        "oid": "e510e9204a761a2004b935f4a5568af2f4d90e55"
      }
    },
    {
      "number": 53,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk2NzYzNjA0",
      "title": "Shepherd writeup",
      "url": "https://github.com/capport-wg/architecture/pull/53",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I'm going to just leave this here.  I have added an affiliation.",
      "createdAt": "2020-04-01T05:13:54Z",
      "updatedAt": "2020-04-20T04:49:14Z",
      "closedAt": "2020-04-20T04:48:55Z",
      "mergedAt": "2020-04-20T04:48:55Z",
      "mergedBy": "martinthomson",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MzU3MDU1",
          "commit": {
            "abbreviatedOid": "4d76c82"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-04-07T17:55:09Z",
          "updatedAt": "2020-04-07T17:55:09Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "69bb03c8b99ec7daa67149e8557429c461dbd9ab",
      "headRepository": "capport-wg/architecture",
      "headRefName": "writeup.txt",
      "headRefOid": "4d76c821e69cd5f72fbb063d0a20c673f1fa7c05",
      "mergeCommit": {
        "oid": "d8a10da3c2dc7b8d05e9cdbd60cce83c538175bb"
      }
    },
    {
      "number": 54,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk3Mjg1NzQ3",
      "title": "Add global dns reference to RFC8499",
      "url": "https://github.com/capport-wg/architecture/pull/54",
      "state": "MERGED",
      "author": "liucougar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "closes #46",
      "createdAt": "2020-04-01T23:48:34Z",
      "updatedAt": "2020-04-02T21:23:01Z",
      "closedAt": "2020-04-02T21:23:01Z",
      "mergedAt": "2020-04-02T21:23:01Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MDQ4OTc3",
          "commit": {
            "abbreviatedOid": "8db7a0a"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Thanks!",
          "createdAt": "2020-04-02T01:09:08Z",
          "updatedAt": "2020-04-02T01:09:13Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n\t     defined in Section 2 of <xref target=\"RFC8499\"/>).\r\n```",
              "createdAt": "2020-04-02T01:09:08Z",
              "updatedAt": "2020-04-02T06:45:44Z"
            }
          ]
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "69bb03c8b99ec7daa67149e8557429c461dbd9ab",
      "headRepository": "liucougar/architecture",
      "headRefName": "global_dns",
      "headRefOid": "1e8d6a8639d1778b8b40d21cdb2ae1545876c9db",
      "mergeCommit": {
        "oid": "28fbea9a7c3aad68fefceb7f0693853496ad800b"
      }
    },
    {
      "number": 55,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk3ODM3NjUx",
      "title": "shrink the signaling section",
      "url": "https://github.com/capport-wg/architecture/pull/55",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The working group has decided that we do not need to tackle specifying\r\nthe signaling protocol. Rather than leaving the document with it\r\npartially specified, remove most of the text related to it. Keep some\r\nbasic examples of constraints.\r\n\r\nThis also removes the text which claimed that the document would specify\r\nrqeuirements for the protocol. It does not.\r\n\r\nMade a few related editorial changes.\r\n\r\nFixes #52 ",
      "createdAt": "2020-04-02T22:21:47Z",
      "updatedAt": "2020-04-07T21:53:06Z",
      "closedAt": "2020-04-07T21:53:06Z",
      "mergedAt": "2020-04-07T21:53:06Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODE5ODQw",
          "commit": {
            "abbreviatedOid": "a40bfbe"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-02T22:24:15Z",
          "updatedAt": "2020-04-02T22:24:16Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "In Martin's example on the mailing list, he mentioned rate limiting API requests. We already mention this in the API section where it discusses the captive portal signal.\r\n\r\n",
              "createdAt": "2020-04-02T22:24:15Z",
              "updatedAt": "2020-04-07T21:52:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTQ3NTYy",
          "commit": {
            "abbreviatedOid": "ec1eaea"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-03T20:06:41Z",
          "updatedAt": "2020-04-03T20:06:41Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "Wasn't it supposed to be the user device that rate-limits responses to the captive portal signal?",
              "createdAt": "2020-04-03T20:06:41Z",
              "updatedAt": "2020-04-07T21:52:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTUyNDg3",
          "commit": {
            "abbreviatedOid": "ec1eaea"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-03T20:15:40Z",
          "updatedAt": "2020-04-03T20:15:41Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "Yes. The UE should rate limit any requests to the API in response to the signal. See https://github.com/capport-wg/architecture/blob/master/draft-ietf-capport-architecture.xml#L311 (which I haven't changed here)",
              "createdAt": "2020-04-03T20:15:40Z",
              "updatedAt": "2020-04-07T21:52:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTkzODM2",
          "commit": {
            "abbreviatedOid": "ec1eaea"
          },
          "author": "tfpauly",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-04-03T21:33:24Z",
          "updatedAt": "2020-04-03T21:33:38Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "```suggestion\r\n        An Enforcement Device MUST rate-limit any signal generated in response to these conditions.  See <xref target=\"section_signal_risks\"/> for a discussion of\r\n```",
              "createdAt": "2020-04-03T21:33:24Z",
              "updatedAt": "2020-04-07T21:52:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3ODk0NDI5",
          "commit": {
            "abbreviatedOid": "ec1eaea"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Thanks for putting this together.  This seems sufficient, and brief.",
          "createdAt": "2020-04-06T01:51:30Z",
          "updatedAt": "2020-04-06T01:51:30Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "dc3b68cecf4ce4dcb7553de9dc1cc958e9264e1a",
      "headRepository": "klarose/architecture",
      "headRefName": "shrink-signalling",
      "headRefOid": "bdab8f9088b93d6a7bb2d3195850acde848ea7f0",
      "mergeCommit": {
        "oid": "9986b77d3f48d02dd2144411e8707d47bffb8f9f"
      }
    },
    {
      "number": 56,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk4Mzg3MTky",
      "title": "remove problem statement reference",
      "url": "https://github.com/capport-wg/architecture/pull/56",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This was an old, expired submission, unlikely to be revived. The intro\r\nprovides enough context about what is wrong with captive portals. A\r\nproblem statement rfc could always be made in the future if necessary,\r\nso let's just keep this document focused on the solution.\r\n\r\nFixes #48 ",
      "createdAt": "2020-04-03T21:08:24Z",
      "updatedAt": "2020-04-06T22:47:56Z",
      "closedAt": "2020-04-06T22:47:56Z",
      "mergedAt": "2020-04-06T22:47:56Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTkzNDM4",
          "commit": {
            "abbreviatedOid": "01d5893"
          },
          "author": "tfpauly",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-04-03T21:32:32Z",
          "updatedAt": "2020-04-03T21:32:32Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "e510e9204a761a2004b935f4a5568af2f4d90e55",
      "headRepository": "klarose/architecture",
      "headRefName": "remove-problem",
      "headRefOid": "01d5893a21c50f0c74fed5afaf77a4deb7afceee",
      "mergeCommit": {
        "oid": "dc3b68cecf4ce4dcb7553de9dc1cc958e9264e1a"
      }
    },
    {
      "number": 57,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk5NzY2ODcx",
      "title": "Capitalize keywords according to RFC 8174",
      "url": "https://github.com/capport-wg/architecture/pull/57",
      "state": "MERGED",
      "author": "liucougar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "closes #41",
      "createdAt": "2020-04-06T16:38:21Z",
      "updatedAt": "2020-04-16T22:02:01Z",
      "closedAt": "2020-04-16T22:02:01Z",
      "mergedAt": "2020-04-16T22:02:01Z",
      "mergedBy": "klarose",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Does this also need to update the boilerplate text that defines SHOULD, MUST, etc?",
          "createdAt": "2020-04-06T17:15:36Z",
          "updatedAt": "2020-04-06T17:15:36Z"
        },
        {
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "forgot to mention that, but the draft is already updated to use 8174 boilerplate",
          "createdAt": "2020-04-06T17:31:42Z",
          "updatedAt": "2020-04-06T17:31:42Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In the paragraph starting at line 633, we say:\r\n\r\n```\r\n                  However, it may be possible to spoof the IP address, particularly for\r\n                  malicious reasons where proper functioning of the network is not necessary\r\n                  for the malicious actor. Consequently, any solution using the IP address\r\n                  should proactively try to prevent spoofing of the IP address. Similarly,\r\n                  if the mapping of IP address to User Equipment is changed, the components\r\n                  of the architecture must remove or update their mapping to prevent spoofing.\r\n                  Demonstrations of return routeability, such as that required for TCP\r\n                  connection establishment, might be sufficient defense against spoofing,\r\n                  though this might not be sufficient in networks that use broadcast media\r\n                  (such as some wireless networks).\r\n```\r\n\r\nIn particular, \" Consequently, any solution using the IP address should proactively\" and \"the components  of the architecture must remove or update their\"\r\n\r\nI think we should either capitalize these two or rephrase them.",
          "createdAt": "2020-04-13T22:52:35Z",
          "updatedAt": "2020-04-13T22:52:35Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Aside from my one comment, lgtm. I don't think the intention of the issue was to rephrase everything that used lowercase, but to make sure that we capitalized everything we needed to.",
          "createdAt": "2020-04-13T22:55:06Z",
          "updatedAt": "2020-04-13T22:55:24Z"
        },
        {
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "changed the 2 to capital case",
          "createdAt": "2020-04-16T06:28:15Z",
          "updatedAt": "2020-04-16T06:28:15Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "lgtm, thanks.",
          "createdAt": "2020-04-16T22:01:55Z",
          "updatedAt": "2020-04-16T22:01:55Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTY0MDQ4",
          "commit": {
            "abbreviatedOid": "0e51936"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "looks OK to me",
          "createdAt": "2020-04-06T19:46:34Z",
          "updatedAt": "2020-04-06T19:46:34Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "9986b77d3f48d02dd2144411e8707d47bffb8f9f",
      "headRepository": "liucougar/architecture",
      "headRefName": "must",
      "headRefOid": "21280217bd04d49ebc85a09a78617cbe75f00244",
      "mergeCommit": {
        "oid": "88d32f2eb800c934085d5f4b0da9637d5cbe888e"
      }
    },
    {
      "number": 58,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk5NzczMjQ5",
      "title": "Add architecture notes about server authentication requirements",
      "url": "https://github.com/capport-wg/architecture/pull/58",
      "state": "MERGED",
      "author": "liucougar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "closes #50",
      "createdAt": "2020-04-06T16:51:05Z",
      "updatedAt": "2020-04-20T22:59:14Z",
      "closedAt": "2020-04-20T22:00:43Z",
      "mergedAt": "2020-04-20T22:00:42Z",
      "mergedBy": "klarose",
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'll merge this later today when I go over it and submit the new draft then.",
          "createdAt": "2020-04-20T17:10:29Z",
          "updatedAt": "2020-04-20T17:10:29Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> This appears to be the last PR active on the respository. Can we have an updated version of the draft please?\r\n\r\n@martinthomson Done.",
          "createdAt": "2020-04-20T22:14:03Z",
          "updatedAt": "2020-04-20T22:14:03Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks!  IESG here we come.",
          "createdAt": "2020-04-20T22:59:14Z",
          "updatedAt": "2020-04-20T22:59:14Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NjU3NTc5",
          "commit": {
            "abbreviatedOid": "5ecc0cd"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-04-06T22:17:45Z",
          "updatedAt": "2020-04-06T22:18:24Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I don't know what to cite here.  But it seems like you might use `<xref target=\"RFC2818\"/>` as a normative reference.",
              "createdAt": "2020-04-06T22:17:45Z",
              "updatedAt": "2020-04-20T05:03:27Z"
            },
            {
              "originalPosition": 15,
              "body": "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml",
              "createdAt": "2020-04-06T22:18:19Z",
              "updatedAt": "2020-04-20T05:03:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzE3OTIz",
          "commit": {
            "abbreviatedOid": "40747b6"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks for doing this.\r\n\r\nWhen I replied to the API document during last call, which lead to Tommy submitting the issue, I was concerned that the API document was placing requirements on the enforcement device/network as a whole. While it's not a problem to have them in that document, there is a good chance that an enforcement device implementer would look at this document first, and not see those requirements.\r\n\r\nI think we need them here.\r\n\r\nI'm primarily concerned with the requirements relating to the enforcement device allowing connections to OCSP responders, CRLs and NTP servers. See https://tools.ietf.org/html/draft-ietf-capport-api-06#section-4.1\r\n\r\nThese are pretty important, and may not be obvious to someone working at lower layers in the network.\r\n\r\nCould you add them to the section on Captive Portal Enforcement? Perhaps reference that section as facilitating the requirements you added to the User Equipment.",
          "createdAt": "2020-04-14T21:44:03Z",
          "updatedAt": "2020-04-14T21:44:16Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MDQwODE3",
          "commit": {
            "abbreviatedOid": "7ad1c23"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Some editorial comments.",
          "createdAt": "2020-04-16T22:23:55Z",
          "updatedAt": "2020-04-16T22:25:28Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n        If User Equipment supports the Captive Portal API, it MUST use TLS \r\n        validate API server TLS certificate (see <xref target=\"RFC2818\"/>).\r\n```",
              "createdAt": "2020-04-16T22:23:56Z",
              "updatedAt": "2020-04-20T05:03:27Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n        An enforcement device SHOULD allow User Equipment to connections to OCSP responders, CRLs and\r\n```",
              "createdAt": "2020-04-16T22:24:24Z",
              "updatedAt": "2020-04-20T05:03:27Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n        NTP servers while still in captive mode (see Section 4.1 in\r\n```",
              "createdAt": "2020-04-16T22:24:43Z",
              "updatedAt": "2020-04-20T05:03:27Z"
            },
            {
              "originalPosition": 18,
              "body": "What entity is the \"it\" in this \"it MUST NOT\"?",
              "createdAt": "2020-04-16T22:25:05Z",
              "updatedAt": "2020-04-20T05:03:27Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n        NTP servers while still in captive mode (see Section 4.1 in\r\n```",
              "createdAt": "2020-04-16T22:25:07Z",
              "updatedAt": "2020-04-20T05:03:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MDQ0ODM4",
          "commit": {
            "abbreviatedOid": "7ad1c23"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-16T22:33:07Z",
          "updatedAt": "2020-04-16T22:33:08Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Do you think it may be a mistake to reference the API doc here? It forms a circular dependency between them. I'm not sure what the IETF's view on that is, but it seems like it's not the greatest. Maybe just the text you have without the reference sufficient? It seems pretty obvious why it's necessary.",
              "createdAt": "2020-04-16T22:33:08Z",
              "updatedAt": "2020-04-20T05:03:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MDY3OTc5",
          "commit": {
            "abbreviatedOid": "7ad1c23"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-16T23:32:54Z",
          "updatedAt": "2020-04-16T23:32:55Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "An informative reference is fine.  These will ship together, so a loop isn't fatal.",
              "createdAt": "2020-04-16T23:32:55Z",
              "updatedAt": "2020-04-20T05:03:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MTM4MDQ0",
          "commit": {
            "abbreviatedOid": "0b2fd13"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-04-17T03:29:14Z",
          "updatedAt": "2020-04-17T03:29:14Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "moved the reference to informative section",
              "createdAt": "2020-04-17T03:29:14Z",
              "updatedAt": "2020-04-20T05:03:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTM2OTE0",
          "commit": {
            "abbreviatedOid": "0b2fd13"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "This appears to be the last PR active on the respository.  Can we have an updated version of the draft please?",
          "createdAt": "2020-04-20T04:48:12Z",
          "updatedAt": "2020-04-20T04:48:46Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Maybe there is a simpler approach here:\r\n\r\n```suggestion\r\n        (see <xref target=\"RFC2818\"/>). An Enforcement device SHOULD allow access to\r\n        any services that User Equipment could need to contact to perform certificate validation,\r\n        such as OCSP responders, CRLs, and NTP servers; see Section 4.1 of \r\n        <xref target=\"I-D.ietf-capport-api\"/> for more information.\r\n```\r\n\r\nThis avoids being definitive, but provides the same examples..",
              "createdAt": "2020-04-20T04:48:12Z",
              "updatedAt": "2020-04-20T05:03:28Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\n        If User Equipment supports the Captive Portal API, it MUST validate API server TLS certificate\r\n```",
              "createdAt": "2020-04-20T04:48:24Z",
              "updatedAt": "2020-04-20T05:03:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODQzODc2",
          "commit": {
            "abbreviatedOid": "b0ed57e"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Thanks!",
          "createdAt": "2020-04-20T22:00:30Z",
          "updatedAt": "2020-04-20T22:00:30Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "d8a10da3c2dc7b8d05e9cdbd60cce83c538175bb",
      "headRepository": "liucougar/architecture",
      "headRefName": "server_auth",
      "headRefOid": "b0ed57e00cce8960ce7eead323b4594d99a0730b",
      "mergeCommit": {
        "oid": "a6f123f4818197ee9608b0391b2e10de87f209cd"
      }
    },
    {
      "number": 59,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA2MzI2MTQz",
      "title": "bump to version 7",
      "url": "https://github.com/capport-wg/architecture/pull/59",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-04-20T22:02:43Z",
      "updatedAt": "2020-04-20T22:06:56Z",
      "closedAt": "2020-04-20T22:06:48Z",
      "mergedAt": "2020-04-20T22:06:48Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "a6f123f4818197ee9608b0391b2e10de87f209cd",
      "headRepository": "capport-wg/architecture",
      "headRefName": "bump-version",
      "headRefOid": "80afe904f4dc07aa6ac78b4d600e41c7c4102cd6",
      "mergeCommit": {
        "oid": "fb64ae67e3991913e612320eb5e790af5932dd8b"
      }
    },
    {
      "number": 65,
      "id": "MDExOlB1bGxSZXF1ZXN0NDEyNDQ2MTE4",
      "title": "replace url with uri and add reference",
      "url": "https://github.com/capport-wg/architecture/pull/65",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This replaces any 'URL' terminology with 'URI'. It also adds an informative reference to RFC 3986 , as suggested.\r\n\r\nFixes issue #64 ",
      "createdAt": "2020-05-02T12:40:43Z",
      "updatedAt": "2020-05-04T21:07:38Z",
      "closedAt": "2020-05-04T21:07:38Z",
      "mergedAt": "2020-05-04T21:07:38Z",
      "mergedBy": "klarose",
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjYwMzY5",
          "commit": {
            "abbreviatedOid": "3544d91"
          },
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-03T21:45:02Z",
          "updatedAt": "2020-05-03T21:45:02Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjYyNDcx",
          "commit": {
            "abbreviatedOid": "3544d91"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-03T22:13:19Z",
          "updatedAt": "2020-05-03T22:13:19Z",
          "comments": []
        }
      ],
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "0a949c6ae536f4db390bfdfd5d795c64ab69783f",
      "headRepository": "klarose/architecture",
      "headRefName": "issue_64",
      "headRefOid": "3544d919f64127c1d149fca00a881917f25f4672",
      "mergeCommit": {
        "oid": "09cfa68f9086f9217511f4f6b4c6ba95c4c3278e"
      }
    },
    {
      "number": 66,
      "id": "MDExOlB1bGxSZXF1ZXN0NDEyNDQ3Njkw",
      "title": "rephrase evaluating an identifier section",
      "url": "https://github.com/capport-wg/architecture/pull/66",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This rephrases the \"Evaluating an Identifier\" section (3.3) to refer to\r\nidentifier types, rather than identifiers. We now draw the distinction\r\nbetween the type of an identifier, and an identifier itself, to avoid\r\nambiguity.\r\n\r\nFixes Issue #62 ",
      "createdAt": "2020-05-02T12:54:07Z",
      "updatedAt": "2020-05-06T12:01:06Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "09cfa68f9086f9217511f4f6b4c6ba95c4c3278e",
      "headRepository": "klarose/architecture",
      "headRefName": "issue_62",
      "headRefOid": "30bfdba865e260e9f9e9bb5c185619accdfb864b",
      "closedAt": "2020-05-06T12:01:06Z",
      "mergedAt": "2020-05-06T12:01:06Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "8b9c29fe94820723073d55534cd53d7248e05b75"
      },
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'd appreciate it if a reviewer could go over the surrounding text to make sure the distinction is obvious, and we're not misusing the 'type' term.",
          "createdAt": "2020-05-02T12:54:42Z",
          "updatedAt": "2020-05-02T12:54:42Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjYwNzMz",
          "commit": {
            "abbreviatedOid": "a0ad566"
          },
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-03T21:49:46Z",
          "updatedAt": "2020-05-03T21:49:47Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "I think s/the indentifier types are good/a given identifier type is suitable/, perhaps.",
              "createdAt": "2020-05-03T21:49:46Z",
              "updatedAt": "2020-05-04T22:23:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjYwNzg2",
          "commit": {
            "abbreviatedOid": "a0ad566"
          },
          "author": "ekline",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Not yet sure this is is all that's needed, but on its own it's clarifying I think.",
          "createdAt": "2020-05-03T21:50:28Z",
          "updatedAt": "2020-05-03T21:50:28Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1Mzg5NzYw",
          "commit": {
            "abbreviatedOid": "30bfdba"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-04T22:23:35Z",
          "updatedAt": "2020-05-04T22:23:35Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Took that suggestion. Thanks.",
              "createdAt": "2020-05-04T22:23:35Z",
              "updatedAt": "2020-05-04T22:23:35Z"
            }
          ]
        }
      ]
    },
    {
      "number": 67,
      "id": "MDExOlB1bGxSZXF1ZXN0NDEyNDUwOTU5",
      "title": "Rewrite context-free URI section",
      "url": "https://github.com/capport-wg/architecture/pull/67",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This rewrites the context-free URI section to give more context. It also\r\nmoves the section out from underneath the example identifiers section,\r\nand into a proper sub-section of the top level \"User Equipment\r\nIdentity\" section.\r\n\r\nCloses issue #63 ",
      "createdAt": "2020-05-02T13:22:15Z",
      "updatedAt": "2020-05-06T12:00:36Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "09cfa68f9086f9217511f4f6b4c6ba95c4c3278e",
      "headRepository": "klarose/architecture",
      "headRefName": "issue_63",
      "headRefOid": "27c05239fd2db70bc5352e2ab0b8e636e7d211b8",
      "closedAt": "2020-05-06T12:00:35Z",
      "mergedAt": "2020-05-06T12:00:35Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "01e93f9c257809a99f25f0d9fb7ac8db299b0581"
      },
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinthomson , I mostly took your text word-for-word. Thanks for it!",
          "createdAt": "2020-05-02T13:22:55Z",
          "updatedAt": "2020-05-02T13:25:15Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTI4MjI1",
          "commit": {
            "abbreviatedOid": "7a8b5f5"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-05-02T13:24:21Z",
          "updatedAt": "2020-05-02T13:24:21Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "These last two paragraphs are the same as before, just unindented, with URL replaced by URI (in anticipation of a merge conflict with https://github.com/capport-wg/architecture/pull/65).",
              "createdAt": "2020-05-02T13:24:21Z",
              "updatedAt": "2020-05-05T12:14:49Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MjYxMDI5",
          "commit": {
            "abbreviatedOid": "27c0523"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Hardly surprising that I think this is OK :)",
          "createdAt": "2020-05-06T01:44:23Z",
          "updatedAt": "2020-05-06T01:44:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 68,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE1NzA5ODc5",
      "title": "rephrase supported api version section",
      "url": "https://github.com/capport-wg/architecture/pull/68",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Everyone was confused by the phrasing that the API needed to provide\r\nevidence it supported the architecture. Since it's a proper component of\r\nthe architecture, it doesn't really need to; that is assumed. Rather, it\r\nneeds to inform the client of versions/types/etc so that the client can\r\ndetermine whether *it* supports the API. Rephrase accordingly.\r\n\r\nFixes issue #61 ",
      "createdAt": "2020-05-10T11:58:33Z",
      "updatedAt": "2020-05-11T15:15:37Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "8b9c29fe94820723073d55534cd53d7248e05b75",
      "headRepository": "klarose/architecture",
      "headRefName": "issue_61",
      "headRefOid": "c70d1cea7d128637dd80bf9eb7bd3a546b5706af",
      "closedAt": "2020-05-11T15:15:37Z",
      "mergedAt": "2020-05-11T15:15:37Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "b270e4d2761e37ab42d7bbab411c5729a44285bd"
      },
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks again for the suggested text, @martinthomson ",
          "createdAt": "2020-05-10T11:58:57Z",
          "updatedAt": "2020-05-10T11:58:57Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NzY0MzU1",
          "commit": {
            "abbreviatedOid": "c70d1ce"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-10T17:18:37Z",
          "updatedAt": "2020-05-10T17:18:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 69,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE1NzExNjU0",
      "title": "ensure consistency in enforcement device terms",
      "url": "https://github.com/capport-wg/architecture/pull/69",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We were using \"Captive Portal Enforcement\", \"Captive Portal Enforcement\r\nDevice\" and \"Enforcement Device\", with varying capitilisation,\r\ninconsistently throughout the document. Address that by defining the\r\ncomponent as \"Captive Portal Enforcement Device\", and using that term in\r\nsection headings, and \"Enforcement Device\" everywhere else.\r\n\r\nFixes issue #60 ",
      "createdAt": "2020-05-10T12:13:16Z",
      "updatedAt": "2020-05-11T15:15:18Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "8b9c29fe94820723073d55534cd53d7248e05b75",
      "headRepository": "klarose/architecture",
      "headRefName": "issue_60",
      "headRefOid": "0d38af8fb8b9310bc8c6426fd033e01ef356e4d5",
      "closedAt": "2020-05-11T15:15:12Z",
      "mergedAt": "2020-05-11T15:15:12Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "d07d15ca46d7a62649714642890a307f0d564f70"
      },
      "comments": [
        {
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Looks good to me",
          "createdAt": "2020-05-10T17:16:48Z",
          "updatedAt": "2020-05-10T17:16:48Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NzY0Mzcz",
          "commit": {
            "abbreviatedOid": "0d38af8"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-10T17:18:55Z",
          "updatedAt": "2020-05-10T17:18:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 70,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE2MTc2NDQy",
      "title": "bump to version 8",
      "url": "https://github.com/capport-wg/architecture/pull/70",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This bumps the version of the document to 08.",
      "createdAt": "2020-05-11T15:25:09Z",
      "updatedAt": "2020-05-11T15:25:15Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "b270e4d2761e37ab42d7bbab411c5729a44285bd",
      "headRepository": "capport-wg/architecture",
      "headRefName": "bump-to-version-8",
      "headRefOid": "0471c923e35dcf7c762c3324619bd2f6aca6f901",
      "closedAt": "2020-05-11T15:25:15Z",
      "mergedAt": "2020-05-11T15:25:15Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "931097e1b8e8c3e62670ff1fbad0ace704631155"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 119,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM0OTY0MjUw",
      "title": "New, consistent term of User Portal",
      "url": "https://github.com/capport-wg/architecture/pull/119",
      "state": "MERGED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "To replace \"web-portal\" and \"Captive Portal Server\"\r\nAddress issue #45",
      "createdAt": "2020-06-16T04:21:52Z",
      "updatedAt": "2020-06-16T13:10:09Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "c23985333f98bc2489501872d412df74ebe0b1bd",
      "headRepository": "capport-wg/architecture",
      "headRefName": "addressing-editorial-issues",
      "headRefOid": "7943cc675c3b74f3c1ffb4d3f788adad1a98ed19",
      "closedAt": "2020-06-16T12:17:47Z",
      "mergedAt": "2020-06-16T12:17:46Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "84eec31f018e2349efeb1f90e8a125c9162cc4da"
      },
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note: this actually fixed #78 ",
          "createdAt": "2020-06-16T12:50:22Z",
          "updatedAt": "2020-06-16T12:50:22Z"
        },
        {
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Sorry, don't know where I got 45 from",
          "createdAt": "2020-06-16T13:10:09Z",
          "updatedAt": "2020-06-16T13:10:09Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMTUyNjEx",
          "commit": {
            "abbreviatedOid": "7943cc6"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "A reasonable change.",
          "createdAt": "2020-06-16T04:33:18Z",
          "updatedAt": "2020-06-16T04:33:18Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDQyNzAy",
          "commit": {
            "abbreviatedOid": "7943cc6"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2020-06-16T12:17:37Z",
          "updatedAt": "2020-06-16T12:17:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 120,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM1MTgwODE5",
      "title": "mention that user portal is not mandatory",
      "url": "https://github.com/capport-wg/architecture/pull/120",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This was raise during multiple reviews: the api doesn't make the user\r\nportal URI mandatory. Further, there is a use-case where we want to\r\nnotify of a 'venue url' without being captive. Change up the wording.\r\n\r\nFixes #71",
      "createdAt": "2020-06-16T12:28:22Z",
      "updatedAt": "2020-06-16T13:30:35Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "84eec31f018e2349efeb1f90e8a125c9162cc4da",
      "headRepository": "klarose/architecture",
      "headRefName": "issue-71-uri-not-mandatory",
      "headRefOid": "a87d2bc1d7ab64cf0e736cdc21a804fbb6883af2",
      "closedAt": "2020-06-16T13:30:35Z",
      "mergedAt": "2020-06-16T13:30:34Z",
      "mergedBy": "dcdolson",
      "mergeCommit": {
        "oid": "a776b1f4428286a7b6825bbe10249408a2725a01"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDk1Njgw",
          "commit": {
            "abbreviatedOid": "a87d2bc"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-16T13:22:21Z",
          "updatedAt": "2020-06-16T13:22:21Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNTAwNTM4",
          "commit": {
            "abbreviatedOid": "a87d2bc"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "The new wording leaves it open for the API to make it optional. OK.",
          "createdAt": "2020-06-16T13:27:30Z",
          "updatedAt": "2020-06-16T13:29:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 121,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM1MTg0MjYx",
      "title": "do not imply that the document is a standard",
      "url": "https://github.com/capport-wg/architecture/pull/121",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The document is informational. We had some language implying that it\r\nintended to be standards-track. Rephrase.\r\n\r\nFixes #74",
      "createdAt": "2020-06-16T12:35:07Z",
      "updatedAt": "2020-06-16T13:18:58Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "84eec31f018e2349efeb1f90e8a125c9162cc4da",
      "headRepository": "klarose/architecture",
      "headRefName": "issue-74-not-standard",
      "headRefOid": "e02aac1b636ace76ce7e7410a1622bf776ad61a6",
      "closedAt": "2020-06-16T13:18:58Z",
      "mergedAt": "2020-06-16T13:18:58Z",
      "mergedBy": "dcdolson",
      "mergeCommit": {
        "oid": "eae32d0198312d625078c5d64b45a00bf042dab2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDkxNzU2",
          "commit": {
            "abbreviatedOid": "e02aac1"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-16T13:18:00Z",
          "updatedAt": "2020-06-16T13:18:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 122,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM1MTkxMDQ0",
      "title": "replace capport with captive portal",
      "url": "https://github.com/capport-wg/architecture/pull/122",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This replaces all mentions of capport (other than document slugs) with\r\n\"captive portal\". Note: this change includes the title of the document.\r\n\r\nFixes #76 ",
      "createdAt": "2020-06-16T12:47:56Z",
      "updatedAt": "2020-06-16T13:15:48Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "84eec31f018e2349efeb1f90e8a125c9162cc4da",
      "headRepository": "klarose/architecture",
      "headRefName": "issue-76-no-capport",
      "headRefOid": "eb04b93bf0cf4b3b71e9fc2000c60d3ea5ae349c",
      "closedAt": "2020-06-16T13:15:48Z",
      "mergedAt": "2020-06-16T13:15:48Z",
      "mergedBy": "dcdolson",
      "mergeCommit": {
        "oid": "eca281ee37411f101e17e013d3d7abb6491176cb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDg4NzI2",
          "commit": {
            "abbreviatedOid": "eb04b93"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-16T13:14:42Z",
          "updatedAt": "2020-06-16T13:14:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 123,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM1MjAzMDcx",
      "title": "Clarify that we are not handling UI-less devices",
      "url": "https://github.com/capport-wg/architecture/pull/123",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Multiple reviewers objected to the way in which we captured interactions\r\nwith headless/UI-less devices. Clarify the document's intent.\r\n\r\nDo this by removing language that indicated that we would eventually get\r\naround to adding the requirements, and specify explicitly that we are\r\nnot handling devices without UIs.\r\n\r\nFixes #77 \r\nFixes #114",
      "createdAt": "2020-06-16T13:09:50Z",
      "updatedAt": "2020-06-17T11:37:45Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "84eec31f018e2349efeb1f90e8a125c9162cc4da",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-77-not-yet",
      "headRefOid": "a09b81c688ecd004a6f9f25b6f07b4b072019a88",
      "closedAt": "2020-06-17T11:37:45Z",
      "mergedAt": "2020-06-17T11:37:45Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "f308466311fe2785be06ce093dee5681baf9871d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxOTgzNzEw",
          "commit": {
            "abbreviatedOid": "3e45034"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "We might want to avoid relying on the captivity concept so heavily, but this is a good change nonetheless.",
          "createdAt": "2020-06-17T00:43:57Z",
          "updatedAt": "2020-06-17T00:44:40Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n       devices to negotiate for unrestricted network access. A future document could provide a solution\r\n```",
              "createdAt": "2020-06-17T00:43:57Z",
              "updatedAt": "2020-06-17T11:37:14Z"
            }
          ]
        }
      ]
    },
    {
      "number": 124,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM1Nzk0OTM3",
      "title": "Remove title case from section 3.2 list",
      "url": "https://github.com/capport-wg/architecture/pull/124",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We shouldn't be using title case; it's just a list.\r\n\r\nFixes #79",
      "createdAt": "2020-06-17T11:41:11Z",
      "updatedAt": "2020-06-17T11:41:20Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "f308466311fe2785be06ce093dee5681baf9871d",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-79",
      "headRefOid": "02f7fff47a63135d09130c4962d7e869db574f8a",
      "closedAt": "2020-06-17T11:41:20Z",
      "mergedAt": "2020-06-17T11:41:20Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "bf3547746195c0751cc344e48d350b9904daf802"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 125,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM1Nzk5NTI4",
      "title": "expand ue to user equipment",
      "url": "https://github.com/capport-wg/architecture/pull/125",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We only use UE in one section. Everywhere else we use User Equipment.\r\nExpand UE in that section so we are consistent with our use of it.\r\n\r\nFixes #80",
      "createdAt": "2020-06-17T11:50:33Z",
      "updatedAt": "2020-06-18T11:29:47Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "bf3547746195c0751cc344e48d350b9904daf802",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-80-expand-ue",
      "headRefOid": "b7689bb870457691a676c325d851296fcc3959a1",
      "closedAt": "2020-06-18T11:29:47Z",
      "mergedAt": "2020-06-18T11:29:47Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "febf6378398946595435e70133e614dcda26ee55"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 126,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM1ODA1ODUz",
      "title": "expand RA in the abstract",
      "url": "https://github.com/capport-wg/architecture/pull/126",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We never defined what RA was. Do so by expanding it to Router\r\nAdvertisment in the abstract.\r\n\r\nFixes #81",
      "createdAt": "2020-06-17T12:03:41Z",
      "updatedAt": "2020-06-18T11:29:06Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "bf3547746195c0751cc344e48d350b9904daf802",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-81-expand-ra",
      "headRefOid": "88bb17043d0282d898a701bdf4733128d084968f",
      "closedAt": "2020-06-18T11:29:06Z",
      "mergedAt": "2020-06-18T11:29:06Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "29b66188ee29919c59c4c64083f56ddc3152baa7"
      },
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note: it's still not clear to me whether we need to cite the RA/DHCP/etc RFCs, or whether they're considered 'well-known' enough to be left alone. Or, is that a questdion for the rfc editors?",
          "createdAt": "2020-06-17T12:04:27Z",
          "updatedAt": "2020-06-17T12:04:27Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm comfortable with taking DHCP and Router Advertisements as assumed knowledge.  Both are on the [standard abbreviation list](https://www.rfc-editor.org/materials/abbrev.expansion.txt).",
          "createdAt": "2020-06-18T01:16:49Z",
          "updatedAt": "2020-06-18T01:16:49Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 127,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM1ODA5OTk2",
      "title": "Clarify network access when captive",
      "url": "https://github.com/capport-wg/architecture/pull/127",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "There was some confusion about how network access is constrained for\r\nwhen the user equipment hasn't satisfied the captive portal conditions.\r\n\r\nMention that it's up to the provider's policies.\r\n\r\nFixes #83 ",
      "createdAt": "2020-06-17T12:12:19Z",
      "updatedAt": "2020-06-17T15:58:47Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "bf3547746195c0751cc344e48d350b9904daf802",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-83",
      "headRefOid": "8143f64411f557daf3168389ccf261f343cd8f64",
      "closedAt": "2020-06-17T15:58:46Z",
      "mergedAt": "2020-06-17T15:58:46Z",
      "mergedBy": "dcdolson",
      "mergeCommit": {
        "oid": "fcf31398430e17856781a66478b1e5c128c6c087"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNTQ3Njc4",
          "commit": {
            "abbreviatedOid": "8143f64"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-17T15:58:29Z",
          "updatedAt": "2020-06-17T15:58:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 128,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM2NDE4NDM2",
      "title": "mention scale and redundancy",
      "url": "https://github.com/capport-wg/architecture/pull/128",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "It makes sense that in a network each component would have multiple\r\nreplicas for redundancy and scale. Mention that.\r\n\r\nFixes #84",
      "createdAt": "2020-06-18T11:46:55Z",
      "updatedAt": "2020-06-19T11:42:43Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "febf6378398946595435e70133e614dcda26ee55",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-84",
      "headRefOid": "1925e6d3adb8ed67642d7ec461304cb240ea9fcc",
      "closedAt": "2020-06-19T11:42:43Z",
      "mergedAt": "2020-06-19T11:42:43Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "db2278151e737ea08b4787e1166ca11bff1ab246"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMzQ4NDcz",
          "commit": {
            "abbreviatedOid": "a72bc19"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-18T14:35:29Z",
          "updatedAt": "2020-06-18T14:35:29Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I think it should be \"Furthermore\".",
              "createdAt": "2020-06-18T14:35:29Z",
              "updatedAt": "2020-06-19T11:41:56Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMzQ4OTI2",
          "commit": {
            "abbreviatedOid": "a72bc19"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-18T14:35:54Z",
          "updatedAt": "2020-06-18T14:35:54Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I think we need a comma after \"Device\"",
              "createdAt": "2020-06-18T14:35:54Z",
              "updatedAt": "2020-06-19T11:41:56Z"
            }
          ]
        }
      ]
    },
    {
      "number": 129,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM2NDI1MzE4",
      "title": "mention dual stack for ip identifiers",
      "url": "https://github.com/capport-wg/architecture/pull/129",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "If we're using an IP as an identifier, dual stack can add complexity.\r\nMention this.\r\n\r\nFixes #85",
      "createdAt": "2020-06-18T12:01:13Z",
      "updatedAt": "2020-06-19T12:59:43Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "febf6378398946595435e70133e614dcda26ee55",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-85-dual-stack",
      "headRefOid": "239fc28bc1f2c1bb7ba171d8b27ea11b33e71b4c",
      "closedAt": "2020-06-19T12:59:43Z",
      "mergedAt": "2020-06-19T12:59:43Z",
      "mergedBy": "dcdolson",
      "mergeCommit": {
        "oid": "786d5197c5aa0c8162c7b8e7d2df816924666772"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMzQxNjA0",
          "commit": {
            "abbreviatedOid": "8d5da7a"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-18T14:29:16Z",
          "updatedAt": "2020-06-18T14:29:16Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "addresses.",
              "createdAt": "2020-06-18T14:29:16Z",
              "updatedAt": "2020-06-19T12:24:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMzQ1NjQ0",
          "commit": {
            "abbreviatedOid": "8d5da7a"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-18T14:32:55Z",
          "updatedAt": "2020-06-18T14:32:55Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "I think dual-stack is covered in the above paragraph about multiple IP addresses. One IPv4 and one IPv6 is multiple addresses.\r\n",
              "createdAt": "2020-06-18T14:32:55Z",
              "updatedAt": "2020-06-19T12:24:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMzQ2NjI1",
          "commit": {
            "abbreviatedOid": "8d5da7a"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-18T14:33:46Z",
          "updatedAt": "2020-06-18T14:33:46Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "How about we just change the previous paragraph to, \"... may have multiple IP addresses (either IPv4 or IPv6), ...\"",
              "createdAt": "2020-06-18T14:33:46Z",
              "updatedAt": "2020-06-19T12:24:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDA5ODY5",
          "commit": {
            "abbreviatedOid": "8d5da7a"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-19T11:40:12Z",
          "updatedAt": "2020-06-19T11:40:13Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "We can maybe combine the two. The point was the mention the dual stack case, because it provides challenges beyond just having multiple IPv6 addresses (a reviewer explicitly asked for it to be called out). But, now that I think about it, that challenge already existed for ipv4 (as we well-know).  I want to make it clear that they can be assigned at the same time, though. I think reference dual-stack helps with that.\r\n\r\nSo, how about:\r\n\r\n\"may have multiple IP Addresses (either IPv4, IPv6 or a combination as in dual-stack)...\"\r\n\r\n",
              "createdAt": "2020-06-19T11:40:12Z",
              "updatedAt": "2020-06-19T12:24:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDMyNDc4",
          "commit": {
            "abbreviatedOid": "8d5da7a"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-19T12:20:59Z",
          "updatedAt": "2020-06-19T12:21:00Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Sounds good. I think the challenges are the same for multiple IP addresses of any kind.\r\nWhat do you think of the more concise, \"either IPv4, IPv6, or a dual-stack combination\" ?",
              "createdAt": "2020-06-19T12:21:00Z",
              "updatedAt": "2020-06-19T12:24:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDMzMDIy",
          "commit": {
            "abbreviatedOid": "8d5da7a"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-19T12:21:51Z",
          "updatedAt": "2020-06-19T12:21:51Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "like it. I'll make the change. Thanks.",
              "createdAt": "2020-06-19T12:21:51Z",
              "updatedAt": "2020-06-19T12:24:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDU2NzQz",
          "commit": {
            "abbreviatedOid": "239fc28"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-19T12:59:35Z",
          "updatedAt": "2020-06-19T12:59:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 130,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM3MDY3NzI5",
      "title": "add mac address section",
      "url": "https://github.com/capport-wg/architecture/pull/130",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We've had lots of people asking about the mac address as an identifier.\r\nMention it, and point out that we won't give a deep discussion about it.\r\n\r\nFixes #86 ",
      "createdAt": "2020-06-19T12:13:54Z",
      "updatedAt": "2020-06-20T11:31:00Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "db2278151e737ea08b4787e1166ca11bff1ab246",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-86-mac-address",
      "headRefOid": "06dbc90baa5a83835d5b02eb027c097bcad0c68e",
      "closedAt": "2020-06-20T11:31:00Z",
      "mergedAt": "2020-06-20T11:31:00Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "326c007177dcec661396e5bec698febd38af0363"
      },
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This one will likely be controversial. I wouldn't mind input from a few others.",
          "createdAt": "2020-06-19T12:18:49Z",
          "updatedAt": "2020-06-19T12:18:49Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for the reviews/suggestions.",
          "createdAt": "2020-06-20T11:30:26Z",
          "updatedAt": "2020-06-20T11:30:26Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDMzOTU5",
          "commit": {
            "abbreviatedOid": "f65dc1f"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-19T12:23:23Z",
          "updatedAt": "2020-06-19T12:23:23Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I think change \"identity\" to \"identifier\".",
              "createdAt": "2020-06-19T12:23:23Z",
              "updatedAt": "2020-06-20T11:30:32Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTQzMTc1",
          "commit": {
            "abbreviatedOid": "43a092a"
          },
          "author": "tfpauly",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-19T14:57:01Z",
          "updatedAt": "2020-06-19T14:57:01Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n            This document does not discuss the use of MAC addresses within a captive portal system, but they can be used\r\n```",
              "createdAt": "2020-06-19T14:57:01Z",
              "updatedAt": "2020-06-20T11:30:33Z"
            }
          ]
        }
      ]
    },
    {
      "number": 131,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM3MDc0NDg0",
      "title": "do not restrict provisioning protocols in abstract",
      "url": "https://github.com/capport-wg/architecture/pull/131",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Open up the abstract's wording a bit so we make it clear that other\r\nprovisioning protocols could be used in the future for discovering the\r\nAPI URI.\r\n\r\nFixes #87 ",
      "createdAt": "2020-06-19T12:29:14Z",
      "updatedAt": "2020-06-19T12:55:38Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "db2278151e737ea08b4787e1166ca11bff1ab246",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-87",
      "headRefOid": "840a8e8ec38d677a8ac9dd1a8c3aad1f0d39e7e2",
      "closedAt": "2020-06-19T12:55:37Z",
      "mergedAt": "2020-06-19T12:55:37Z",
      "mergedBy": "dcdolson",
      "mergeCommit": {
        "oid": "875b24528dafcb030bd01351468ebcc6fe32d237"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDUzOTIw",
          "commit": {
            "abbreviatedOid": "840a8e8"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-19T12:55:27Z",
          "updatedAt": "2020-06-19T12:55:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 132,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM3MDc3ODMz",
      "title": "clarify that web portal opens up access",
      "url": "https://github.com/capport-wg/architecture/pull/132",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The api does not tell the enforcement device to open up any more -- in\r\nthe current version of the architecture, it is read only. The web portal\r\nis still responsible for doing this. Change the phrasing in the workflow\r\nsection to align.\r\n\r\nFixes #88",
      "createdAt": "2020-06-19T12:36:54Z",
      "updatedAt": "2020-06-19T12:54:08Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "db2278151e737ea08b4787e1166ca11bff1ab246",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-88-web-portal-opens",
      "headRefOid": "1bbc5eaaa4de6a3668c745e3d61a0f8cd1da50ed",
      "closedAt": "2020-06-19T12:54:08Z",
      "mergedAt": "2020-06-19T12:54:07Z",
      "mergedBy": "dcdolson",
      "mergeCommit": {
        "oid": "ac1f4104665ba60d0b197a9a8d0849cf4b34d029"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDUyNjQ1",
          "commit": {
            "abbreviatedOid": "1bbc5ea"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-19T12:53:35Z",
          "updatedAt": "2020-06-19T12:53:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 133,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM4NTI3ODY1",
      "title": "refrence rfc6125 in section 2.1",
      "url": "https://github.com/capport-wg/architecture/pull/133",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A reviewer requested that we provide more detail on how the user\r\nequipment should so certificate validation. This does so.\r\n\r\nFixes #89 ",
      "createdAt": "2020-06-23T12:10:05Z",
      "updatedAt": "2020-06-24T11:45:21Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "326c007177dcec661396e5bec698febd38af0363",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-89-rfc6125",
      "headRefOid": "92385acd3c959a28188f79c013f500c460c26d47",
      "closedAt": "2020-06-24T11:45:21Z",
      "mergedAt": "2020-06-24T11:45:21Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "1d3d16f0b1c01e8041a422940bc663a73b42fd79"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NzMyMDQw",
          "commit": {
            "abbreviatedOid": "92385ac"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-23T12:30:58Z",
          "updatedAt": "2020-06-23T12:30:58Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Looking at RFC6125 (section B.2), maybe should replace \"the iPAddress subjectAltName is used to validate the server certificate.\" with, \"... the iPAddress subjectAltName must be present in the certificate and must exactly match the IP address in the API server's URI.\"",
              "createdAt": "2020-06-23T12:30:58Z",
              "updatedAt": "2020-06-23T12:30:58Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MjM4ODM3",
          "commit": {
            "abbreviatedOid": "92385ac"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-24T00:03:57Z",
          "updatedAt": "2020-06-24T00:04:09Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "I don't think that we need to copy requirements.  The citation exists.  This is merely assistance in finding the right pieces in 6125.",
              "createdAt": "2020-06-24T00:03:57Z",
              "updatedAt": "2020-06-24T00:04:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NTY4MzE3",
          "commit": {
            "abbreviatedOid": "92385ac"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-24T11:44:46Z",
          "updatedAt": "2020-06-24T11:45:11Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Thanks for the input. I'll keep Ben's phrasing for now.",
              "createdAt": "2020-06-24T11:44:46Z",
              "updatedAt": "2020-06-24T11:45:11Z"
            }
          ]
        }
      ]
    },
    {
      "number": 134,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM5MTU4MjM1",
      "title": "recommend that the user portal uri be https",
      "url": "https://github.com/capport-wg/architecture/pull/134",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We never talked about TLS for the user portal. Add a bit of language\r\nrelated to that.\r\n\r\nFixes #90\r\n\r\nTo discuss:\r\n - Should this be a MUST? Existing solutions often don't use https, but that may not be a good reason to loosen the requirement.\r\n - Have I properly mentioned the URI scheme as being https? Do we even need to do that? I'm trying to put a requirement on the API that it provide a URI that lends itself to tls-based communication, which is why I took that approach.",
      "createdAt": "2020-06-24T11:55:00Z",
      "updatedAt": "2020-06-26T11:46:01Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "1d3d16f0b1c01e8041a422940bc663a73b42fd79",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-90-user-portal-tls",
      "headRefOid": "8821af146ba1df68c4c394272e45807d72fdab0b",
      "closedAt": "2020-06-26T11:46:00Z",
      "mergedAt": "2020-06-26T11:46:00Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "9497d9c93b66b51f69ffe45b73e7186b8514b489"
      },
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinthomson using MUST makes sense. I've taken  your suggestion.",
          "createdAt": "2020-06-25T11:31:38Z",
          "updatedAt": "2020-06-25T11:31:38Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MDc4NzI5",
          "commit": {
            "abbreviatedOid": "df91bf3"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-24T23:44:52Z",
          "updatedAt": "2020-06-24T23:44:53Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Consistent with our requirements in the API, this could be MUST.\r\n\r\n```suggestion\r\n         the URI MUST be https so that the User Equipment communicates with\r\n```",
              "createdAt": "2020-06-24T23:44:53Z",
              "updatedAt": "2020-06-25T11:30:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 135,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM5OTc0NDEw",
      "title": "clean up various review nits",
      "url": "https://github.com/capport-wg/architecture/pull/135",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "One of the reviewers had a bunch of nits. This addresses all of them in\r\none commit.\r\n\r\nFixes #91\r\n\r\nSee The issue for the list of nits.",
      "createdAt": "2020-06-25T12:02:08Z",
      "updatedAt": "2020-06-26T11:51:00Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "1d3d16f0b1c01e8041a422940bc663a73b42fd79",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-91-nits",
      "headRefOid": "19919492bbec2f7407159f27ee69d1afdf3e957a",
      "closedAt": "2020-06-26T11:50:59Z",
      "mergedAt": "2020-06-26T11:50:59Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "b861cf998f8bbb1eccda5803ba51fbd50e8b8a53"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MDA3NDQz",
          "commit": {
            "abbreviatedOid": "b0d59f4"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM.  Some small tweaks suggested.",
          "createdAt": "2020-06-26T04:35:41Z",
          "updatedAt": "2020-06-26T04:38:11Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n       Common methods of alerting the user in implementations prior to this\r\n```",
              "createdAt": "2020-06-26T04:35:42Z",
              "updatedAt": "2020-06-26T11:48:58Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\n            acknowledging a huge variety of pre-existing portals and end-user\r\n```\r\n\r\nor \r\n\r\n```suggestion\r\n            acknowledging the existence of a huge variety of pre-existing portals and end-user\r\n```",
              "createdAt": "2020-06-26T04:35:54Z",
              "updatedAt": "2020-06-26T11:48:58Z"
            },
            {
              "originalPosition": 141,
              "body": "```suggestion\r\n                  Equipment identifier is referenced externally by devices such as billing systems,\r\n```",
              "createdAt": "2020-06-26T04:37:46Z",
              "updatedAt": "2020-06-26T11:48:58Z"
            }
          ]
        }
      ]
    },
    {
      "number": 136,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQwNTQ3MDU2",
      "title": "update component diagram to mention optional visit",
      "url": "https://github.com/capport-wg/architecture/pull/136",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Whether or not the user visits the User Portal is optional: the user\r\ncould choose not to, or the Captive Portal may not provide one. Clarify\r\nthat the case presented in the component diagram is the one where the\r\nUser Portal is present, and where the user chooses to visit it.\r\n\r\nFixes #94 ",
      "createdAt": "2020-06-26T12:04:12Z",
      "updatedAt": "2020-06-28T12:57:53Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "b861cf998f8bbb1eccda5803ba51fbd50e8b8a53",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-94-optional",
      "headRefOid": "1b09a794b8208ec67509a1a90b727de3ce307730",
      "closedAt": "2020-06-28T12:57:53Z",
      "mergedAt": "2020-06-28T12:57:52Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "23e1ee00cc9af777bea9c8bc62759defaf5fe219"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NDMyMDM4",
          "commit": {
            "abbreviatedOid": "1b09a79"
          },
          "author": "tfpauly",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-26T16:26:36Z",
          "updatedAt": "2020-06-26T16:26:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 137,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQxMDU1OTI3",
      "title": "define session in terminology",
      "url": "https://github.com/capport-wg/architecture/pull/137",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The idea of a session is important, both because it is used in the API\r\ndocument, and because it helps to tie everything together. Define it in\r\nthe terminology.\r\n\r\nFixes #92 ",
      "createdAt": "2020-06-28T13:20:23Z",
      "updatedAt": "2020-06-30T11:42:48Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "23e1ee00cc9af777bea9c8bc62759defaf5fe219",
      "headRepository": "klarose/architecture",
      "headRefName": "issue-92-session",
      "headRefOid": "e81b294ad01981aae85d95b8b6b7724719cad647",
      "closedAt": "2020-06-30T11:42:48Z",
      "mergedAt": "2020-06-30T11:42:48Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "a84e3348c4c5a4b5d66894e5b6519cdf5048b403"
      },
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is a first stab at defining the session. I suspect we may need to iterate on it once or twice. Let me know if you think it deserves its own section on top of the terminology.",
          "createdAt": "2020-06-28T13:21:41Z",
          "updatedAt": "2020-06-28T13:21:41Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for doing this! Here\u2019s a suggested alternate way to explain this. Feel free to modify as desired. \n\n\nCaptive Portal Session: Also referred to simply as the \u201csession\u201d, a Captive Portal Session is the association for a particular User Equipment that starts when it interacts with the Captive Portal and gains open access to the network, and ends when the User Equipment moves back into the original captive state. The Captive Network maintains the state of each active Session, and can limit Sessions based on a length of time or a number of bytes used. The Session is associated with a particular User Equipment using the User Equipment's identifier (see <xref target=\"ue_identity\"/>).",
          "createdAt": "2020-06-28T14:12:13Z",
          "updatedAt": "2020-06-28T14:12:13Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Thanks for doing this! Here\u2019s a suggested alternate way to explain this. Feel free to modify as desired.\r\n> \r\n\r\nThanks, Tommy.\r\n\r\nYour phrasing is better. It manages to work in the session limits while keeping it about the same lenght. I've taken it almost verbatim.\r\n\r\n@dcdolson Do you have any input on this topic?\r\n",
          "createdAt": "2020-06-29T11:56:52Z",
          "updatedAt": "2020-06-29T11:56:52Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MjE0Nzk1",
          "commit": {
            "abbreviatedOid": "e81b294"
          },
          "author": "tfpauly",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-29T14:42:09Z",
          "updatedAt": "2020-06-29T14:42:09Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MjM3Mjg5",
          "commit": {
            "abbreviatedOid": "e81b294"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-29T15:05:17Z",
          "updatedAt": "2020-06-29T15:05:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 138,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQxMDU3MTcx",
      "title": "Mention escaping captivity in api def",
      "url": "https://github.com/capport-wg/architecture/pull/138",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The API provides more than just a simple boolean sttate: it allows the\r\nUE to learn how to escape captivity. To set the tone for a more\r\ncomplicated API, mention this in the terminology section's definition of\r\nthe Captive Portal API.\r\n\r\nFixes #93",
      "createdAt": "2020-06-28T13:29:36Z",
      "updatedAt": "2020-07-01T10:57:13Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "23e1ee00cc9af777bea9c8bc62759defaf5fe219",
      "headRepository": "klarose/architecture",
      "headRefName": "issue-93-expand-api-def",
      "headRefOid": "6fa2592a528a1955f1632895c1301d3c567f8df6",
      "closedAt": "2020-07-01T10:57:13Z",
      "mergedAt": "2020-07-01T10:57:13Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "e7f5a79e14fed2a5413aa3d148b2dabfd06d6f71"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4Nzg0MjE4",
          "commit": {
            "abbreviatedOid": "f960353"
          },
          "author": "tfpauly",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-28T14:13:48Z",
          "updatedAt": "2020-06-29T14:42:32Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I slightly prefer saying \u201cget out of captivity\u201d. We get out not by \u201cescaping\u201d in some sneaky way, but by going  through a series of steps and hoops. ",
              "createdAt": "2020-06-28T14:13:48Z",
              "updatedAt": "2020-06-30T11:45:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MjM1NDI4",
          "commit": {
            "abbreviatedOid": "f960353"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-29T15:03:25Z",
          "updatedAt": "2020-06-29T15:03:26Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Or, \"... how to obtain full network access...\"",
              "createdAt": "2020-06-29T15:03:25Z",
              "updatedAt": "2020-06-30T11:45:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NjE4ODQ2",
          "commit": {
            "abbreviatedOid": "f960353"
          },
          "author": "tfpauly",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-30T02:06:07Z",
          "updatedAt": "2020-06-30T02:06:07Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Yup, that\u2019s good!",
              "createdAt": "2020-06-30T02:06:07Z",
              "updatedAt": "2020-06-30T11:45:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzY0MzA4",
          "commit": {
            "abbreviatedOid": "6fa2592"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-06-30T20:33:07Z",
          "updatedAt": "2020-06-30T20:33:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 139,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQxMzY4NzU4",
      "title": "move normative language out of 4.2",
      "url": "https://github.com/capport-wg/architecture/pull/139",
      "state": "CLOSED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Move normative language out of section 4.2 and into the User Equipment\r\nsection. Also mention at the beginning of the section that the contained\r\nworkflows are not normative for good measure.\r\n\r\nFixes #96 ",
      "createdAt": "2020-06-29T12:14:11Z",
      "updatedAt": "2020-06-29T12:16:28Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "23e1ee00cc9af777bea9c8bc62759defaf5fe219",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-96-non-normative",
      "headRefOid": "e4f876de815e99e9863371ae8a50bd8fdbcbcc42",
      "closedAt": "2020-06-29T12:16:28Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Actually, going to rework this.",
          "createdAt": "2020-06-29T12:16:28Z",
          "updatedAt": "2020-06-29T12:16:28Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MDgwMTU1",
          "commit": {
            "abbreviatedOid": "e4f876d"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-29T12:14:37Z",
          "updatedAt": "2020-06-29T12:14:38Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Thoughts: does this really deserve its own section in here? Or should I just work it into the section more naturally?",
              "createdAt": "2020-06-29T12:14:37Z",
              "updatedAt": "2020-06-29T12:14:38Z"
            }
          ]
        }
      ]
    },
    {
      "number": 140,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQxMzc4NDIy",
      "title": "make section 4 not normative",
      "url": "https://github.com/capport-wg/architecture/pull/140",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "There was some concern that section 4 could be seen as normative. To make matters worse, there was some normative text in there. Rework things a bit to address that.\r\n\r\n- Explicitly call out that section 4 is not normative to avoid confusion\r\n- Move normative text out of 4.3 into 2.1\r\n- Add some more description to 4.3\r\n- Describe trust for new URIs\r\n\r\nFixes #96 \r\nFixes #98 ",
      "createdAt": "2020-06-29T12:30:08Z",
      "updatedAt": "2020-07-02T11:40:26Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "23e1ee00cc9af777bea9c8bc62759defaf5fe219",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-96-98-not-normative",
      "headRefOid": "bba18fec7366b4ba22a95f36f825c01bb5baa85f",
      "closedAt": "2020-07-02T11:40:26Z",
      "mergedAt": "2020-07-02T11:40:26Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "65d3173bb830a1372cd1c87c44ef803f2cbc4ae7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MjE1OTYz",
          "commit": {
            "abbreviatedOid": "dbd58db"
          },
          "author": "tfpauly",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-29T14:43:21Z",
          "updatedAt": "2020-06-29T14:43:22Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\n           Equipment can retrieve updated state from the URI immediately, or it can wait\r\n```",
              "createdAt": "2020-06-29T14:43:21Z",
              "updatedAt": "2020-07-01T11:00:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5OTMzMTcw",
          "commit": {
            "abbreviatedOid": "dbd58db"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-30T11:45:39Z",
          "updatedAt": "2020-06-30T11:45:40Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Thanks for the suggestion",
              "createdAt": "2020-06-30T11:45:40Z",
              "updatedAt": "2020-07-01T11:00:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzY1NjM2",
          "commit": {
            "abbreviatedOid": "654ffc8"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-30T20:35:10Z",
          "updatedAt": "2020-06-30T20:35:10Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\n         did to the URI it received initially from the network provisioning service.\r\n```",
              "createdAt": "2020-06-30T20:35:10Z",
              "updatedAt": "2020-07-01T11:00:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzY2Njc3",
          "commit": {
            "abbreviatedOid": "654ffc8"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-30T20:36:52Z",
          "updatedAt": "2020-06-30T20:36:52Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "should this be grouped with the other SHOULD above?",
              "createdAt": "2020-06-30T20:36:52Z",
              "updatedAt": "2020-07-01T11:00:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzY0Mjcz",
          "commit": {
            "abbreviatedOid": "654ffc8"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-01T10:57:46Z",
          "updatedAt": "2020-07-01T10:57:46Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "Thanks!",
              "createdAt": "2020-07-01T10:57:46Z",
              "updatedAt": "2020-07-01T11:00:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzY0NzA4",
          "commit": {
            "abbreviatedOid": "3179407"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-01T10:58:30Z",
          "updatedAt": "2020-07-01T10:58:31Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Good idea. Will do.",
              "createdAt": "2020-07-01T10:58:30Z",
              "updatedAt": "2020-07-01T11:00:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 141,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQxNDg1OTI2",
      "title": "\"User equipment ... MUST be given\" was unclear in passive voice.",
      "url": "https://github.com/capport-wg/architecture/pull/141",
      "state": "MERGED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes issue #117",
      "createdAt": "2020-06-29T15:19:37Z",
      "updatedAt": "2020-06-30T11:47:17Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "23e1ee00cc9af777bea9c8bc62759defaf5fe219",
      "headRepository": "capport-wg/architecture",
      "headRefName": "Fix-passive-must-be-given-language",
      "headRefOid": "50b546d756fe255f11c4a756635aab0317124841",
      "closedAt": "2020-06-30T11:47:17Z",
      "mergedAt": "2020-06-30T11:47:17Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "24e132c9fd2145aacae9e272a9dfac160d00b547"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5OTM0MDUz",
          "commit": {
            "abbreviatedOid": "50b546d"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Looks good. Thanks!",
          "createdAt": "2020-06-30T11:47:09Z",
          "updatedAt": "2020-06-30T11:47:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 142,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQxNDk5MDIw",
      "title": "Mention signal-flooding attack mitigation",
      "url": "https://github.com/capport-wg/architecture/pull/142",
      "state": "MERGED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "New SHOULD requirement to consider all signals as a single simple hint.\r\nFixes issue #102\r\n\r\nLooking for reviewers to confirm this new SHOULD is OK.",
      "createdAt": "2020-06-29T15:41:58Z",
      "updatedAt": "2020-07-02T11:41:23Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "23e1ee00cc9af777bea9c8bc62759defaf5fe219",
      "headRepository": "capport-wg/architecture",
      "headRefName": "Mention-signal-flood-attack-mitigation",
      "headRefOid": "3dd0679ecb3f8c3eccef57d68df0ab5355735119",
      "closedAt": "2020-07-02T11:41:23Z",
      "mergedAt": "2020-07-02T11:41:23Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "0aaa19dce2a3dc988456342634f2a9d54883809b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTkyMzEx",
          "commit": {
            "abbreviatedOid": "83f4fe5"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-30T00:39:50Z",
          "updatedAt": "2020-06-30T00:39:51Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Rather than name this (\"signal-flooding attack\") you can just describe it.\r\n\r\n\"Any attempt to generate excessive load on either User Equipment or API by sending a large number of signals will only result in a limited number of requests for updated status.\"",
              "createdAt": "2020-06-30T00:39:50Z",
              "updatedAt": "2020-07-01T12:13:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5OTA5NDc3",
          "commit": {
            "abbreviatedOid": "83f4fe5"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-30T11:08:06Z",
          "updatedAt": "2020-06-30T11:08:07Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "That's not quite the point I was trying to address. The question was about whether limiting requests could prevent information from being conveyed. I.e., by not sending a request that should be sent.\r\nI will see if I can avoid the \"signal-flooding\" term, however.",
              "createdAt": "2020-06-30T11:08:06Z",
              "updatedAt": "2020-07-01T12:13:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5OTE3MTM5",
          "commit": {
            "abbreviatedOid": "2330ae2"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-30T11:20:15Z",
          "updatedAt": "2020-06-30T11:20:16Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Please see the 2nd commit.",
              "createdAt": "2020-06-30T11:20:16Z",
              "updatedAt": "2020-07-01T12:13:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5OTM1NTg5",
          "commit": {
            "abbreviatedOid": "2330ae2"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Thanks for doing this! One nit and a comment regarding the new requirement.",
          "createdAt": "2020-06-30T11:49:37Z",
          "updatedAt": "2020-06-30T11:55:39Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n          <li>Accesses to the Captive Portal API are rate limited, reducing the impact of an\r\n```",
              "createdAt": "2020-06-30T11:49:37Z",
              "updatedAt": "2020-07-01T12:13:45Z"
            },
            {
              "originalPosition": 4,
              "body": "I think this could be contentious, because it does limit the number of use-cases of the signal. In the future, we might decide that the improved UX/functionality of a richer signal will outweigh the risks introduced by the complexity. Maybe we just need to mention that adding more signals would increase the difficulty of responding to attacks without information loss so that people consider it when designing their system.",
              "createdAt": "2020-06-30T11:54:49Z",
              "updatedAt": "2020-07-01T12:13:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMDcwODM0",
          "commit": {
            "abbreviatedOid": "72d9427"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-30T14:25:54Z",
          "updatedAt": "2020-06-30T14:25:54Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "See what you think of my update.",
              "createdAt": "2020-06-30T14:25:54Z",
              "updatedAt": "2020-07-01T12:13:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNDg3Nzk0",
          "commit": {
            "abbreviatedOid": "72d9427"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-01T01:24:16Z",
          "updatedAt": "2020-07-01T01:24:17Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n        equivalent by the User Equipment: as a hint to contact the API.\r\n```",
              "createdAt": "2020-07-01T01:24:16Z",
              "updatedAt": "2020-07-01T12:13:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzY3NDEy",
          "commit": {
            "abbreviatedOid": "72d9427"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-01T11:02:40Z",
          "updatedAt": "2020-07-01T11:02:41Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I think it's fine -- leaves the door open. ",
              "createdAt": "2020-07-01T11:02:40Z",
              "updatedAt": "2020-07-01T12:13:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTk3Mjg1",
          "commit": {
            "abbreviatedOid": "3dd0679"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2020-07-02T11:41:14Z",
          "updatedAt": "2020-07-02T11:41:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 143,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQxOTgwMTI2",
      "title": "rephrase section 7.1 section on secure URI",
      "url": "https://github.com/capport-wg/architecture/pull/143",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The language of this section was hard for some of the reviewers to\r\nunderstand. Rephrase it to be more explicit and clear.\r\n\r\nFix #99",
      "createdAt": "2020-06-30T12:00:56Z",
      "updatedAt": "2020-07-02T11:41:50Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "24e132c9fd2145aacae9e272a9dfac160d00b547",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-99-dhcpv6",
      "headRefOid": "4ec68ceea80525fb24ec07b9a72c102ac03ba554",
      "closedAt": "2020-07-02T11:41:50Z",
      "mergedAt": "2020-07-02T11:41:49Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "acfcbd204660fe90888ef854c9f0139c0e5c42a7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzY3ODIx",
          "commit": {
            "abbreviatedOid": "4a4a64c"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-30T20:38:44Z",
          "updatedAt": "2020-06-30T20:38:44Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n         The user makes an informed choice to visit and trust the Captive\r\n```",
              "createdAt": "2020-06-30T20:38:44Z",
              "updatedAt": "2020-07-01T11:00:38Z"
            }
          ]
        }
      ]
    },
    {
      "number": 144,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQyNjkxMTEy",
      "title": "Rewording the principles.",
      "url": "https://github.com/capport-wg/architecture/pull/144",
      "state": "MERGED",
      "author": "dcdolson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Attempting to fix issue #75.\r\n\r\nI attempted to reword the principles, adding more prose for the rationale. Also upgraded some SHOULD NOT to MUST NOT because it seems some people thought the SHOULD NOT says the existing approach is OK.\r\n\r\nThese are just some ideas. I won't be offended if rejected.",
      "createdAt": "2020-07-01T13:13:28Z",
      "updatedAt": "2020-07-03T19:36:08Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "e7f5a79e14fed2a5413aa3d148b2dabfd06d6f71",
      "headRepository": "capport-wg/architecture",
      "headRefName": "Rewording-principles",
      "headRefOid": "5c9743d2986926931a838d580f6afa6bb000d458",
      "closedAt": "2020-07-03T19:36:08Z",
      "mergedAt": "2020-07-03T19:36:07Z",
      "mergedBy": "dcdolson",
      "mergeCommit": {
        "oid": "2597d08f306b4ee7e71ec82826b990ccee3c3dc1"
      },
      "comments": [
        {
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I believe I addressed all comments. You'll probably want to review the complete diff again.",
          "createdAt": "2020-07-02T17:39:06Z",
          "updatedAt": "2020-07-02T17:39:06Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMjk0MjI2",
          "commit": {
            "abbreviatedOid": "03fd7f9"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "This is much clearer about intent.  My only real concern is with the possible duplication of one requirement.",
          "createdAt": "2020-07-02T01:36:55Z",
          "updatedAt": "2020-07-02T01:43:05Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n            Some attempt man-in-the-middle (MITM) proxy of HTTPS in\r\n```\r\n\r\nI've seen plenty of attempts, and I have heard that sometimes this is successful.  But we don't have to say that; attempts are bad enough.\r\n\r\nFWIW, my home router (which my ISP insists upon to an insane degree) will throw up a captive portal when the link to the outside world goes down.  That attempts TLS interception.",
              "createdAt": "2020-07-02T01:36:55Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\n            DNS or HTTP servers, or any other protocol.</li>\r\n```\r\nI think that use of \"forging\" is sufficient here.",
              "createdAt": "2020-07-02T01:37:42Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            },
            {
              "originalPosition": 28,
              "body": "Any point mentioning that this notification generally only works for browsers.  I see many applications fail in the presence of interception because they are using HTTP, but have no means of showing UX.\r\n\r\nFor instance, Zoom fails spectacularly.",
              "createdAt": "2020-07-02T01:39:03Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            },
            {
              "originalPosition": 29,
              "body": "```suggestion\r\n            application. Hence, solutions SHOULD allow a device to be alerted that\r\n```",
              "createdAt": "2020-07-02T01:39:24Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            },
            {
              "originalPosition": 32,
              "body": "This is really the same requirement as the previous one.  Could this be reduced to \"Devices SHOULD be able to query the network to determine whether the device is captive.\"  And then following with information about not being coupled to using intercepted protocols or being forced to send sacrificial requests.",
              "createdAt": "2020-07-02T01:41:40Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTk4NzYw",
          "commit": {
            "abbreviatedOid": "03fd7f9"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-02T11:43:38Z",
          "updatedAt": "2020-07-02T11:43:38Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "I think we should. It's a good point. The \"API\" experience is much worse off than a typical browsing experience.",
              "createdAt": "2020-07-02T11:43:38Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjAwNTQ5",
          "commit": {
            "abbreviatedOid": "03fd7f9"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-02T11:46:23Z",
          "updatedAt": "2020-07-02T11:46:24Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "FWIW, as part of #103, we had some suggestions to rephrase this specific point to become a positive, rather than negative, requirement. I think this section deals with the original objection well enough by laying out why it's a problem, but Michael's suggestion may still improve things.",
              "createdAt": "2020-07-02T11:46:23Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjAyMzQ3",
          "commit": {
            "abbreviatedOid": "03fd7f9"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Thanks!\r\n\r\nI left a few suggestions, and agree with Martin's. My biggest question is whether we want to still call this a list of principles, or a list of overarching solution requirements.",
          "createdAt": "2020-07-02T11:49:12Z",
          "updatedAt": "2020-07-02T11:56:23Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "Do we still want to call these principles?",
              "createdAt": "2020-07-02T11:49:12Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            },
            {
              "originalPosition": 42,
              "body": "```suggestion\r\n            \"canary\" (see\r\n         <xref target=\"app-additional\"/>) URIs in attempt to infer there is a captive network from\r\n```",
              "createdAt": "2020-07-02T11:51:23Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            },
            {
              "originalPosition": 42,
              "body": "An earlier change added a link to the definition of canary for clarity at its first use. This is earlier than the previous one, so we should link here. We can remove the link on line 321 if we take this suggestion.",
              "createdAt": "2020-07-02T11:52:05Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjA4MzM1",
          "commit": {
            "abbreviatedOid": "03fd7f9"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-02T11:58:18Z",
          "updatedAt": "2020-07-02T11:58:18Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "They seem like requirements, with explanatory notes.",
              "createdAt": "2020-07-02T11:58:18Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODc4MDM2",
          "commit": {
            "abbreviatedOid": "221f941"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-02T17:06:48Z",
          "updatedAt": "2020-07-02T17:06:48Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "I'm going to break into two points: 1. don't forge responses; 2. the user should be able to use DNSSEC and TLS (Michael's wording.)",
              "createdAt": "2020-07-02T17:06:48Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODk4OTc4",
          "commit": {
            "abbreviatedOid": "ad8a500"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-02T17:36:36Z",
          "updatedAt": "2020-07-02T17:36:36Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "it didn't seem wrong to leave both references to the app-additional section.",
              "createdAt": "2020-07-02T17:36:36Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODk5OTEz",
          "commit": {
            "abbreviatedOid": "ad8a500"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-02T17:38:09Z",
          "updatedAt": "2020-07-02T17:38:09Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "Two points combined. Please review.",
              "createdAt": "2020-07-02T17:38:09Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMTQyOTcz",
          "commit": {
            "abbreviatedOid": "ad8a500"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This is good.  Thanks for sorting through this; it's important that this is right, and you have cleared it up a lot.",
          "createdAt": "2020-07-03T04:46:26Z",
          "updatedAt": "2020-07-03T04:47:03Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "```suggestion\r\n            a standard protocol, rather than having to infer the state indirectly.</li>\r\n```",
              "createdAt": "2020-07-03T04:46:26Z",
              "updatedAt": "2020-07-03T19:30:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMzU0Nzg1",
          "commit": {
            "abbreviatedOid": "ad8a500"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Much clearer. Thanks!",
          "createdAt": "2020-07-03T11:40:33Z",
          "updatedAt": "2020-07-03T11:40:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 145,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQzNDcyOTc3",
      "title": "add user interaction to section 4.2",
      "url": "https://github.com/capport-wg/architecture/pull/145",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We should mention that the user is interacting with the UI to visit the\r\nportal, since that is important to the security model. Do so.\r\n\r\nFixes #97 ",
      "createdAt": "2020-07-02T12:04:48Z",
      "updatedAt": "2020-07-03T11:36:10Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "acfcbd204660fe90888ef854c9f0139c0e5c42a7",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-97-user-action",
      "headRefOid": "5fe3bbf68bb417a1d9ccea8e0f8852e0091f8af1",
      "closedAt": "2020-07-03T11:36:10Z",
      "mergedAt": "2020-07-03T11:36:10Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "08c381e8be106ca6a4e4503f72c65db678fd2810"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMTQwMzA3",
          "commit": {
            "abbreviatedOid": "5fe3bbf"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-03T04:34:51Z",
          "updatedAt": "2020-07-03T04:34:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 146,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQzNDgxMzEx",
      "title": "expand tls use in section 7.2",
      "url": "https://github.com/capport-wg/architecture/pull/146",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A reviewer pointed out that we need to specify how TLS is used. Link to\r\nthe existing procedure in the User Equipment requirements. Also rephrase\r\nso that it doesn't sound like we're suggestion that using TLS is\r\noptional.\r\n\r\nFixes #100",
      "createdAt": "2020-07-02T12:21:39Z",
      "updatedAt": "2020-07-03T11:41:48Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "acfcbd204660fe90888ef854c9f0139c0e5c42a7",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-100-expand-tls-7.2",
      "headRefOid": "3e56072f2f3a44bfd3250a8930d0911be779aa79",
      "closedAt": "2020-07-03T11:41:48Z",
      "mergedAt": "2020-07-03T11:41:47Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "f602a2286044969af2dc247b994753ec49dbd067"
      },
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm not sure if my 'link' is a good idea. I could just repeat the procedure verbatim, I suppose, but it seems like a waste of text.",
          "createdAt": "2020-07-02T12:22:10Z",
          "updatedAt": "2020-07-02T12:22:10Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMTQwNzIy",
          "commit": {
            "abbreviatedOid": "eb68822"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This looks fine, but it might be more concise.",
          "createdAt": "2020-07-03T04:36:46Z",
          "updatedAt": "2020-07-03T04:37:14Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n         access the API server, the User Equipment authenticates the \r\n         server; see <xref target=\"section_client\"/>.\r\n```\r\n\r\nMaybe something simpler.",
              "createdAt": "2020-07-03T04:36:46Z",
              "updatedAt": "2020-07-03T11:41:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMzU1MjU2",
          "commit": {
            "abbreviatedOid": "eb68822"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-03T11:41:28Z",
          "updatedAt": "2020-07-03T11:41:29Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I guess since we're referring to that section, there's no point in complicating it!",
              "createdAt": "2020-07-03T11:41:28Z",
              "updatedAt": "2020-07-03T11:41:33Z"
            }
          ]
        }
      ]
    },
    {
      "number": 147,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ0MDI5MDM2",
      "title": "describe attacker in Secure APIs section",
      "url": "https://github.com/capport-wg/architecture/pull/147",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "One of the reviewers asked for more information about the attacker in\r\nsection 7.3. This does so, describing what the attacker could achieve\r\nby compromising the security.\r\n\r\nFixes #101",
      "createdAt": "2020-07-03T12:19:07Z",
      "updatedAt": "2020-08-07T11:56:45Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "f602a2286044969af2dc247b994753ec49dbd067",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-101-describe-attacker",
      "headRefOid": "55f16e2757ca10079588f2fdc72a50cd8fb75e71",
      "closedAt": "2020-08-07T11:56:44Z",
      "mergedAt": "2020-08-07T11:56:44Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "39475b660d708791fce92b72b652a9c0077a5c8d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyOTYyOTcw",
          "commit": {
            "abbreviatedOid": "55f16e2"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-08-07T00:33:44Z",
          "updatedAt": "2020-08-07T00:33:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 148,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ0MjczMjE3",
      "title": "expand provisioning service section",
      "url": "https://github.com/capport-wg/architecture/pull/148",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We didn't really lay out the role of the provisioning service. While we\r\nstill don't have any requirements on it, this changes the provisioning\r\nservice section to give more guidance about its role in the network.\r\n\r\nFixes #106 ",
      "createdAt": "2020-07-04T11:28:07Z",
      "updatedAt": "2020-07-06T11:45:43Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "2597d08f306b4ee7e71ec82826b990ccee3c3dc1",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-106-expand-2.2",
      "headRefOid": "9be2d00cc494cc4e782b4002bb45625a5869e38d",
      "closedAt": "2020-07-06T11:45:43Z",
      "mergedAt": "2020-07-06T11:45:43Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "5d490b265f95d7b1bcf4364f439e3ea2685ff093"
      },
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Any thoughts on whether we should expand to add some requirements? E.g. URI scheme MUST be HTTPS.",
          "createdAt": "2020-07-04T11:32:12Z",
          "updatedAt": "2020-07-04T11:32:12Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNzIzMDc4",
          "commit": {
            "abbreviatedOid": "d187f29"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-06T00:46:52Z",
          "updatedAt": "2020-07-06T00:46:56Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n          access to the Captive Network (e.g., by providing it with an IP address).\r\n```",
              "createdAt": "2020-07-06T00:46:52Z",
              "updatedAt": "2020-07-06T11:44:08Z"
            }
          ]
        }
      ]
    },
    {
      "number": 149,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ0Mjc1OTQ3",
      "title": "Mention API response as state in UE section",
      "url": "https://github.com/capport-wg/architecture/pull/149",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "In section 4.2, we describe a condition where the session is about to\r\nexpire. The UE detects this by consulting some form of storage. Yet, we\r\nnever mentioned that it was proper to store any state.\r\n\r\nThis commit adds a small section outlining that the UE can store state,\r\nwith a brief discussion about the tradeoffs in doing so.\r\n\r\nFixes #108 ",
      "createdAt": "2020-07-04T11:56:33Z",
      "updatedAt": "2020-07-06T11:47:05Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "2597d08f306b4ee7e71ec82826b990ccee3c3dc1",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-108-storing-api-response",
      "headRefOid": "0e1ced5ec25471a4873d310dace1d4747e6e7604",
      "closedAt": "2020-07-06T11:47:05Z",
      "mergedAt": "2020-07-06T11:47:05Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "654ca3e86d98b0701b95f41e46bf70b4dc777a9a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNzIzMTg5",
          "commit": {
            "abbreviatedOid": "1cb28fa"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-06T00:47:45Z",
          "updatedAt": "2020-07-06T00:47:50Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n        time. Storing state in this way can reduce the need for communication with the\r\n        Captive Portal API. However, it could lead to the state becoming\r\n```",
              "createdAt": "2020-07-06T00:47:45Z",
              "updatedAt": "2020-07-06T11:45:10Z"
            }
          ]
        }
      ]
    },
    {
      "number": 151,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ0NzI0OTk5",
      "title": "replace normative language in 3.1",
      "url": "https://github.com/capport-wg/architecture/pull/151",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We were unnecessarily using normative language in section 3.1. Replace\r\nit with non-normative language.\r\n\r\nFixes #112",
      "createdAt": "2020-07-06T11:51:55Z",
      "updatedAt": "2020-07-07T11:47:48Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "654ca3e86d98b0701b95f41e46bf70b4dc777a9a",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-112-non-normative",
      "headRefOid": "747008c75cfd45f1cb18ed57711387dd2f2a2c4d",
      "closedAt": "2020-07-07T11:47:48Z",
      "mergedAt": "2020-07-07T11:47:48Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "3e316fa34a98904c943f34d545a7e6890b03def0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTY4Mzgx",
          "commit": {
            "abbreviatedOid": "747008c"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-07T05:17:44Z",
          "updatedAt": "2020-07-07T05:17:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 152,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ0NzMxMzEy",
      "title": "mention on path attacks in 7.1",
      "url": "https://github.com/capport-wg/architecture/pull/152",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "When we trust a network, we introduce the risk of on path attacks.\r\nMention a few of them as possibilities.\r\n\r\nFixes #110\r\n\r\nA few questions for the reviewers:\r\n - Should we mention that the list is not exhaustive, or is that implied?\r\n - Should we mention mitigating factors? (i.e. some of the attacks I've mentioned should be prevented w/ proper use of TLS).",
      "createdAt": "2020-07-06T12:05:17Z",
      "updatedAt": "2020-07-07T11:48:49Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "654ca3e86d98b0701b95f41e46bf70b4dc777a9a",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-110-on-path-7.1",
      "headRefOid": "9129191902fb79b03983e424b1e87899770a381e",
      "closedAt": "2020-07-07T11:48:49Z",
      "mergedAt": "2020-07-07T11:48:49Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "ceed9f47284b60009d109e1ca485ff27b0250184"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTcyODQx",
          "commit": {
            "abbreviatedOid": "9370b9c"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-07T05:31:41Z",
          "updatedAt": "2020-07-07T05:31:43Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n         destinations. The attacker could analyze the user's\r\n```\r\n\r\nNo point in going beyond the attack.  Malicious payloads is something we should be well-prepared for (even if in practice we aren't).",
              "createdAt": "2020-07-07T05:31:41Z",
              "updatedAt": "2020-07-07T11:48:13Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzODEzMzYx",
          "commit": {
            "abbreviatedOid": "9370b9c"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T11:48:06Z",
          "updatedAt": "2020-07-07T11:48:07Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Thanks",
              "createdAt": "2020-07-07T11:48:06Z",
              "updatedAt": "2020-07-07T11:48:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 153,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1MzYyNDA5",
      "title": "remove normative MAY from section 2.1",
      "url": "https://github.com/capport-wg/architecture/pull/153",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We didn't need this. Replace it with can.\r\n\r\nFixes #116",
      "createdAt": "2020-07-07T11:52:05Z",
      "updatedAt": "2020-07-07T11:55:09Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "ceed9f47284b60009d109e1ca485ff27b0250184",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-116-remove-may-2.1",
      "headRefOid": "4eb90b235a30d2aae2b9ff2af0e634b73f5c36db",
      "closedAt": "2020-07-07T11:55:09Z",
      "mergedAt": "2020-07-07T11:55:09Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "34641dde8abc30c78c14cbd0d20250c5b94ce44a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 154,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1MzY4OTk4",
      "title": "Include UE joining network in figure 1",
      "url": "https://github.com/capport-wg/architecture/pull/154",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A reviewer pointed out that the diagram made it look like the\r\nprovisioning service triggers the entire process, whereas the UE joining\r\nthe network is what does so. Add a Join Network interaction to the\r\ndiagram.\r\n\r\nFixes #113 ",
      "createdAt": "2020-07-07T12:05:41Z",
      "updatedAt": "2020-07-08T11:43:10Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "34641dde8abc30c78c14cbd0d20250c5b94ce44a",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-113-figure-1-send",
      "headRefOid": "abee571243f8ec854c10f94cec1c3a69a3ca0283",
      "closedAt": "2020-07-08T11:43:09Z",
      "mergedAt": "2020-07-08T11:43:09Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "b2d1c8c58d80a8c1e99f8ab23a09b4e99e8adb3b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MjI4Nzkz",
          "commit": {
            "abbreviatedOid": "abee571"
          },
          "author": "tfpauly",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-07T20:33:18Z",
          "updatedAt": "2020-07-07T20:33:18Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzUzMzI1",
          "commit": {
            "abbreviatedOid": "abee571"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-08T01:30:01Z",
          "updatedAt": "2020-07-08T01:30:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 155,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ2MTk1NDM4",
      "title": "use consistent terminology for signalling",
      "url": "https://github.com/capport-wg/architecture/pull/155",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A reviewer pointed out that we used notifying, informing, signalling, and\r\nalerting to mean the same thing: sending the Captive Portal Signal. I've\r\nchosen to use signal as the verb of choice.\r\n\r\nThe phrasing seems a bit awkward in a few places, so I'm not 100% confident in my choice here.\r\n\r\nFixes #111",
      "createdAt": "2020-07-08T11:59:17Z",
      "updatedAt": "2020-07-10T11:45:05Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "b2d1c8c58d80a8c1e99f8ab23a09b4e99e8adb3b",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-111-consistent-notify-term",
      "headRefOid": "c45e1e8745a0fbea92b7f3017cb8a98e9a0b51dd",
      "closedAt": "2020-07-10T11:45:05Z",
      "mergedAt": "2020-07-10T11:45:05Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "33ed1468b3f8a967781e4257ce157f36d5cd7b99"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjE5NTc4",
          "commit": {
            "abbreviatedOid": "44a849f"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Are we using User Equipment of end-user device?",
          "createdAt": "2020-07-09T00:48:38Z",
          "updatedAt": "2020-07-09T00:49:43Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Maybe take the active voice here:\r\n\r\nA Captive Network (term?) could signal User Equipment to notify them in response to transmissions by the User Equipment.",
              "createdAt": "2020-07-09T00:48:38Z",
              "updatedAt": "2020-07-09T12:01:09Z"
            },
            {
              "originalPosition": 17,
              "body": "```suggestion\r\n            Receipt of a Captive Portal Signal provides a hint that an end-user device could be captive.\r\n```",
              "createdAt": "2020-07-09T00:49:12Z",
              "updatedAt": "2020-07-09T12:01:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NTQzNDI4",
          "commit": {
            "abbreviatedOid": "6caa51a"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-09T11:53:30Z",
          "updatedAt": "2020-07-09T11:53:31Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Hmmm. Yeah. We missed this when doing the terminology cleanup",
              "createdAt": "2020-07-09T11:53:31Z",
              "updatedAt": "2020-07-09T12:01:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NTQ0MzA3",
          "commit": {
            "abbreviatedOid": "6caa51a"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-09T11:54:54Z",
          "updatedAt": "2020-07-09T11:54:55Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Whoops. Will clean this up.",
              "createdAt": "2020-07-09T11:54:54Z",
              "updatedAt": "2020-07-09T12:01:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NTQ5MDA3",
          "commit": {
            "abbreviatedOid": "c45e1e8"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-09T12:02:10Z",
          "updatedAt": "2020-07-09T12:02:10Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "My only concern with the new phrasing is that we've dropped 'Captive Portal Signal'. However, I think that makes this point a good segue into the next one: this says that the UE can be signalled. The next describes what that signal means.",
              "createdAt": "2020-07-09T12:02:10Z",
              "updatedAt": "2020-07-09T12:02:11Z"
            }
          ]
        }
      ]
    },
    {
      "number": 156,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ2ODIzOTYz",
      "title": "add an api requirement that UE alone can request",
      "url": "https://github.com/capport-wg/architecture/pull/156",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A reviewer pointed out that we never really said that it was a desired\r\nproprety of the API that it limit access to a UE's state to itself. Add\r\na requirement to that effect so we're explicit about that goal, and\r\nreference the identifier section that describes that it's a good\r\nproperty for the identity.\r\n\r\nFixes #118 ",
      "createdAt": "2020-07-09T12:19:25Z",
      "updatedAt": "2020-07-10T11:44:12Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "b2d1c8c58d80a8c1e99f8ab23a09b4e99e8adb3b",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-118-only-ue-can-check",
      "headRefOid": "08935ac3e1c4f65468c4fe5c7be9e6691037e859",
      "closedAt": "2020-07-10T11:44:12Z",
      "mergedAt": "2020-07-10T11:44:11Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "3bbd599a91149aa81a3854cd0f204e81022929d2"
      },
      "comments": [
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "One thing we're not addressing here is a similar requirement on the User Portal. I feel like we should probably have one. Thoughts?",
          "createdAt": "2020-07-09T12:21:00Z",
          "updatedAt": "2020-07-09T12:21:00Z"
        },
        {
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "body": "\r\n> If you feel motivated, you could add something, but it's tricky. The user portal doesn't need to use strong identifiers, because it can base its decisions on other things than the UE identifier. For instance, a capability URL (that is, a hard-to-guess URL) embedded in the API requires no external authentication.\r\n\r\nThanks. Perhaps I'll do this in a separate PR to address #95 \r\n",
          "createdAt": "2020-07-10T11:44:06Z",
          "updatedAt": "2020-07-10T11:44:06Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDQ0NjEz",
          "commit": {
            "abbreviatedOid": "08935ac"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Nice.\r\n\r\nI think that this is sufficient.  The portal itself can use things like capability URLs to avoid needing this sort of check.  (And then we're far into design and not architecture; this is nice because it talks about requirements.)\r\n\r\nIf you feel motivated, you could add something, but it's tricky.  The user portal doesn't need to use strong identifiers, because it can base its decisions on other things than the UE identifier.  For instance, a capability URL (that is, a hard-to-guess URL) embedded in the API requires no external authentication.",
          "createdAt": "2020-07-10T00:05:35Z",
          "updatedAt": "2020-07-10T00:05:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 157,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ3NDAzOTU5",
      "title": "add a privacy section",
      "url": "https://github.com/capport-wg/architecture/pull/157",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This adds a privacy section which discusses the implications of the User\r\nEquipment identity.\r\n\r\nI'm open to suggestions for more content here. Some thoughts:\r\n - State that may not contain the identity, but can be mapped to from it?\r\n - Logging?\r\n\r\nFixes #109",
      "createdAt": "2020-07-10T12:10:27Z",
      "updatedAt": "2020-08-06T11:50:17Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "33ed1468b3f8a967781e4257ce157f36d5cd7b99",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-109-privacy-section",
      "headRefOid": "4da80279125136995eb6f5ff8966aeeab1df83ee",
      "closedAt": "2020-08-06T11:50:17Z",
      "mergedAt": "2020-08-06T11:50:17Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "6e4187d15eb9f5fa48fb7dc08dbcedf229cf5a9a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MDE1ODg1",
          "commit": {
            "abbreviatedOid": "a84b90e"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-30T01:44:10Z",
          "updatedAt": "2020-07-30T01:44:10Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Will be \"Captive Portal\" I assume, considering the  other PR.\r\nAnd instead of \"agree on\", how about, \"... all components within the Captive Portal system are designed to use the same identifier to uniquely identify User Equipment.\"",
              "createdAt": "2020-07-30T01:44:10Z",
              "updatedAt": "2020-08-04T11:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MDIzMDQw",
          "commit": {
            "abbreviatedOid": "a84b90e"
          },
          "author": "dcdolson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-30T02:07:26Z",
          "updatedAt": "2020-07-30T02:07:27Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "\"There are benefits to choosing mutable anonymous identifiers.\"",
              "createdAt": "2020-07-30T02:07:26Z",
              "updatedAt": "2020-08-04T11:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNzQzMDM3",
          "commit": {
            "abbreviatedOid": "a84b90e"
          },
          "author": "klarose",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-04T11:55:40Z",
          "updatedAt": "2020-08-04T11:55:40Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Right. Thanks",
              "createdAt": "2020-08-04T11:55:40Z",
              "updatedAt": "2020-08-04T11:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMDIxMDUx",
          "commit": {
            "abbreviatedOid": "4da8027"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-08-05T21:02:15Z",
          "updatedAt": "2020-08-05T21:02:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 158,
      "id": "MDExOlB1bGxSZXF1ZXN0NDUwMTMxMzc0",
      "title": "replace Captive Network with Captive Portal",
      "url": "https://github.com/capport-wg/architecture/pull/158",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A reviewer pointed out that Captive Portal and Captive Network were used\r\ninterchangeably in the document. While we used Captive Network more\r\nfrequently, Captive Portal aligns more closely with familiar use of the\r\nterm. Further, other documents such as the API draft refer to the system\r\nas a whole as a Captive Portal, which makes this change more aligned\r\nwith them.\r\n\r\n\r\nFixes #72 ",
      "createdAt": "2020-07-16T11:45:54Z",
      "updatedAt": "2020-08-06T11:48:53Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "33ed1468b3f8a967781e4257ce157f36d5cd7b99",
      "headRepository": "capport-wg/architecture",
      "headRefName": "issue-72-use-portal",
      "headRefOid": "f887a07ea9b2c0d795b33a1459f21c1469d924e4",
      "closedAt": "2020-08-06T11:48:53Z",
      "mergedAt": "2020-08-06T11:48:53Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "c0ea98e9085139587f85c69fba8bf453271422e7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMDE5NTAy",
          "commit": {
            "abbreviatedOid": "f887a07"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-08-05T20:59:57Z",
          "updatedAt": "2020-08-05T20:59:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 159,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY0NDM2NTU0",
      "title": "Remove mentioning of PvD in abstract section",
      "url": "https://github.com/capport-wg/architecture/pull/159",
      "state": "MERGED",
      "author": "liucougar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "closes #150",
      "createdAt": "2020-08-07T07:12:20Z",
      "updatedAt": "2020-08-07T17:22:02Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "6e4187d15eb9f5fa48fb7dc08dbcedf229cf5a9a",
      "headRepository": "liucougar/architecture",
      "headRefName": "revisit_abstract",
      "headRefOid": "b1a4aec65be8f65492f232b64ffe4c73c288188a",
      "closedAt": "2020-08-07T17:22:02Z",
      "mergedAt": "2020-08-07T17:22:01Z",
      "mergedBy": "liucougar",
      "mergeCommit": {
        "oid": "9a72d82263a3f34eb9ae2c80564e2eb1e3a3862d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMTM4NDEy",
          "commit": {
            "abbreviatedOid": "b1a4aec"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-08-07T08:41:43Z",
          "updatedAt": "2020-08-07T08:41:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 160,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY1MDIxNzcw",
      "title": "bump to version 9",
      "url": "https://github.com/capport-wg/architecture/pull/160",
      "state": "MERGED",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-08-08T11:34:47Z",
      "updatedAt": "2020-08-08T11:35:15Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "9a72d82263a3f34eb9ae2c80564e2eb1e3a3862d",
      "headRepository": "capport-wg/architecture",
      "headRefName": "version-9",
      "headRefOid": "160caff741bedcb51474bc7ea2a4ba12b6383226",
      "closedAt": "2020-08-08T11:35:15Z",
      "mergedAt": "2020-08-08T11:35:15Z",
      "mergedBy": "klarose",
      "mergeCommit": {
        "oid": "6d8681434c9ea53e6bf776895a1dbd8610b8db59"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 161,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY1MjI1OTc2",
      "title": "Just one typo",
      "url": "https://github.com/capport-wg/architecture/pull/161",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-08-10T00:34:19Z",
      "updatedAt": "2020-08-10T04:14:13Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "6d8681434c9ea53e6bf776895a1dbd8610b8db59",
      "headRepository": "martinthomson/architecture",
      "headRefName": "benefits",
      "headRefOid": "487dec2b76517d427bdb7b0430a6d9dc189912d3",
      "closedAt": "2020-08-10T04:14:12Z",
      "mergedAt": "2020-08-10T04:14:12Z",
      "mergedBy": "liucougar",
      "mergeCommit": {
        "oid": "4b058f003e617ae99d194381472eaa430780ae40"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTQ5MzM0",
          "commit": {
            "abbreviatedOid": "487dec2"
          },
          "author": "liucougar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-08-10T04:13:52Z",
          "updatedAt": "2020-08-10T04:13:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 162,
      "id": "MDExOlB1bGxSZXF1ZXN0NDkwOTE3MzU1",
      "title": "fix phrasing and clean up captive networks",
      "url": "https://github.com/capport-wg/architecture/pull/162",
      "state": "OPEN",
      "author": "klarose",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A reviewer found a problem with some phrasing, and also noticed that we\r\nmissed a few captive networks. Clean them up.",
      "createdAt": "2020-09-22T12:50:58Z",
      "updatedAt": "2020-09-22T12:50:58Z",
      "baseRepository": "capport-wg/architecture",
      "baseRefName": "master",
      "baseRefOid": "4b058f003e617ae99d194381472eaa430780ae40",
      "headRepository": "capport-wg/architecture",
      "headRefName": "various-fixes",
      "headRefOid": "a79b1560514401d6c810905e872195530d497f75",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}